"use strict";
(function(module) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], function(exports)  {
            module(exports);
        });
    } else if (typeof exports === 'object' && exports !== null && typeof exports.nodeName !== 'string') {
        module(exports);
    } else {
        module(typeof self !== 'undefined' ? self : this);
}
}(function($rt_exports) {
let $rt_seed = 2463534242,
$rt_nextId = () => {
    let x = $rt_seed;
    x ^= x << 13;
    x ^= x >>> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
},
$rt_wrapFunction0 = f => function() {
    return f(this);
},
$rt_wrapFunction1 = f => function(p1) {
    return f(this, p1);
},
$rt_wrapFunction2 = f => function(p1, p2) {
    return f(this, p1, p2);
},
$rt_wrapFunction3 = f => function(p1, p2, p3) {
    return f(this, p1, p2, p3, p3);
},
$rt_wrapFunction4 = f => function(p1, p2, p3, p4) {
    return f(this, p1, p2, p3, p4);
},
$rt_mainStarter = f => (args, callback) => {
    if (!args) {
        args = [];
    }
    let javaArgs = $rt_createArray($rt_objcls(), args.length);
    for (let i = 0;i < args.length;++i) {
        javaArgs.data[i] = $rt_str(args[i]);
    }
    $rt_startThread(() => {
        f.call(null, javaArgs);
    }, callback);
},
$rt_eraseClinit = target => target.$clinit = () => {
},
$dbg_class = obj => {
    let cls = obj.constructor;
    let arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    let clsName = "";
    if (cls.$meta.primitive) {
        clsName = cls.$meta.name;
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
},
$rt_classWithoutFields = superclass => {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
},
$rt_cls = cls => jl_Class_getClass(cls),
$rt_objcls = () => jl_Object,
$rt_getThread = () => {
    {
        return jl_Thread_currentThread0();
    }
},
$rt_setThread = t => {
    {
        return jl_Thread_setCurrentThread(t);
    }
},
$rt_callWithReceiver = f => function() {
    return f.apply(null, [this].concat(Array.prototype.slice.call(arguments)));
},
$rt_createcls = () => {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
},
$rt_createPrimitiveCls = (name, binaryName) => {
    let cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
},
$rt_booleancls = $rt_createPrimitiveCls("boolean", "Z"),
$rt_charcls = $rt_createPrimitiveCls("char", "C"),
$rt_bytecls = $rt_createPrimitiveCls("byte", "B"),
$rt_shortcls = $rt_createPrimitiveCls("short", "S"),
$rt_intcls = $rt_createPrimitiveCls("int", "I"),
$rt_longcls = $rt_createPrimitiveCls("long", "J"),
$rt_floatcls = $rt_createPrimitiveCls("float", "F"),
$rt_voidcls = $rt_createPrimitiveCls("void", "V"),
$rt_numberConversionBuffer = new ArrayBuffer(16),
$rt_numberConversionFloatArray = new Float32Array($rt_numberConversionBuffer),
$rt_numberConversionIntArray = new Int32Array($rt_numberConversionBuffer),
$rt_floatToRawIntBits = n => {
    $rt_numberConversionFloatArray[0] = n;
    return $rt_numberConversionIntArray[0];
},
$rt_intBitsToFloat = n => {
    $rt_numberConversionIntArray[0] = n;
    return $rt_numberConversionFloatArray[0];
},
$rt_compare = (a, b) => a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1,
$rt_imul = Math.imul || function(a, b) {
    let ah = a >>> 16 & 0xFFFF;
    let al = a & 0xFFFF;
    let bh = b >>> 16 & 0xFFFF;
    let bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
},
$rt_udiv = (a, b) => (a >>> 0) / (b >>> 0) >>> 0,
$rt_umod = (a, b) => (a >>> 0) % (b >>> 0) >>> 0,
$rt_ucmp = (a, b) => {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_ZERO = BigInt(0),
Long_create = (lo, hi) => BigInt.asIntN(64, BigInt.asUintN(64, BigInt(lo)) | BigInt.asUintN(64, BigInt(hi) << BigInt(32))),
Long_fromInt = val => BigInt.asIntN(64, BigInt(val | 0)),
Long_fromNumber = val => BigInt.asIntN(64, BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val))),
Long_toNumber = val => Number(val),
Long_lo = val => Number(BigInt.asIntN(32, val)) | 0,
Long_eq = (a, b) => a === b,
Long_ne = (a, b) => a !== b,
Long_gt = (a, b) => a > b,
Long_lt = (a, b) => a < b,
Long_le = (a, b) => a <= b,
Long_add = (a, b) => BigInt.asIntN(64, a + b),
Long_neg = a => BigInt.asIntN(64,  -a),
Long_sub = (a, b) => BigInt.asIntN(64, a - b);
let Long_ucompare = (a, b) => {
    a = BigInt.asUintN(64, a);
    b = BigInt.asUintN(64, b);
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_mul = (a, b) => BigInt.asIntN(64, a * b),
Long_div = (a, b) => BigInt.asIntN(64, a / b),
Long_udiv = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b)),
Long_rem = (a, b) => BigInt.asIntN(64, a % b),
Long_urem = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b)),
Long_and = (a, b) => BigInt.asIntN(64, a & b),
Long_or = (a, b) => BigInt.asIntN(64, a | b),
Long_xor = (a, b) => BigInt.asIntN(64, a ^ b),
Long_shl = (a, b) => BigInt.asIntN(64, a << BigInt(b & 63)),
Long_shru = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63)),
$rt_createArray = (cls, sz) => {
    let data = new Array(sz);
    data.fill(null);
    return new ($rt_arraycls(cls))(data);
},
$rt_wrapArray = (cls, data) => new ($rt_arraycls(cls))(data),
$rt_createUnfilledArray = (cls, sz) => new ($rt_arraycls(cls))(new Array(sz)),
$rt_createLongArray = sz => new $rt_longArrayCls(new BigInt64Array(sz)),
$rt_createLongArrayFromData = data => {
    let buffer = new BigInt64Array(data.length);
    buffer.set(data);
    return new $rt_longArrayCls(buffer);
},
$rt_createCharArray = sz => new $rt_charArrayCls(new Uint16Array(sz)),
$rt_createCharArrayFromData = data => {
    let buffer = new Uint16Array(data.length);
    buffer.set(data);
    return new $rt_charArrayCls(buffer);
},
$rt_createByteArray = sz => new $rt_byteArrayCls(new Int8Array(sz)),
$rt_createShortArray = sz => new $rt_shortArrayCls(new Int16Array(sz)),
$rt_createIntArray = sz => new $rt_intArrayCls(new Int32Array(sz)),
$rt_createIntArrayFromData = data => {
    let buffer = new Int32Array(data.length);
    buffer.set(data);
    return new $rt_intArrayCls(buffer);
},
$rt_createBooleanArray = sz => new $rt_booleanArrayCls(new Int8Array(sz)),
$rt_createFloatArray = sz => new $rt_floatArrayCls(new Float32Array(sz)),
$rt_arraycls = cls => {
    let result = cls.$array;
    if (result === null) {
        function JavaArray(data) {
            ($rt_objcls()).call(this);
            this.data = data;
        }
        JavaArray.prototype = Object.create(($rt_objcls()).prototype);
        JavaArray.prototype.type = cls;
        JavaArray.prototype.constructor = JavaArray;
        JavaArray.prototype.toString = function() {
            let str = "[";
            for (let i = 0;i < this.data.length;++i) {
                if (i > 0) {
                    str += ", ";
                }
                str += this.data[i].toString();
            }
            str += "]";
            return str;
        };
        JavaArray.prototype.$clone0 = function() {
            let dataCopy;
            if ('slice' in this.data) {
                dataCopy = this.data.slice();
            } else {
                dataCopy = new this.data.constructor(this.data.length);
                for (let i = 0;i < dataCopy.length;++i) {
                    dataCopy[i] = this.data[i];
                }
            }
            return new ($rt_arraycls(this.type))(dataCopy);
        };
        let name = "[" + cls.$meta.binaryName;
        JavaArray.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        JavaArray.classObject = null;
        JavaArray.$array = null;
        result = JavaArray;
        cls.$array = JavaArray;
    }
    return result;
},
$rt_createMultiArray = (cls, dimensions) => {
    let first = 0;
    for (let i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (let i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    let arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    let firstDim = dimensions[first] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
},
$rt_primitiveArrayCount = (dimensions, start) => {
    let val = dimensions[start + 1] | 0;
    for (let i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
},
$rt_createMultiArrayImpl = (cls, arrays, dimensions, start) => {
    let limit = arrays.length;
    for (let i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        let dim = dimensions[i];
        let index = 0;
        let packedIndex = 0;
        while (index < limit) {
            let arr = $rt_createUnfilledArray(cls, dim);
            for (let j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
},
$rt_stringPool_instance,
$rt_stringPool = strings => {
    $rt_stringClassInit();
    $rt_stringPool_instance = new Array(strings.length);
    for (let i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
},
$rt_s = index => $rt_stringPool_instance[index],
$rt_charArrayToString = (array, offset, count) => {
    let result = "";
    let limit = offset + count;
    for (let i = offset;i < limit;i = i + 1024 | 0) {
        let next = Math.min(limit, i + 1024 | 0);
        result += String.fromCharCode.apply(null, array.subarray(i, next));
    }
    return result;
},
$rt_fullArrayToString = array => $rt_charArrayToString(array, 0, array.length),
$rt_stringToCharArray = (string, begin, dst, dstBegin, count) => {
    for (let i = 0;i < count;i = i + 1 | 0) {
        dst[dstBegin + i] = string.charCodeAt(begin + i);
    }
},
$rt_fastStringToCharArray = string => {
    let array = new Uint16Array(string.length);
    for (let i = 0;i < array.length;++i) {
        array[i] = string.charCodeAt(i);
    }
    return new $rt_charArrayCls(array);
},
$rt_str = str => str === null ? null : jl_String__init_3(str),
$rt_ustr = str => str === null ? null : str.$nativeString,
$rt_stringClassInit = () => (() => {})(),
$rt_intern;
{
    $rt_intern = str => str;
}
let $rt_isInstance = (obj, cls) => obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls),
$rt_isAssignable = (from, to) => {
    if (from === to) {
        return true;
    }
    let map = from.$meta.assignableCache;
    if (typeof map === 'undefined') {
        map = new Map();
        from.$meta.assignableCache = map;
    }
    let cachedResult = map.get(to);
    if (typeof cachedResult !== 'undefined') {
        return cachedResult;
    }
    if (to.$meta.item !== null) {
        let result = from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        map.set(to, result);
        return result;
    }
    let supertypes = from.$meta.supertypes;
    for (let i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            map.set(to, true);
            return true;
        }
    }
    map.set(to, false);
    return false;
},
$rt_throw = ex => {
    throw $rt_exception(ex);
},
$rt_javaExceptionProp = Symbol("javaException"),
$rt_exception = ex => {
    if (!ex.$jsException) {
        $rt_fillNativeException(ex);
    }
    return ex.$jsException;
},
$rt_fillNativeException = ex => {
    let javaCause = $rt_throwableCause(ex);
    let jsCause = javaCause !== null ? javaCause.$jsException : void 0;
    let cause = typeof jsCause === "object" ? { cause : jsCause } : void 0;
    let err = new JavaError("Java exception thrown", cause);
    if (typeof Error.captureStackTrace === "function") {
        Error.captureStackTrace(err);
    }
    err[$rt_javaExceptionProp] = ex;
    ex.$jsException = err;
    $rt_fillStack(err, ex);
},
$rt_fillStack = (err, ex) => {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        let stack = $rt_decodeStack(err.stack);
        let javaStack = $rt_createArray($rt_stecls(), stack.length);
        let elem;
        let noStack = false;
        for (let i = 0;i < stack.length;++i) {
            let element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
},
JavaError;
if (typeof Reflect === 'object') {
    let defaultMessage = Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        let self = Reflect.construct(Error, [void 0, cause], JavaError);
        Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    }
    ;
    JavaError.prototype = Object.create(Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get() {
        try {
            let javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                let javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = Error;
}
let $rt_javaException = e => e instanceof Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null,
$rt_wrapException = err => {
    let ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
},
$rt_createException = message => jl_RuntimeException__init_1(message),
$rt_throwableMessage = t => jl_Throwable_getMessage(t),
$rt_throwableCause = t => jl_Throwable_getCause(t),
$rt_stecls = () => $rt_objcls(),
$rt_createStackElement = (className, methodName, fileName, lineNumber) => {
    {
        return null;
    }
},
$rt_setStack = (e, stack) => {
},
$rt_createOutputFunction = outputFunction => {
    let buffer = "";
    return msg => {
        let index = 0;
        while (true) {
            let next = msg.indexOf('\n', index);
            if (next < 0) {
                break;
            }
            outputFunction(buffer + msg.substring(index, next));
            buffer = "";
            index = next + 1;
        }
        buffer += msg.substring(index);
    };
},
$rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.info(msg)) : () => {
},
$rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.error(msg)) : () => {
},
$rt_packageData = null,
$rt_packages = data => {
    let i = 0;
    let packages = new Array(data.length);
    for (let j = 0;j < data.length;++j) {
        let prefixIndex = data[i++];
        let prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
},
$rt_metadata = data => {
    let packages = $rt_packageData;
    let i = 0;
    while (i < data.length) {
        let cls = data[i++];
        cls.$meta = {  };
        let m = cls.$meta;
        let className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            let packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        let superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        let flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        let innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            let enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            let declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            let simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        let clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        let virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (let j = 0;j < virtualMethods.length;j += 2) {
                let name = virtualMethods[j];
                let func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (let k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
};
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (let i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : result => {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    let result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        let self = this;
        let callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(() => self.resume());
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
let $rt_suspending = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
},
$rt_resuming = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
},
$rt_requireNativeThread = () => {
    let nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context " + "(perhaps, from native JS method). See https://teavm.org/docs/runtime/coroutines.html " + "('Interaction with JavaScript' section)");
    }
    return nativeThread;
},
$rt_startThread = (runner, callback) => (new TeaVMThread(runner)).start(callback),
$rt_currentNativeThread = null,
$rt_nativeThread = () => $rt_currentNativeThread,
$rt_invalidPointer = () => {
    throw new Error("Invalid recorded state");
};
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
let jl_Object_monitorEnterSync = $o => {
    let var$2;
    if (jl_Thread_currentThread === null)
        return;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    $o = $o.$monitor;
    var$2 = $o.$owner;
    if (var$2 === null)
        $o.$owner = jl_Thread_currentThread;
    else if (var$2 !== jl_Thread_currentThread) {
        var$2 = new jl_IllegalStateException;
        jl_RuntimeException__init_(var$2, $rt_s(0));
        $rt_throw(var$2);
    }
    $o.$count = $o.$count + 1 | 0;
},
jl_Object_monitorExitSync = $o => {
    let var$2, var$3;
    if (jl_Thread_currentThread === null)
        return;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        if (var$2.$owner === jl_Thread_currentThread) {
            var$3 = var$2.$count - 1 | 0;
            var$2.$count = var$3;
            if (!var$3)
                var$2.$owner = null;
            jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Exception__init_($o);
    $rt_throw($o);
},
jl_Object_monitorEnter = $o => {
    let var$2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        var$3 = $o.$monitor;
        if (var$3.$owner === null)
            var$3.$owner = jl_Thread_currentThread;
        if (var$3.$owner === jl_Thread_currentThread) {
            var$3.$count = var$3.$count + var$2 | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait$_asyncCall_$($o, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, var$2, var$3, $ptr);
},
jl_Object_createMonitor = $o => {
    let var$2;
    var$2 = new jl_Object$Monitor;
    var$2.$owner = jl_Thread_currentThread;
    $o.$monitor = var$2;
},
jl_Object_monitorEnterWait = ($o, $count, $callback) => {
    let $thread_0, $monitor, var$6;
    $thread_0 = jl_Thread_currentThread;
    $monitor = $o.$monitor;
    if ($monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        otpp_AsyncCallbackWrapper_complete($callback, $o);
        return;
    }
    if ($monitor.$owner === null) {
        $monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        otpp_AsyncCallbackWrapper_complete($callback, $o);
        return;
    }
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
    $monitor = $monitor.$enteringThreads;
    var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
    var$6.$_010 = $thread_0;
    var$6.$_14 = $o;
    var$6.$_23 = $count;
    var$6.$_31 = $callback;
    $callback = var$6;
    $monitor.push($callback);
},
jl_Object_monitorExit = $o => {
    let var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        if (var$2.$owner === jl_Thread_currentThread) {
            var$3 = var$2.$count - 1 | 0;
            var$2.$count = var$3;
            if (var$3 <= 0) {
                var$2.$owner = null;
                var$2 = var$2.$enteringThreads;
                if (var$2 !== null && !otp_PlatformQueue_isEmpty$static(var$2)) {
                    var$2 = new jl_Object$monitorExit$lambda$_8_0;
                    var$2.$_012 = $o;
                    otp_Platform_schedule(var$2, 0);
                } else
                    jl_Object_isEmptyMonitor($o);
            }
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Exception__init_($o);
    $rt_throw($o);
},
jl_Object_isEmptyMonitor = $this => {
    let $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        if ($monitor.$owner === null) {
            var$2 = $monitor.$enteringThreads;
            if (!(var$2 !== null && !otp_PlatformQueue_isEmpty$static(var$2))) {
                $monitor = $monitor.$notifyListeners;
                if ($monitor === null)
                    break a;
                if (otp_PlatformQueue_isEmpty$static($monitor))
                    break a;
            }
        }
        return 0;
    }
    $this.$monitor = null;
    return 1;
},
jl_Object__init_ = $this => {
    return;
},
jl_Object__init_0 = () => {
    let var_0 = new jl_Object();
    jl_Object__init_(var_0);
    return var_0;
},
jl_Object_getClass = $this => {
    return jl_Class_getClass($this.constructor);
},
jl_Object_hashCode = $this => {
    return jl_Object_identity($this);
},
jl_Object_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Object_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_getName(jl_Object_getClass($this));
    var$2 = jl_Integer_toHexString(jl_Object_identity($this));
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    var$1 = jl_StringBuilder_append(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$1, 64);
    jl_StringBuilder_append(var$1, var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jl_Object_identity = $this => {
    let $platformThis;
    $platformThis = $this;
    if (!$platformThis.$id$)
        $platformThis.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_clone = $this => {
    let $result, var$2, var$3;
    if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
        $result = new jl_CloneNotSupportedException;
        jl_Exception__init_($result);
        $rt_throw($result);
    }
    $result = otp_Platform_clone($this);
    var$2 = $result;
    var$3 = $rt_nextId();
    var$2.$id$ = var$3;
    return $result;
},
jl_Object_monitorEnterWait$_asyncCall_$ = (var$1, var$2) => {
    let thread = $rt_requireNativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Object_monitorEnterWait(var$1, var$2, callback);
            ;
        } catch ($e){
            callback.$error($e);
        }
    });
    return null;
},
cbgu_Pool$Poolable = $rt_classWithoutFields(0);
function cbggg_GlyphLayout() {
    let a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount = 0;
    a.$width2 = 0.0;
    a.$height5 = 0.0;
}
let cbggg_GlyphLayout_glyphRunPool = null,
cbggg_GlyphLayout_colorStack = null,
cbggg_GlyphLayout_$callClinit = () => {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
},
cbggg_GlyphLayout__init_3 = $this => {
    cbggg_GlyphLayout_$callClinit();
    $this.$runs = cbgu_Array__init_0(1);
    $this.$colors = cbgu_IntArray__init_(2);
},
cbggg_GlyphLayout__init_6 = () => {
    let var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_3(var_0);
    return var_0;
},
cbggg_GlyphLayout__init_ = ($this, $font, $str) => {
    cbggg_GlyphLayout_$callClinit();
    $this.$runs = cbgu_Array__init_0(1);
    $this.$colors = cbgu_IntArray__init_(2);
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$nativeString.length, $font.$cache.$color1, 0.0, 8, 0, null);
},
cbggg_GlyphLayout__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_GlyphLayout__init_1 = ($this, $font, $str, $color, $targetWidth, $halign, $wrap) => {
    cbggg_GlyphLayout_$callClinit();
    $this.$runs = cbgu_Array__init_0(1);
    $this.$colors = cbgu_IntArray__init_(2);
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length(), $color, $targetWidth, $halign, $wrap, null);
},
cbggg_GlyphLayout__init_5 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbggg_GlyphLayout__init_2 = ($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    cbggg_GlyphLayout_$callClinit();
    $this.$runs = cbgu_Array__init_0(1);
    $this.$colors = cbgu_IntArray__init_(2);
    cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
},
cbggg_GlyphLayout__init_4 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) => {
    let var_9 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
},
cbggg_GlyphLayout_setText = ($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    let $fontData, $wrapOrTruncate, $currentColor, var$13, var$14, var$15, $i, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$23, $runStart, $newline, $runEnd, $length, $run, $runWidth, $wrapIndex;
    cbggg_GlyphLayout_reset($this);
    $fontData = $font.$data14;
    if ($start == $end) {
        $this.$height5 = $fontData.$capHeight;
        return;
    }
    if ($wrap)
        $targetWidth = jl_Math_max0($targetWidth, $fontData.$spaceXadvance * 3.0);
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = cbgg_Color_toIntBits($color);
    $font = $this.$colors;
    var$13 = $font.$items1;
    var$14 = var$13.data;
    var$15 = $font.$size1;
    if ((var$15 + 1 | 0) >= var$14.length)
        var$13 = cbgu_IntArray_resize($font, jl_Math_max(8, var$15 * 1.75 | 0));
    var$13 = var$13.data;
    $i = $font.$size1;
    var$13[$i] = 0;
    var$13[$i + 1 | 0] = $currentColor;
    $font.$size1 = $i + 2 | 0;
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, $currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    var$23 = $fontData;
    $color = $str;
    var$15 = $currentColor;
    $runStart = $start;
    a: {
        b: while (true) {
            c: {
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $isLastRun = 1;
                    $runEnd = $end;
                } else {
                    d: {
                        $wrap = $start + 1 | 0;
                        switch (jl_String_charAt($color, $start)) {
                            case 10:
                                $runEnd = $wrap - 1 | 0;
                                $newline = 1;
                                $start = $wrap;
                                break c;
                            case 91:
                                if (!$markupEnabled) {
                                    $start = $wrap;
                                    break d;
                                }
                                $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, $wrap, $end);
                                if ($length >= 0) {
                                    $runEnd = $wrap - 1 | 0;
                                    $start = $wrap + ($length + 1 | 0) | 0;
                                    if ($start == $end) {
                                        $isLastRun = 1;
                                        break c;
                                    }
                                    $currentColor = cbgu_IntArray_peek(cbggg_GlyphLayout_colorStack);
                                    break c;
                                }
                                if ($length != (-2)) {
                                    $start = $wrap;
                                    break d;
                                }
                                $start = $wrap + 1 | 0;
                                break d;
                            default:
                        }
                        $start = $wrap;
                    }
                    continue b;
                }
            }
            $run = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
            $run.$x3 = 0.0;
            $run.$y5 = $y;
            cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyphs(var$23, $run, $str, $runStart, $runEnd, $lastGlyph);
            $this.$glyphCount = $this.$glyphCount + $run.$glyphs.$size0 | 0;
            if ($currentColor != var$15) {
                $font = $this.$colors;
                $wrap = cbgu_IntArray_get($font, $font.$size1 - 2 | 0);
                $i = $this.$glyphCount;
                if ($wrap != $i) {
                    cbgu_IntArray_add($this.$colors, $i);
                    cbgu_IntArray_add($this.$colors, $currentColor);
                } else {
                    $font = $this.$colors;
                    cbgu_IntArray_set($font, $font.$size1 - 1 | 0, $currentColor);
                }
                var$15 = $currentColor;
            }
            e: {
                if (!$run.$glyphs.$size0) {
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                    if ($lineRun === null)
                        break e;
                } else if ($lineRun !== null) {
                    cbggg_GlyphLayout$GlyphRun_appendRun($lineRun, $run);
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                } else {
                    cbgu_Array_add($this.$runs, $run);
                    $lineRun = $run;
                }
                if (!$newline && !$isLastRun)
                    $lastGlyph = cbgu_Array_peek($lineRun.$glyphs);
                else {
                    cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                    $lastGlyph = null;
                }
                if ($wrapOrTruncate && $lineRun.$glyphs.$size0 && !(!$newline && !$isLastRun)) {
                    $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                    $i = 2;
                    while ($i < $lineRun.$xAdvances.$size2) {
                        $font = $lineRun.$glyphs;
                        $length = $i - 1 | 0;
                        if ($runWidth + cbggg_GlyphLayout_getGlyphWidth($this, cbgu_Array_get($font, $length), $fontData) - 9.999999747378752E-5 <= $targetWidth)
                            $runWidth = $runWidth + $lineRun.$xAdvances.$items0.data[$i];
                        else {
                            if ($truncate !== null) {
                                cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                break a;
                            }
                            $wrapIndex = cbggg_BitmapFont$BitmapFontData_getWrapIndex($fontData, $lineRun.$glyphs, $i);
                            if (!(!$wrapIndex && $lineRun.$x3 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size0)
                                $length = $wrapIndex;
                            $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, $length);
                            if ($lineRun === null)
                                break e;
                            cbgu_Array_add($this.$runs, $lineRun);
                            $y = $y + $down;
                            $lineRun.$x3 = 0.0;
                            $lineRun.$y5 = $y;
                            $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                            $i = 1;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($newline) {
                $lineRun = null;
                $lastGlyph = null;
                $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
            }
            $runStart = $start;
        }
    }
    f: {
        $this.$height5 = $fontData.$capHeight + jl_Math_abs0($y);
        cbggg_GlyphLayout_calculateWidths($this, $fontData);
        if (!($halign & 8)) {
            $start = !($halign & 1) ? 0 : 1;
            $font = $this.$runs;
            var$13 = $font.$items;
            $end = 0;
            $halign = $font.$size0;
            while (true) {
                if ($end >= $halign)
                    break f;
                $font = var$13.data[$end];
                $font.$x3 = $font.$x3 + (!$start ? $targetWidth - $font.$width5 : 0.5 * ($targetWidth - $font.$width5));
                $end = $end + 1 | 0;
            }
        }
    }
    if ($markupEnabled)
        cbgu_IntArray_clear(cbggg_GlyphLayout_colorStack);
},
cbggg_GlyphLayout_calculateWidths = ($this, $fontData) => {
    let $width, $run, $runsItems, $i, $n, $xAdvances, $runWidth, $max, $glyph, $glyphs, $ii, $nn;
    $width = 0.0;
    $run = $this.$runs;
    $runsItems = $run.$items;
    $i = 0;
    $n = $run.$size0;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items0.data;
        $runWidth = $run.$x3 + $xAdvances[0];
        $max = 0.0;
        $glyph = $run.$glyphs;
        $glyphs = $glyph.$items;
        $ii = 0;
        $nn = $glyph.$size0;
        while ($ii < $nn) {
            $max = jl_Math_max0($max, $runWidth + cbggg_GlyphLayout_getGlyphWidth($this, $glyphs.data[$ii], $fontData));
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + $xAdvances[$ii];
        }
        $runWidth = jl_Math_max0($runWidth, $max);
        $max = $run.$x3;
        $runWidth = $runWidth - $max;
        $run.$width5 = $runWidth;
        $width = jl_Math_max0($width, $max + $runWidth);
        $i = $i + 1 | 0;
    }
    $this.$width2 = $width;
},
cbggg_GlyphLayout_truncate = ($this, $fontData, $run, $targetWidth, $truncate) => {
    let $glyphCount, $truncateRun, $i, var$8, $truncateWidth, $xAdvances, $n, $count, $width, $xAdvances_0, $droppedGlyphCount;
    $glyphCount = $run.$glyphs.$size0;
    cbggg_GlyphLayout_$callClinit();
    $truncateRun = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
    $i = $truncate.$length();
    var$8 = null;
    cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyphs($fontData, $truncateRun, $truncate, 0, $i, var$8);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size2 > 0) {
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $truncateRun);
        var$8 = $truncateRun.$xAdvances;
        $xAdvances = var$8.$items0;
        $i = 1;
        $n = var$8.$size2;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    $targetWidth = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x3;
    var$8 = $run.$xAdvances;
    $xAdvances_0 = var$8.$items0;
    a: {
        while (true) {
            if ($count >= var$8.$size2)
                break a;
            $width = $width + $xAdvances_0.data[$count];
            if ($width > $targetWidth)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        cbgu_Array_clear($run.$glyphs);
        cbgu_FloatArray_clear($run.$xAdvances);
        cbgu_FloatArray_addAll0($run.$xAdvances, $truncateRun.$xAdvances);
    } else {
        cbgu_Array_truncate($run.$glyphs, $count - 1 | 0);
        cbgu_FloatArray_truncate($run.$xAdvances, $count);
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
        var$8 = $truncateRun.$xAdvances;
        $droppedGlyphCount = var$8.$size2;
        if ($droppedGlyphCount > 0)
            cbgu_FloatArray_addAll1($run.$xAdvances, var$8, 1, $droppedGlyphCount - 1 | 0);
    }
    b: {
        $droppedGlyphCount = $glyphCount - $run.$glyphs.$size0 | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled)
                while (true) {
                    $fontData = $this.$colors;
                    $droppedGlyphCount = $fontData.$size1;
                    if ($droppedGlyphCount <= 2)
                        break b;
                    if (cbgu_IntArray_get($fontData, $droppedGlyphCount - 2 | 0) < $this.$glyphCount)
                        break b;
                    $fontData = $this.$colors;
                    $fontData.$size1 = $fontData.$size1 - 2 | 0;
                }
        }
    }
    cbgu_Array_addAll($run.$glyphs, $truncateRun.$glyphs);
    $this.$glyphCount = $this.$glyphCount + $truncate.$length() | 0;
    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $truncateRun);
},
cbggg_GlyphLayout_wrap = ($this, $fontData, $first, $secondStart) => {
    let $glyphs2, $glyphCount, $xAdvances2, $firstEnd, $firstGlyphCount, $second, $droppedGlyphCount, $glyphs1, $lastColor, $i, $secondGlyphCount, var$15, $xAdvances1, $reductionThreshold, $colorChangeIndex;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $glyphs2.$size0;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!cbggg_BitmapFont$BitmapFontData_isWhitespace($fontData, (cbgu_Array_get($glyphs2, $firstEnd - 1 | 0)).$id & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            $firstGlyphCount = $rt_compare($secondStart, $glyphCount);
            if ($firstGlyphCount >= 0)
                break b;
            if (!cbggg_BitmapFont$BitmapFontData_isWhitespace($fontData, (cbgu_Array_get($glyphs2, $secondStart)).$id & 65535))
                break;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    $second = null;
    if ($firstGlyphCount >= 0) {
        cbgu_Array_truncate($glyphs2, $firstEnd);
        cbgu_FloatArray_truncate($xAdvances2, $firstEnd + 1 | 0);
        $droppedGlyphCount = $secondStart - $firstEnd | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled) {
                $glyphs1 = $this.$colors;
                if (cbgu_IntArray_get($glyphs1, $glyphs1.$size1 - 2 | 0) > $this.$glyphCount) {
                    $lastColor = cbgu_IntArray_peek($this.$colors);
                    while (true) {
                        $glyphs1 = $this.$colors;
                        $secondStart = cbgu_IntArray_get($glyphs1, $glyphs1.$size1 - 2 | 0);
                        $firstGlyphCount = $this.$glyphCount;
                        if ($secondStart <= $firstGlyphCount)
                            break;
                        $glyphs1 = $this.$colors;
                        $glyphs1.$size1 = $glyphs1.$size1 - 2 | 0;
                    }
                    $glyphs1 = $this.$colors;
                    cbgu_IntArray_set($glyphs1, $glyphs1.$size1 - 2 | 0, $firstGlyphCount);
                    $glyphs1 = $this.$colors;
                    cbgu_IntArray_set($glyphs1, $glyphs1.$size1 - 1 | 0, $lastColor);
                }
            }
        }
    } else {
        cbggg_GlyphLayout_$callClinit();
        $second = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
        $glyphs1 = $second.$glyphs;
        if ((0 + $firstEnd | 0) > $glyphs2.$size0) {
            $fontData = new jl_IllegalArgumentException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(1));
            $first = jl_StringBuilder_append0($first, 0);
            jl_AbstractStringBuilder_append($first, $rt_s(2));
            $first = jl_StringBuilder_append0($first, $firstEnd);
            jl_AbstractStringBuilder_append($first, $rt_s(3));
            jl_RuntimeException__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($first, $glyphs2.$size0)));
            $rt_throw($fontData);
        }
        cbgu_Array_addAll0($glyphs1, $glyphs2.$items, 0, $firstEnd);
        $i = $secondStart - 1 | 0;
        $secondGlyphCount = $glyphs2.$size0;
        if ($i >= $secondGlyphCount) {
            $fontData = new jl_IndexOutOfBoundsException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(4));
            $first = jl_StringBuilder_append0($first, $i);
            jl_AbstractStringBuilder_append($first, $rt_s(5));
            jl_RuntimeException__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($first, $glyphs2.$size0)));
            $rt_throw($fontData);
        }
        if (0 > $i) {
            $fontData = new jl_IndexOutOfBoundsException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(6));
            $first = jl_StringBuilder_append0($first, 0);
            jl_AbstractStringBuilder_append($first, $rt_s(7));
            jl_RuntimeException__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($first, $i)));
            $rt_throw($fontData);
        }
        var$15 = $glyphs2.$items;
        $firstGlyphCount = ($i - 0 | 0) + 1 | 0;
        $droppedGlyphCount = $secondGlyphCount - $firstGlyphCount | 0;
        if ($glyphs2.$ordered) {
            $firstGlyphCount = 0 + $firstGlyphCount | 0;
            jl_System_fastArraycopy(var$15, $firstGlyphCount, var$15, 0, $secondGlyphCount - $firstGlyphCount | 0);
        } else {
            $firstGlyphCount = jl_Math_max($droppedGlyphCount, $i + 1 | 0);
            jl_System_fastArraycopy(var$15, $firstGlyphCount, var$15, 0, $secondGlyphCount - $firstGlyphCount | 0);
        }
        $firstGlyphCount = $droppedGlyphCount;
        while ($firstGlyphCount < $secondGlyphCount) {
            var$15.data[$firstGlyphCount] = null;
            $firstGlyphCount = $firstGlyphCount + 1 | 0;
        }
        $glyphs2.$size0 = $droppedGlyphCount;
        $first.$glyphs = $glyphs1;
        $second.$glyphs = $glyphs2;
        $xAdvances1 = $second.$xAdvances;
        cbgu_FloatArray_addAll1($xAdvances1, $xAdvances2, 0, $firstEnd + 1 | 0);
        $secondGlyphCount = $xAdvances2.$size2;
        if ($secondStart >= $secondGlyphCount) {
            $fontData = new jl_IndexOutOfBoundsException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(4));
            $first = jl_StringBuilder_append0($first, $secondStart);
            jl_AbstractStringBuilder_append($first, $rt_s(5));
            jl_IndexOutOfBoundsException__init_($fontData, jl_StringBuilder_toString(jl_StringBuilder_append0($first, $xAdvances2.$size2)));
            $rt_throw($fontData);
        }
        if (1 > $secondStart)
            $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(6)), 1), $rt_s(7)), $secondStart))));
        $firstGlyphCount = $i + 1 | 0;
        $droppedGlyphCount = $secondGlyphCount - $firstGlyphCount | 0;
        if ($xAdvances2.$ordered1) {
            var$15 = $xAdvances2.$items0;
            $secondStart = 1 + $firstGlyphCount | 0;
            jl_System_fastArraycopy(var$15, $secondStart, var$15, 1, $secondGlyphCount - $secondStart | 0);
        } else {
            $secondStart = jl_Math_max($droppedGlyphCount, $secondStart + 1 | 0);
            var$15 = $xAdvances2.$items0;
            jl_System_fastArraycopy(var$15, $secondStart, var$15, 1, $secondGlyphCount - $secondStart | 0);
        }
        c: {
            $xAdvances2.$size2 = $droppedGlyphCount;
            $xAdvances2.$items0.data[0] = cbggg_GlyphLayout_getLineOffset($this, $glyphs2, $fontData);
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs.$size0;
            $secondGlyphCount = $second.$glyphs.$size0;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $secondStart;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $secondStart - $secondGlyphCount | 0;
                $i = $this.$colors.$size1 - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break c;
                    $colorChangeIndex = cbgu_IntArray_get($this.$colors, $i);
                    if ($colorChangeIndex <= $reductionThreshold)
                        break;
                    cbgu_IntArray_set($this.$colors, $i, $colorChangeIndex - $droppedGlyphCount | 0);
                    $i = $i + (-2) | 0;
                }
            }
        }
    }
    if ($firstEnd)
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $first);
        cbgu_Array_pop($this.$runs);
    }
    return $second;
},
cbggg_GlyphLayout_setLastGlyphXAdvance = ($this, $fontData, $run) => {
    let $last;
    $last = cbgu_Array_peek($run.$glyphs);
    if (!$last.$fixedWidth) {
        $run = $run.$xAdvances;
        $run.$items0.data[$run.$size2 - 1 | 0] = cbggg_GlyphLayout_getGlyphWidth($this, $last, $fontData);
    }
},
cbggg_GlyphLayout_getGlyphWidth = ($this, $glyph, $fontData) => {
    return ($glyph.$fixedWidth ? $glyph.$xadvance : $glyph.$width1 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
},
cbggg_GlyphLayout_getLineOffset = ($this, $glyphs, $fontData) => {
    let $first;
    $first = cbgu_Array_first($glyphs);
    return ($first.$fixedWidth ? 0.0 : ( -$first.$xoffset | 0) * $fontData.$scaleX) - $fontData.$padLeft;
},
cbggg_GlyphLayout_parseColorMarkup = ($this, $str, $start, $end) => {
    let $color, $i, $ch, $color_0;
    if ($start == $end)
        return (-1);
    $str = $str;
    switch (jl_String_charAt($str, $start)) {
        case 35:
            $color = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = jl_String_charAt($str, $i);
                    if ($ch == 93)
                        break;
                    $color = ($color << 4) + $ch | 0;
                    if ($ch >= 48 && $ch <= 57)
                        $color = $color + (-48) | 0;
                    else if ($ch >= 65 && $ch <= 70)
                        $color = $color + (-55) | 0;
                    else {
                        if ($ch < 97)
                            break a;
                        if ($ch > 102)
                            break a;
                        $color = $color + (-87) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    $start = $i - $start | 0;
                    if ($start < 8)
                        $color = $color << ((9 - $start | 0) << 2) | 255;
                    cbggg_GlyphLayout_$callClinit();
                    $str = cbggg_GlyphLayout_colorStack;
                    $end = (($color & (-16711936)) >>> 8 | 0) | ($color & 16711935) << 8;
                    cbgu_IntArray_add($str, ($end >>> 16 | 0) | $end << 16);
                    return $start;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            cbggg_GlyphLayout_$callClinit();
            $str = cbggg_GlyphLayout_colorStack;
            $start = $str.$size1;
            if ($start > 1)
                $str.$size1 = $start - 1 | 0;
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                if (jl_String_charAt($str, $i) == 93) {
                    $color_0 = jl_String_substring($str, $start, $i);
                    cbgg_Colors_$callClinit();
                    $color_0 = cbgu_ObjectMap_get(cbgg_Colors_map, $color_0);
                    if ($color_0 === null)
                        return (-1);
                    cbggg_GlyphLayout_$callClinit();
                    cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, cbgg_Color_toIntBits($color_0));
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
},
cbggg_GlyphLayout_reset = $this => {
    cbggg_GlyphLayout_$callClinit();
    cbgu_Pool_freeAll(cbggg_GlyphLayout_glyphRunPool, $this.$runs);
    cbgu_Array_clear($this.$runs);
    cbgu_IntArray_clear($this.$colors);
    $this.$glyphCount = 0;
    $this.$width2 = 0.0;
    $this.$height5 = 0.0;
},
cbggg_GlyphLayout_toString = $this => {
    let $buffer, $i, $n;
    if (!$this.$runs.$size0)
        return $rt_s(8);
    $buffer = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($buffer, 128);
    jl_StringBuilder_append2($buffer, $this.$width2);
    jl_AbstractStringBuilder_append0($buffer, 120);
    jl_StringBuilder_append2($buffer, $this.$height5);
    jl_AbstractStringBuilder_append0($buffer, 10);
    $i = 0;
    $n = $this.$runs.$size0;
    while ($i < $n) {
        jl_AbstractStringBuilder_append($buffer, cbggg_GlyphLayout$GlyphRun_toString(cbgu_Array_get($this.$runs, $i)));
        jl_AbstractStringBuilder_append0($buffer, 10);
        $i = $i + 1 | 0;
    }
    $buffer.$length2 = $buffer.$length2 - 1 | 0;
    return jl_AbstractStringBuilder_toString($buffer);
},
cbggg_GlyphLayout__clinit_ = () => {
    cbggg_GlyphLayout_glyphRunPool = cbgu_Pools_get($rt_cls(cbggg_GlyphLayout$GlyphRun));
    cbggg_GlyphLayout_colorStack = cbgu_IntArray__init_(4);
};
function cbggg_TextureRegion() {
    let a = this; jl_Object.call(a);
    a.$texture0 = null;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
let cbggg_TextureRegion__init_ = ($this, $texture) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($texture === null) {
        $texture = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($texture, $rt_s(9));
        $rt_throw($texture);
    }
    $this.$texture0 = $texture;
    var$2 = cbgg_Texture_getWidth($texture);
    var$3 = cbgg_Texture_getHeight($texture);
    var$4 = 1.0 / cbgg_Texture_getWidth($this.$texture0);
    var$5 = 1.0 / cbgg_Texture_getHeight($this.$texture0);
    var$6 = 0.0 * var$4;
    var$7 = 0.0 * var$5;
    var$8 = (0 + var$2 | 0) * var$4;
    var$9 = (0 + var$3 | 0) * var$5;
    var$10 = cbgg_Texture_getWidth($this.$texture0);
    var$11 = cbgg_Texture_getHeight($this.$texture0);
    var$4 = jl_Math_abs0(var$8 - var$6);
    var$5 = var$10;
    $this.$regionWidth = jl_Math_round(var$4 * var$5);
    var$4 = jl_Math_abs0(var$9 - var$7);
    var$12 = var$11;
    var$11 = jl_Math_round(var$4 * var$12);
    $this.$regionHeight = var$11;
    if ($this.$regionWidth == 1 && var$11 == 1) {
        var$4 = 0.25 / var$5;
        var$6 = var$6 + var$4;
        var$8 = var$8 - var$4;
        var$4 = 0.25 / var$12;
        var$7 = var$7 + var$4;
        var$9 = var$9 - var$4;
    }
    $this.$u0 = var$6;
    $this.$v0 = var$7;
    $this.$u20 = var$8;
    $this.$v20 = var$9;
    $this.$regionWidth = jl_Math_abs(var$2);
    $this.$regionHeight = jl_Math_abs(var$3);
},
cbggg_TextureRegion__init_0 = var_0 => {
    let var_1 = new cbggg_TextureRegion();
    cbggg_TextureRegion__init_(var_1, var_0);
    return var_1;
},
cbggg_TextureRegion_getTexture = $this => {
    return $this.$texture0;
},
cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion),
cbgu_Disposable = $rt_classWithoutFields(0);
function cbggg_BitmapFont() {
    let a = this; jl_Object.call(a);
    a.$data14 = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped0 = 0;
    a.$integer0 = 0;
    a.$ownsTexture = 0;
}
let cbggg_BitmapFont_getRegion = $this => {
    return cbgu_Array_first($this.$regions);
},
cbggg_NinePatch = $rt_classWithoutFields(),
cbggg_NinePatch_tmpDrawColor = null,
cbggg_NinePatch__clinit_ = () => {
    cbggg_NinePatch_tmpDrawColor = new cbgg_Color;
};
function cbgg_Color() {
    let a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
let cbgg_Color_WHITE = null,
cbgg_Color_LIGHT_GRAY = null,
cbgg_Color_GRAY = null,
cbgg_Color_DARK_GRAY = null,
cbgg_Color_BLACK = null,
cbgg_Color_WHITE_FLOAT_BITS = 0.0,
cbgg_Color_CLEAR = null,
cbgg_Color_CLEAR_WHITE = null,
cbgg_Color_BLUE = null,
cbgg_Color_NAVY = null,
cbgg_Color_ROYAL = null,
cbgg_Color_SLATE = null,
cbgg_Color_SKY = null,
cbgg_Color_CYAN = null,
cbgg_Color_TEAL = null,
cbgg_Color_GREEN = null,
cbgg_Color_CHARTREUSE = null,
cbgg_Color_LIME = null,
cbgg_Color_FOREST = null,
cbgg_Color_OLIVE = null,
cbgg_Color_YELLOW = null,
cbgg_Color_GOLD = null,
cbgg_Color_GOLDENROD = null,
cbgg_Color_ORANGE = null,
cbgg_Color_BROWN = null,
cbgg_Color_TAN = null,
cbgg_Color_FIREBRICK = null,
cbgg_Color_RED = null,
cbgg_Color_SCARLET = null,
cbgg_Color_CORAL = null,
cbgg_Color_SALMON = null,
cbgg_Color_PINK = null,
cbgg_Color_MAGENTA = null,
cbgg_Color_PURPLE = null,
cbgg_Color_VIOLET = null,
cbgg_Color_MAROON = null,
cbgg_Color__init_2 = ($this, $rgba8888) => {
    cbgg_Color_rgba8888ToColor($this, $rgba8888);
},
cbgg_Color__init_ = var_0 => {
    let var_1 = new cbgg_Color();
    cbgg_Color__init_2(var_1, var_0);
    return var_1;
},
cbgg_Color__init_1 = ($this, $r, $g, $b, $a) => {
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    cbgg_Color_clamp($this);
},
cbgg_Color__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_Color();
    cbgg_Color__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_Color_set = ($this, $color) => {
    $this.$r = $color.$r;
    $this.$g = $color.$g;
    $this.$b = $color.$b;
    $this.$a = $color.$a;
    return $this;
},
cbgg_Color_clamp = $this => {
    let var$1, var$2;
    var$1 = $this.$r;
    if (var$1 < 0.0)
        $this.$r = 0.0;
    else if (var$1 > 1.0)
        $this.$r = 1.0;
    var$2 = $this.$g;
    if (var$2 < 0.0)
        $this.$g = 0.0;
    else if (var$2 > 1.0)
        $this.$g = 1.0;
    var$2 = $this.$b;
    if (var$2 < 0.0)
        $this.$b = 0.0;
    else if (var$2 > 1.0)
        $this.$b = 1.0;
    var$2 = $this.$a;
    if (var$2 < 0.0)
        $this.$a = 0.0;
    else if (var$2 > 1.0)
        $this.$a = 1.0;
    return $this;
},
cbgg_Color_equals = ($this, $o) => {
    let $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return cbgg_Color_toIntBits($this) != cbgg_Color_toIntBits($color) ? 0 : 1;
    }
    return 0;
},
cbgg_Color_hashCode = $this => {
    let var$1, $result, var$3;
    var$1 = $this.$r;
    $result = 31 * (var$1 === 0.0 ? 0 : jl_Float_floatToIntBits(var$1)) | 0;
    var$1 = $this.$g;
    $result = 31 * ($result + (var$1 === 0.0 ? 0 : jl_Float_floatToIntBits(var$1)) | 0) | 0;
    var$3 = $this.$b;
    $result = 31 * ($result + (var$3 === 0.0 ? 0 : jl_Float_floatToIntBits(var$3)) | 0) | 0;
    var$3 = $this.$a;
    return $result + (var$3 === 0.0 ? 0 : jl_Float_floatToIntBits(var$3)) | 0;
},
cbgg_Color_toIntBits = $this => {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
},
cbgg_Color_toString = $this => {
    let $value, var$2;
    $value = jl_Integer_toHexString((255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0);
    while ($value.$nativeString.length < 8) {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, $rt_s(10));
        jl_AbstractStringBuilder_append(var$2, $value);
        $value = jl_AbstractStringBuilder_toString(var$2);
    }
    return $value;
},
cbgg_Color_rgba8888ToColor = ($color, $value) => {
    $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
    $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
    $color.$a = ($value & 255) / 255.0;
},
cbgg_Color__clinit_ = () => {
    let var$1;
    cbgg_Color_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    cbgg_Color_LIGHT_GRAY = cbgg_Color__init_((-1077952513));
    cbgg_Color_GRAY = cbgg_Color__init_(2139062271);
    cbgg_Color_DARK_GRAY = cbgg_Color__init_(1061109759);
    cbgg_Color_BLACK = cbgg_Color__init_0(0.0, 0.0, 0.0, 1.0);
    var$1 = cbgg_Color_WHITE;
    cbgg_Color_WHITE_FLOAT_BITS = cbgu_NumberUtils_intToFloatColor((255.0 * var$1.$a | 0) << 24 | (255.0 * var$1.$b | 0) << 16 | (255.0 * var$1.$g | 0) << 8 | 255.0 * var$1.$r | 0);
    cbgg_Color_CLEAR = cbgg_Color__init_0(0.0, 0.0, 0.0, 0.0);
    cbgg_Color_CLEAR_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 0.0);
    cbgg_Color_BLUE = cbgg_Color__init_0(0.0, 0.0, 1.0, 1.0);
    cbgg_Color_NAVY = cbgg_Color__init_0(0.0, 0.0, 0.5, 1.0);
    cbgg_Color_ROYAL = cbgg_Color__init_(1097458175);
    cbgg_Color_SLATE = cbgg_Color__init_(1887473919);
    cbgg_Color_SKY = cbgg_Color__init_((-2016482305));
    cbgg_Color_CYAN = cbgg_Color__init_0(0.0, 1.0, 1.0, 1.0);
    cbgg_Color_TEAL = cbgg_Color__init_0(0.0, 0.5, 0.5, 1.0);
    cbgg_Color_GREEN = cbgg_Color__init_(16711935);
    cbgg_Color_CHARTREUSE = cbgg_Color__init_(2147418367);
    cbgg_Color_LIME = cbgg_Color__init_(852308735);
    cbgg_Color_FOREST = cbgg_Color__init_(579543807);
    cbgg_Color_OLIVE = cbgg_Color__init_(1804477439);
    cbgg_Color_YELLOW = cbgg_Color__init_((-65281));
    cbgg_Color_GOLD = cbgg_Color__init_((-2686721));
    cbgg_Color_GOLDENROD = cbgg_Color__init_((-626712321));
    cbgg_Color_ORANGE = cbgg_Color__init_((-5963521));
    cbgg_Color_BROWN = cbgg_Color__init_((-1958407169));
    cbgg_Color_TAN = cbgg_Color__init_((-759919361));
    cbgg_Color_FIREBRICK = cbgg_Color__init_((-1306385665));
    cbgg_Color_RED = cbgg_Color__init_((-16776961));
    cbgg_Color_SCARLET = cbgg_Color__init_((-13361921));
    cbgg_Color_CORAL = cbgg_Color__init_((-8433409));
    cbgg_Color_SALMON = cbgg_Color__init_((-92245249));
    cbgg_Color_PINK = cbgg_Color__init_((-9849601));
    cbgg_Color_MAGENTA = cbgg_Color__init_0(1.0, 0.0, 1.0, 1.0);
    cbgg_Color_PURPLE = cbgg_Color__init_((-1608453889));
    cbgg_Color_VIOLET = cbgg_Color__init_((-293409025));
    cbgg_Color_MAROON = cbgg_Color__init_((-1339006721));
};
function cbgg_GLTexture() {
    let a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter0 = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
let cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0,
cbgg_GLTexture_bind = $this => {
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
},
cbgg_GLTexture_unsafeSetWrap = ($this, $u, $v, $force) => {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum0);
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum0);
        $this.$vWrap = $v;
    }
},
cbgg_GLTexture_unsafeSetFilter = ($this, $minFilter, $magFilter, $force) => {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum);
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter0 === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum);
        $this.$magFilter0 = $magFilter;
    }
},
cbgg_GLTexture_setFilter = ($this, $minFilter, $magFilter) => {
    $this.$minFilter = $minFilter;
    $this.$magFilter0 = $magFilter;
    cbgg_GLTexture_bind($this);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum);
},
cbgg_GLTexture_unsafeSetAnisotropicFilter = ($this, $level, $force) => {
    let $max, var$4, var$5;
    $max = cbgg_GLTexture_maxAnisotropicFilterLevel;
    if ($max <= 0.0) {
        if (!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(11))) {
            $max = 1.0;
            cbgg_GLTexture_maxAnisotropicFilterLevel = $max;
        } else {
            var$4 = cbgu_BufferUtils_newFloatBuffer(16);
            var$5 = var$4;
            jn_Buffer_position(var$5, 0);
            jn_Buffer_limit(var$5, var$4.$capacityImpl());
            cbg_Gdx_gl20.$glGetFloatv(34047, var$4);
            $max = jn_FloatBufferImpl_get(var$4, 0);
            cbgg_GLTexture_maxAnisotropicFilterLevel = $max;
        }
    }
    if ($max === 1.0)
        return 1.0;
    $level = jl_Math_minImpl($level, $max);
    if (!$force && (jl_Math_abs0($level - $this.$anisotropicFilterLevel) > 0.10000000149011612 ? 0 : 1))
        return $this.$anisotropicFilterLevel;
    cbg_Gdx_gl20.$glTexParameterf(3553, 34046, $level);
    $this.$anisotropicFilterLevel = $level;
    return $level;
},
cbgg_GLTexture_delete = $this => {
    let var$1;
    var$1 = $this.$glHandle;
    if (var$1) {
        cgxgbt_TeaGL20_glDeleteTexture(cbg_Gdx_gl, var$1);
        $this.$glHandle = 0;
    }
},
cbgg_GLTexture__clinit_ = () => {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
};
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data2 = null;
}
let cbgg_Texture_managedTextures = null,
cbgg_Texture_$callClinit = () => {
    cbgg_Texture_$callClinit = $rt_eraseClinit(cbgg_Texture);
    cbgg_Texture__clinit_();
},
cbgg_Texture__init_1 = ($this, $file, $format, $useMipMaps) => {
    let var$4, var$5;
    cbgg_Texture_$callClinit();
    if ($file === null)
        var$4 = null;
    else {
        var$4 = new cbggg_FileTextureData;
        var$5 = cbgg_Pixmap__init_0($file);
        var$4.$width4 = 0;
        var$4.$height6 = 0;
        var$4.$isPrepared0 = 0;
        var$4.$file0 = $file;
        var$4.$pixmap0 = var$5;
        var$4.$format = $format;
        var$4.$useMipMaps1 = $useMipMaps;
        $file = cbggg_FileTextureData_ensurePot(var$4, var$5);
        var$4.$pixmap0 = $file;
        var$4.$width4 = cbgg_Pixmap_getWidth($file);
        var$4.$height6 = cbgg_Pixmap_getHeight(var$4.$pixmap0);
        if ($format === null)
            var$4.$format = cbgg_Pixmap_getFormat(var$4.$pixmap0);
    }
    cbgg_Texture__init_0($this, var$4);
},
cbgg_Texture__init_3 = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture();
    cbgg_Texture__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture__init_2 = ($this, $pixmap) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_0($this, cbggg_PixmapTextureData__init_0($pixmap, null, 0, 0, 0));
},
cbgg_Texture__init_ = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_2(var_1, var_0);
    return var_1;
},
cbgg_Texture__init_0 = ($this, $data) => {
    let var$2, var$3;
    cbgg_Texture_$callClinit();
    var$2 = cgxgbt_TeaGL20_glGenTexture(cbg_Gdx_gl);
    var$3 = cbgg_Texture$TextureFilter_Nearest;
    $this.$minFilter = var$3;
    $this.$magFilter0 = var$3;
    var$3 = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$uWrap = var$3;
    $this.$vWrap = var$3;
    $this.$anisotropicFilterLevel = 1.0;
    $this.$glTarget = 3553;
    $this.$glHandle = var$2;
    cbgg_Texture_load($this, $data);
    if ($data.$isManaged()) {
        $data = cbg_Gdx_app;
        var$3 = ju_HashMap_get(cbgg_Texture_managedTextures, $data);
        if (var$3 === null)
            var$3 = cbgu_Array__init_();
        cbgu_Array_add(var$3, $this);
        ju_HashMap_put(cbgg_Texture_managedTextures, $data, var$3);
    }
},
cbgg_Texture__init_4 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_0(var_1, var_0);
    return var_1;
},
cbgg_Texture_load = ($this, $data) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    if ($this.$data2 !== null && $data.$isManaged() != $this.$data2.$isManaged()) {
        $data = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($data, $rt_s(12));
        $rt_throw($data);
    }
    $this.$data2 = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    var$2 = $this;
    cbgg_GLTexture_bind(var$2);
    if (!$data.$isPrepared())
        $data.$prepare();
    if ($data.$getType() === cbgg_TextureData$TextureDataType_Custom)
        $data.$consumeCustomData(3553);
    else {
        var$3 = $data.$consumePixmap();
        var$4 = $data.$disposePixmap();
        if ($data.$getFormat() === cbgg_Pixmap_getFormat(var$3))
            var$5 = var$3;
        else {
            var$5 = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth(var$3), cbgg_Pixmap_getHeight(var$3), $data.$getFormat());
            cbgg_Pixmap_setBlending(var$5, cbgg_Pixmap$Blending_None);
            cbgg_Pixmap_drawPixmap1(var$5, var$3, 0, 0, 0, 0, cbgg_Pixmap_getWidth(var$3), cbgg_Pixmap_getHeight(var$3));
            if ($data.$disposePixmap())
                cbgg_Pixmap_dispose(var$3);
            var$4 = 1;
        }
        cbg_Gdx_gl.$glPixelStorei(3317, 1);
        if (!$data.$useMipMaps())
            cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
        else {
            var$6 = cbgg_Pixmap_getWidth(var$5);
            var$7 = cbgg_Pixmap_getHeight(var$5);
            if (!cbggg_MipMapGenerator_useHWMipMap)
                cbggg_MipMapGenerator_generateMipMapCPU(3553, var$5, var$6, var$7);
            else {
                $data = cbg_Application$ApplicationType_WebGL;
                if ($data !== cbg_Application$ApplicationType_Android && $data !== $data && $data !== cbg_Application$ApplicationType_iOS) {
                    if (!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(13)) && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(14)) && !jl_String_equals(jl_Class_getName(jl_Object_getClass(cbg_Gdx_gl20)), $rt_s(15)) && cbg_Gdx_gl30 === null)
                        cbggg_MipMapGenerator_generateMipMapCPU(3553, var$5, var$6, var$7);
                    else {
                        cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
                        cbg_Gdx_gl20.$glGenerateMipmap(3553);
                    }
                } else {
                    cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
                    cbg_Gdx_gl20.$glGenerateMipmap(3553);
                }
            }
        }
        if (var$4)
            cbgg_Pixmap_dispose(var$5);
    }
    cbgg_GLTexture_unsafeSetFilter(var$2, $this.$minFilter, $this.$magFilter0, 1);
    cbgg_GLTexture_unsafeSetWrap(var$2, $this.$uWrap, $this.$vWrap, 1);
    cbgg_GLTexture_unsafeSetAnisotropicFilter(var$2, $this.$anisotropicFilterLevel, 1);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
},
cbgg_Texture_getWidth = $this => {
    return $this.$data2.$getWidth();
},
cbgg_Texture_getHeight = $this => {
    return $this.$data2.$getHeight();
},
cbgg_Texture_dispose = $this => {
    let var$1, var$2;
    if (!$this.$glHandle)
        return;
    cbgg_GLTexture_delete($this);
    if ($this.$data2.$isManaged()) {
        cbgg_Texture_$callClinit();
        var$1 = cbgg_Texture_managedTextures;
        var$2 = cbg_Gdx_app;
        if (ju_HashMap_get(var$1, var$2) !== null) {
            var$2 = cbgg_Texture_managedTextures;
            var$1 = cbg_Gdx_app;
            cbgu_Array_removeValue(ju_HashMap_get(var$2, var$1), $this, 1);
        }
    }
},
cbgg_Texture_toString = $this => {
    let var$1;
    var$1 = $this.$data2;
    if (!(var$1 instanceof cbggg_FileTextureData))
        return jl_Object_toString($this);
    return jl_Object_toString(var$1);
},
cbgg_Texture__clinit_ = () => {
    cbgg_Texture_managedTextures = ju_HashMap__init_();
},
jl_Iterable = $rt_classWithoutFields(0);
function cbgu_Array() {
    let a = this; jl_Object.call(a);
    a.$items = null;
    a.$size0 = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
let cbgu_Array__init_2 = $this => {
    cbgu_Array__init_1($this, 1, 16);
},
cbgu_Array__init_ = () => {
    let var_0 = new cbgu_Array();
    cbgu_Array__init_2(var_0);
    return var_0;
},
cbgu_Array__init_4 = ($this, $capacity) => {
    cbgu_Array__init_1($this, 1, $capacity);
},
cbgu_Array__init_0 = var_0 => {
    let var_1 = new cbgu_Array();
    cbgu_Array__init_4(var_1, var_0);
    return var_1;
},
cbgu_Array__init_1 = ($this, $ordered, $capacity) => {
    $this.$ordered = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
},
cbgu_Array__init_3 = (var_0, var_1) => {
    let var_2 = new cbgu_Array();
    cbgu_Array__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items;
    var$3 = $items.data;
    var$4 = $this.$size0;
    if (var$4 == var$3.length)
        $items = cbgu_Array_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size0;
    $this.$size0 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_Array_addAll = ($this, $array) => {
    cbgu_Array_addAll0($this, $array.$items, 0, $array.$size0);
},
cbgu_Array_addAll0 = ($this, $array, $start, $count) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size0 + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = cbgu_Array_resize($this, jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size0 * 1.75 | 0));
    jl_System_fastArraycopy($array, $start, $items, $this.$size0, $count);
    $this.$size0 = $sizeNeeded;
},
cbgu_Array_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size0)
        return $this.$items.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(16));
    var$3 = jl_StringBuilder_append0(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$3, $this.$size0)));
    $rt_throw(var$2);
},
cbgu_Array_indexOf = ($this, $value, $identity) => {
    let $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!$identity && $value !== null) {
            $i = 0;
            $n = $this.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                if (jl_Object_equals($value, $items.data[$i]))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $i = 0;
        $n = $this.$size0;
        while (true) {
            if ($i >= $n)
                break a;
            if ($items.data[$i] === $value)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    return (-1);
},
cbgu_Array_removeValue = ($this, $value, $identity) => {
    let $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size0;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i])) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
cbgu_Array_removeIndex = ($this, $index) => {
    let var$2, var$3, $value, $items, var$6, var$7;
    var$2 = $this.$size0;
    if ($index >= var$2) {
        var$3 = new jl_IndexOutOfBoundsException;
        $value = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($value);
        jl_AbstractStringBuilder_append($value, $rt_s(16));
        $value = jl_StringBuilder_append0($value, $index);
        jl_AbstractStringBuilder_append($value, $rt_s(5));
        jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($value, $this.$size0)));
        $rt_throw(var$3);
    }
    $items = $this.$items;
    var$6 = $items.data;
    $value = var$6[$index];
    var$7 = var$2 - 1 | 0;
    $this.$size0 = var$7;
    if (!$this.$ordered)
        var$6[$index] = var$6[var$7];
    else
        jl_System_fastArraycopy($items, $index + 1 | 0, $items, $index, var$7 - $index | 0);
    var$6[$this.$size0] = null;
    return $value;
},
cbgu_Array_pop = $this => {
    let var$1, $item, var$3, var$4;
    var$1 = $this.$size0;
    if (!var$1) {
        $item = new jl_IllegalStateException;
        jl_RuntimeException__init_($item, $rt_s(17));
        $rt_throw($item);
    }
    var$3 = var$1 - 1 | 0;
    $this.$size0 = var$3;
    var$4 = $this.$items.data;
    $item = var$4[var$3];
    var$4[var$3] = null;
    return $item;
},
cbgu_Array_peek = $this => {
    let var$1, var$2;
    var$1 = $this.$size0;
    if (!var$1) {
        var$2 = new jl_IllegalStateException;
        jl_RuntimeException__init_(var$2, $rt_s(17));
        $rt_throw(var$2);
    }
    return $this.$items.data[var$1 - 1 | 0];
},
cbgu_Array_first = $this => {
    let var$1;
    if ($this.$size0)
        return $this.$items.data[0];
    var$1 = new jl_IllegalStateException;
    jl_RuntimeException__init_(var$1, $rt_s(17));
    $rt_throw(var$1);
},
cbgu_Array_clear = $this => {
    ju_Arrays_fill0($this.$items, 0, $this.$size0, null);
    $this.$size0 = 0;
},
cbgu_Array_resize = ($this, $newSize) => {
    let $items, $newItems, var$4;
    $items = $this.$items;
    $newItems = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($items)), $newSize);
    var$4 = $newItems.data;
    jl_System_fastArraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size0, var$4.length));
    $this.$items = $newItems;
    return $newItems;
},
cbgu_Array_iterator = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = cbgu_Collections_allocateIterators;
    if (var$1)
        return cbgu_Array$ArrayIterator__init_($this, 1);
    if ($this.$iterable === null) {
        var$2 = new cbgu_Array$ArrayIterable;
        var$2.$array4 = $this;
        var$2.$allowRemove = 1;
        $this.$iterable = var$2;
    }
    var$2 = $this.$iterable;
    if (var$1)
        var$3 = cbgu_Array$ArrayIterator__init_(var$2.$array4, var$2.$allowRemove);
    else {
        if (var$2.$iterator10 === null) {
            var$2.$iterator10 = cbgu_Array$ArrayIterator__init_(var$2.$array4, var$2.$allowRemove);
            var$2.$iterator2 = cbgu_Array$ArrayIterator__init_(var$2.$array4, var$2.$allowRemove);
        }
        var$4 = var$2.$iterator10;
        if (var$4.$valid) {
            var$3 = var$2.$iterator2;
            var$3.$index0 = 0;
            var$3.$valid = 1;
            var$4.$valid = 0;
        } else {
            var$4.$index0 = 0;
            var$4.$valid = 1;
            var$2.$iterator2.$valid = 0;
            var$3 = var$4;
        }
    }
    return var$3;
},
cbgu_Array_truncate = ($this, $newSize) => {
    let var$2, var$3, var$4, $i;
    if ($newSize < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, $rt_s(18));
        jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$3, $newSize)));
        $rt_throw(var$2);
    }
    var$4 = $this.$size0;
    if (var$4 <= $newSize)
        return;
    $i = $newSize;
    while ($i < var$4) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size0 = $newSize;
},
cbgu_Array_hashCode = $this => {
    let $items, $h, $i, $n, var$5, $item;
    if (!$this.$ordered)
        return jl_Object_identity($this);
    $items = $this.$items;
    $h = 1;
    $i = 0;
    $n = $this.$size0;
    while ($i < $n) {
        var$5 = $items.data;
        $h = $h * 31 | 0;
        $item = var$5[$i];
        if ($item !== null)
            $h = $h + $item.$hashCode() | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_Array_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size0;
    if ($n != $array.$size0)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
},
cbgu_Array_toString = $this => {
    let $items, $buffer, $i;
    if (!$this.$size0)
        return $rt_s(19);
    $items = $this.$items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    cbgu_StringBuilder_append0($buffer, 91);
    cbgu_StringBuilder_append($buffer, $items[0]);
    $i = 1;
    while ($i < $this.$size0) {
        cbgu_StringBuilder_append00($buffer, $rt_s(20));
        cbgu_StringBuilder_append($buffer, $items[$i]);
        $i = $i + 1 | 0;
    }
    cbgu_StringBuilder_append0($buffer, 93);
    return cbgu_StringBuilder_toString($buffer);
},
cbgu_Json = $rt_classWithoutFields();
function cbgu_ObjectMap() {
    let a = this; jl_Object.call(a);
    a.$size7 = 0;
    a.$keyTable = null;
    a.$valueTable = null;
    a.$loadFactor2 = 0.0;
    a.$threshold = 0;
    a.$shift2 = 0;
    a.$mask2 = 0;
}
let cbgu_ObjectMap_dummy = null,
cbgu_ObjectMap__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor2 = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask2 = var$2;
    $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable = $rt_createArray(jl_Object, var$1);
    $this.$valueTable = $rt_createArray(jl_Object, var$1);
},
cbgu_ObjectMap__init_ = () => {
    let var_0 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_0(var_0);
    return var_0;
},
cbgu_ObjectMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift2));
},
cbgu_ObjectMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($other, $rt_s(21));
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable;
    $i = cbgu_ObjectMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    return $i;
},
cbgu_ObjectMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable.data;
    var$4[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    $i = $this.$size7 + 1 | 0;
    $this.$size7 = $i;
    if ($i >= $this.$threshold)
        cbgu_ObjectMap_resize($this, var$4.length << 1);
    return null;
},
cbgu_ObjectMap_get = ($this, $key) => {
    let $i;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
},
cbgu_ObjectMap_containsKey = ($this, $key) => {
    return cbgu_ObjectMap_locateKey($this, $key) < 0 ? 0 : 1;
},
cbgu_ObjectMap_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, $oldValueTable, $i, $key, var$8, var$9, var$10;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold = $newSize * $this.$loadFactor2 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask2 = var$3;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $oldKeyTable = $this.$keyTable;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size7 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    var$8 = $oldValueTable.data[$i];
                    var$9 = $this.$keyTable;
                    $newSize = cbgu_ObjectMap_place($this, $key);
                    while (true) {
                        var$10 = var$9.data;
                        if (var$10[$newSize] === null)
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask2;
                    }
                    var$10[$newSize] = $key;
                    $this.$valueTable.data[$newSize] = var$8;
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgu_ObjectMap__clinit_ = () => {
    cbgu_ObjectMap_dummy = new jl_Object;
};
function cbgu_OrderedMap() {
    cbgu_ObjectMap.call(this);
    this.$keys = null;
}
let cbgu_OrderedMap__init_0 = $this => {
    cbgu_ObjectMap__init_0($this);
    $this.$keys = cbgu_Array__init_();
},
cbgu_OrderedMap__init_ = () => {
    let var_0 = new cbgu_OrderedMap();
    cbgu_OrderedMap__init_0(var_0);
    return var_0;
},
cbgu_OrderedMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    cbgu_Array_add($this.$keys, $key);
    $i = $this.$size7 + 1 | 0;
    $this.$size7 = $i;
    if ($i >= $this.$threshold)
        cbgu_ObjectMap_resize($this, $this.$keyTable.data.length << 1);
    return null;
},
cbgu_Queue = $rt_classWithoutFields(),
cbgu_Predicate = $rt_classWithoutFields(0);
function cbgg_VertexAttribute() {
    let a = this; jl_Object.call(a);
    a.$usage4 = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type3 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
let cbgg_VertexAttribute__init_0 = ($this, $usage, $numComponents, $alias) => {
    let var$4, var$5;
    var$4 = $rt_compare($usage, 4);
    var$5 = var$4 ? 5126 : 5121;
    var$4 = var$4 ? 0 : 1;
    $this.$usage4 = $usage;
    $this.$numComponents = $numComponents;
    $this.$type3 = var$5;
    $this.$normalized = var$4;
    $this.$alias = $alias;
    $this.$unit = 0;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
},
cbgg_VertexAttribute__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbg_Net = $rt_classWithoutFields(0),
cbgm_MapObject = $rt_classWithoutFields(),
cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0),
cbgggp_ParticleEffect = $rt_classWithoutFields(),
cbgu_Json$Serializable = $rt_classWithoutFields(0),
cbgggp_ParticleController = $rt_classWithoutFields(),
cbgggp_ResourceData = $rt_classWithoutFields(),
cbgggp_ParallelArray = $rt_classWithoutFields(),
cbgm_Interpolation = $rt_classWithoutFields(),
cbgm_Interpolation_linear = null,
cbgm_Interpolation_smooth = null,
cbgm_Interpolation_smooth2 = null,
cbgm_Interpolation_smoother = null,
cbgm_Interpolation_fade = null,
cbgm_Interpolation_pow2 = null,
cbgm_Interpolation_pow2In = null,
cbgm_Interpolation_slowFast = null,
cbgm_Interpolation_pow2Out = null,
cbgm_Interpolation_fastSlow = null,
cbgm_Interpolation_pow2InInverse = null,
cbgm_Interpolation_pow2OutInverse = null,
cbgm_Interpolation_pow3 = null,
cbgm_Interpolation_pow3In = null,
cbgm_Interpolation_pow3Out = null,
cbgm_Interpolation_pow3InInverse = null,
cbgm_Interpolation_pow3OutInverse = null,
cbgm_Interpolation_pow4 = null,
cbgm_Interpolation_pow4In = null,
cbgm_Interpolation_pow4Out = null,
cbgm_Interpolation_pow5 = null,
cbgm_Interpolation_pow5In = null,
cbgm_Interpolation_pow5Out = null,
cbgm_Interpolation_sine = null,
cbgm_Interpolation_sineIn = null,
cbgm_Interpolation_sineOut = null,
cbgm_Interpolation_exp10 = null,
cbgm_Interpolation_exp10In = null,
cbgm_Interpolation_exp10Out = null,
cbgm_Interpolation_exp5 = null,
cbgm_Interpolation_exp5In = null,
cbgm_Interpolation_exp5Out = null,
cbgm_Interpolation_circle = null,
cbgm_Interpolation_circleIn = null,
cbgm_Interpolation_circleOut = null,
cbgm_Interpolation_elastic = null,
cbgm_Interpolation_elasticIn = null,
cbgm_Interpolation_elasticOut = null,
cbgm_Interpolation_swing = null;
let cbgm_Interpolation_swingIn = null,
cbgm_Interpolation_swingOut = null,
cbgm_Interpolation_bounce = null,
cbgm_Interpolation_bounceIn = null,
cbgm_Interpolation_bounceOut = null,
cbgm_Interpolation_$callClinit = () => {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
},
cbgm_Interpolation__init_ = $this => {
    cbgm_Interpolation_$callClinit();
},
cbgm_Interpolation__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Interpolation$1;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_linear = var$1;
    var$1 = new cbgm_Interpolation$2;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smooth = var$1;
    var$1 = new cbgm_Interpolation$3;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smooth2 = var$1;
    var$1 = new cbgm_Interpolation$4;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smoother = var$1;
    cbgm_Interpolation_fade = var$1;
    cbgm_Interpolation_pow2 = cbgm_Interpolation$Pow__init_0(2);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 2);
    cbgm_Interpolation_pow2In = var$1;
    cbgm_Interpolation_slowFast = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 2);
    cbgm_Interpolation_pow2Out = var$1;
    cbgm_Interpolation_fastSlow = var$1;
    var$1 = new cbgm_Interpolation$5;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow2InInverse = var$1;
    var$1 = new cbgm_Interpolation$6;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow2OutInverse = var$1;
    cbgm_Interpolation_pow3 = cbgm_Interpolation$Pow__init_0(3);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 3);
    cbgm_Interpolation_pow3In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 3);
    cbgm_Interpolation_pow3Out = var$1;
    var$1 = new cbgm_Interpolation$7;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow3InInverse = var$1;
    var$1 = new cbgm_Interpolation$8;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow3OutInverse = var$1;
    cbgm_Interpolation_pow4 = cbgm_Interpolation$Pow__init_0(4);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 4);
    cbgm_Interpolation_pow4In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 4);
    cbgm_Interpolation_pow4Out = var$1;
    cbgm_Interpolation_pow5 = cbgm_Interpolation$Pow__init_0(5);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 5);
    cbgm_Interpolation_pow5In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 5);
    cbgm_Interpolation_pow5Out = var$1;
    var$1 = new cbgm_Interpolation$9;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sine = var$1;
    var$1 = new cbgm_Interpolation$10;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sineIn = var$1;
    var$1 = new cbgm_Interpolation$11;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sineOut = var$1;
    cbgm_Interpolation_exp10 = cbgm_Interpolation$Exp__init_0(2.0, 10.0);
    var$1 = new cbgm_Interpolation$ExpIn;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
    cbgm_Interpolation_exp10In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
    cbgm_Interpolation_exp10Out = var$1;
    cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_0(2.0, 5.0);
    var$1 = new cbgm_Interpolation$ExpIn;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 5.0);
    cbgm_Interpolation_exp5In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 5.0);
    cbgm_Interpolation_exp5Out = var$1;
    var$1 = new cbgm_Interpolation$12;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circle = var$1;
    var$1 = new cbgm_Interpolation$13;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circleIn = var$1;
    var$1 = new cbgm_Interpolation$14;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circleOut = var$1;
    cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_0(2.0, 10.0, 7, 1.0);
    var$1 = new cbgm_Interpolation$ElasticIn;
    cbgm_Interpolation$Elastic__init_(var$1, 2.0, 10.0, 6, 1.0);
    cbgm_Interpolation_elasticIn = var$1;
    var$1 = new cbgm_Interpolation$ElasticOut;
    cbgm_Interpolation$Elastic__init_(var$1, 2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_elasticOut = var$1;
    var$1 = new cbgm_Interpolation$Swing;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale1 = 3.0;
    cbgm_Interpolation_swing = var$1;
    var$1 = new cbgm_Interpolation$SwingIn;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale4 = 2.0;
    cbgm_Interpolation_swingIn = var$1;
    var$1 = new cbgm_Interpolation$SwingOut;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale2 = 2.0;
    cbgm_Interpolation_swingOut = var$1;
    var$1 = new cbgm_Interpolation$Bounce;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounce = var$1;
    var$1 = new cbgm_Interpolation$BounceIn;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounceIn = var$1;
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_0(4);
},
jlr_AnnotatedElement = $rt_classWithoutFields(0),
jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    let a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$simpleName = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
let jl_Class_reflectionInitialized = 0,
jl_Class_getClass = $cls => {
    let $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null) {
        $result = new jl_Class;
        $result.$platformClass = $cls;
        $cls.classObject = $result;
    }
    return $result;
},
jl_Class_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = (!($this.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(22) : !jl_Class_isPrimitive($this) ? $rt_s(23) : $rt_s(8);
    var$2 = jl_Class_getName($this);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jl_Class_isInstance = ($this, $obj) => {
    let var$2;
    $obj = $obj;
    var$2 = $this.$platformClass;
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, var$2) ? 1 : 0;
},
jl_Class_getName = $this => {
    if ($this.$name0 === null)
        $this.$name0 = otp_Platform_getName($this.$platformClass);
    return $this.$name0;
},
jl_Class_getSimpleName = $this => {
    let $simpleName, var$2, $lastDollar, $lastDot;
    $simpleName = $this.$simpleName;
    if ($simpleName === null) {
        if (jl_Class_isArray($this)) {
            $simpleName = jl_Class_getSimpleName(jl_Class_getComponentType($this));
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_StringBuilder_append(jl_StringBuilder_append(var$2, $simpleName), $rt_s(19));
            $simpleName = jl_AbstractStringBuilder_toString(var$2);
        } else {
            $simpleName = $this.$platformClass.$meta.enclosingClass;
            if (($simpleName === null ? null : jl_Class_getClass($simpleName)) !== null) {
                $simpleName = $rt_str($this.$platformClass.$meta.simpleName);
                if ($simpleName === null)
                    $simpleName = $rt_s(8);
            } else {
                $simpleName = otp_Platform_getName($this.$platformClass);
                $lastDollar = jl_String_lastIndexOf0($simpleName, 36);
                if ($lastDollar == (-1)) {
                    $lastDot = jl_String_lastIndexOf0($simpleName, 46);
                    if ($lastDot != (-1))
                        $simpleName = jl_String_substring0($simpleName, $lastDot + 1 | 0);
                } else {
                    $simpleName = jl_String_substring0($simpleName, $lastDollar + 1 | 0);
                    if (jl_String_charAt($simpleName, 0) >= 48 && jl_String_charAt($simpleName, 0) <= 57)
                        $simpleName = $rt_s(8);
                }
            }
        }
        $this.$simpleName = $simpleName;
    }
    return $simpleName;
},
jl_Class_isPrimitive = $this => {
    return $this.$platformClass.$meta.primitive ? 1 : 0;
},
jl_Class_isArray = $this => {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
},
jl_Class_getComponentType = $this => {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
},
jl_Class_createMetadata = () => {
    cbggg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun__init_(obj );
                return null;
            }
        }, {
            name : "appendRun",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }];
    cbggg_GlyphLayout.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_3(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_1(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls, $rt_intcls, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls, jl_String],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_2(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls, $rt_intcls, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls, jl_String],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "calculateWidths",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "alignRuns",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_floatcls, $rt_intcls],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls, jl_String],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls],
            returnType : cbggg_GlyphLayout$GlyphRun,
            callable : null
        }, {
            name : "setLastGlyphXAdvance",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "getGlyphWidth",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$Glyph, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls,
            callable : null
        }, {
            name : "getLineOffset",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbgu_Array, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls,
            callable : null
        }, {
            name : "parseColorMarkup",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_CharSequence, $rt_intcls, $rt_intcls],
            returnType : $rt_intcls,
            callable : null
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : null
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : null
        }];
},
jl_Class_getDeclaredConstructors = $this => {
    let $jsMethods, $count, $i, var$4, $jsMethod, $jsParameterTypes, $parameterTypes, var$8, $j, var$10, var$11, var$12;
    if (!jl_Class_isPrimitive($this) && !jl_Class_isArray($this)) {
        if ($this.$declaredConstructors === null) {
            if (!jl_Class_reflectionInitialized) {
                jl_Class_reflectionInitialized = 1;
                jl_Class_createMetadata();
            }
            $jsMethods = $this.$platformClass.$meta.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                var$4 = $jsMethods[$i];
                $jsMethod = var$4 === null ? null : !(var$4 instanceof $rt_objcls()) ? var$4 : otji_JSWrapper_unwrap(var$4);
                if (jl_String_equals($rt_str($jsMethod.name), $rt_s(24))) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    var$8 = $parameterTypes.data;
                    $j = 0;
                    var$10 = var$8.length;
                    while ($j < var$10) {
                        var$8[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$8 = $this.$declaredConstructors;
                    var$10 = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    var$4 = $rt_str($jsMethod.name);
                    var$12 = $jsMethod.modifiers;
                    $j = $jsMethod.accessLevel;
                    $jsParameterTypes = otji_JS_functionAsObject($jsMethod.callable, "call");
                    if ($jsParameterTypes === null)
                        $jsMethod = null;
                    else {
                        $jsMethod = new otcir_MethodCaller$forJs$lambda$_1_0;
                        $jsMethod.$_02 = $jsParameterTypes;
                    }
                    var$8 = var$8.data;
                    var$11.$declaringClass = $this;
                    var$11.$name4 = var$4;
                    var$11.$modifiers = var$12;
                    var$11.$accessLevel = $j;
                    var$11.$parameterTypes = $parameterTypes;
                    var$11.$caller = $jsMethod;
                    var$8[$count] = var$11;
                    $count = var$10;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone0();
    }
    return $rt_createArray(jlr_Constructor, 0);
},
jl_Class_getDeclaredConstructor = ($this, $parameterTypes) => {
    let var$2, var$3, var$4, $constructor;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            jl_Exception__init_($constructor);
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        if (ju_Arrays_equals(jlr_Constructor_getParameterTypes($constructor), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
},
jl_Class_getConstructor = ($this, $parameterTypes) => {
    let var$2, var$3, var$4, $constructor;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            jl_Exception__init_($constructor);
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        if (jlr_Modifier_isPublic(jlr_Constructor_getModifiers($constructor)) && ju_Arrays_equals(jlr_Constructor_getParameterTypes($constructor), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
},
otji_JS = $rt_classWithoutFields(),
otji_JS_wrap = $array => {
    let var$2, $result, $i, var$5;
    if ($array === null)
        return null;
    $array = $array.data;
    var$2 = $array.length;
    $result = new Int8Array(var$2);
    $i = 0;
    while ($i < var$2) {
        var$5 = $array[$i];
        $result[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_function = (var$1, var$2) => {
    let name = 'jso$functor$' + var$2;
    let result = var$1[name];
    if (typeof result !== 'function') {
        let fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        result = () => fn;
        var$1[name] = result;
    }
    return result();
},
otji_JS_functionAsObject = (var$1, var$2) => {
    if (typeof var$1 !== 'function') return var$1;
    let result = {  };
    result[var$2] = var$1;
    return result;
},
otp_Platform = $rt_classWithoutFields(),
otp_Platform_clone = var$1 => {
    let copy = new var$1.constructor();
    for (let field in var$1) {
        if (var$1.hasOwnProperty(field)) {
            copy[field] = var$1[field];
        }
    }
    return copy;
},
otp_Platform_isAssignable = (var$1, var$2) => {
    let $supertypes, $i;
    if (var$1 === var$2)
        return 1;
    $supertypes = var$1.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], var$2))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
otp_Platform_launchThread = $runnable => {
    let var$2, var$3, var$4;
    $runnable = $runnable.$_012;
    if (!jl_Object_isEmptyMonitor($runnable)) {
        var$2 = $runnable.$monitor;
        if (var$2.$owner === null) {
            $runnable = var$2.$enteringThreads;
            if ($runnable !== null && !otp_PlatformQueue_isEmpty$static($runnable)) {
                $runnable = var$2.$enteringThreads.shift();
                if ($runnable !== null && !($runnable instanceof $rt_objcls()))
                    $runnable = otji_JSWrapper_wrap($runnable);
                var$3 = $runnable;
                var$2.$enteringThreads = null;
                $runnable = var$3;
                var$2 = $runnable.$_010;
                var$3 = $runnable.$_14;
                var$4 = $runnable.$_23;
                $runnable = $runnable.$_31;
                jl_Thread_setCurrentThread(var$2);
                var$3 = var$3.$monitor;
                var$3.$owner = var$2;
                var$3.$count = var$3.$count + var$4 | 0;
                var$2 = null;
                otpp_AsyncCallbackWrapper_complete($runnable, var$2);
            }
        }
    }
},
otp_Platform_schedule = (var$1, var$2) => {
    setTimeout(() => {
        otp_Platform_launchThread(var$1);
    }, var$2);
},
otp_Platform_getArrayItem = var$1 => {
    return var$1.$meta.item;
},
otp_Platform_getName = $cls => {
    return $rt_str($cls.$meta.name);
},
otp_Platform_createQueueJs$js_body$_30 = () => {
    return [];
};
function jl_Throwable() {
    let a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
let jl_Throwable__init_ = ($this, $message, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
},
jl_Throwable__init_2 = (var_0, var_1) => {
    let var_2 = new jl_Throwable();
    jl_Throwable__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Throwable__init_0 = ($this, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$cause = $cause;
},
jl_Throwable__init_1 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_0(var_1, var_0);
    return var_1;
},
jl_Throwable_fillInStackTrace = $this => {
    return $this;
},
jl_Throwable_initNativeException = $this => {
    $rt_fillNativeException($this);
},
jl_Throwable_getMessage = $this => {
    return $this.$message;
},
jl_Throwable_getLocalizedMessage = $this => {
    return $this.$getMessage();
},
jl_Throwable_getCause = $this => {
    let var$1;
    var$1 = $this.$cause;
    if (var$1 === $this)
        var$1 = null;
    return var$1;
},
jl_Throwable_printStackTrace0 = $this => {
    jl_Throwable_printStackTrace($this, jl_System_err());
},
jl_Throwable_printStackTrace = ($this, $stream) => {
    let var$2, var$3, $message, var$5, var$6, var$7, $element, var$9;
    var$2 = jl_Class_getName(jl_Object_getClass($this));
    var$3 = $stream;
    otcic_JSStderrPrintStream_print(var$3, var$2);
    $message = $this.$getMessage();
    if ($message !== null) {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(25)), $message);
        otcic_JSStderrPrintStream_print(var$3, jl_AbstractStringBuilder_toString(var$2));
    }
    a: {
        var$2 = $stream;
        otcic_JSStderrPrintStream_print(var$2, $rt_s(26));
        var$5 = $this.$stackTrace;
        if (var$5 !== null) {
            var$5 = var$5.data;
            var$6 = var$5.length;
            var$7 = 0;
            while (true) {
                if (var$7 >= var$6)
                    break a;
                $element = var$5[var$7];
                otcic_JSStderrPrintStream_print(var$3, $rt_s(27));
                var$9 = $rt_s(28);
                if ($element !== null)
                    var$9 = $element.$toString();
                otcic_JsConsolePrintStream_println(var$2, var$9);
                var$7 = var$7 + 1 | 0;
            }
        }
    }
    var$2 = $this.$cause;
    if (var$2 !== null && var$2 !== $this) {
        otcic_JSStderrPrintStream_print(var$3, $rt_s(29));
        jl_Throwable_printStackTrace($this.$cause, $stream);
    }
},
jl_Exception = $rt_classWithoutFields(jl_Throwable),
jl_Exception__init_ = $this => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_Exception__init_0 = () => {
    let var_0 = new jl_Exception();
    jl_Exception__init_(var_0);
    return var_0;
},
jl_RuntimeException = $rt_classWithoutFields(jl_Exception),
jl_RuntimeException__init_0 = $this => {
    jl_Exception__init_($this);
},
jl_RuntimeException__init_2 = () => {
    let var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_0);
    return var_0;
},
jl_RuntimeException__init_ = ($this, $message) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
jl_RuntimeException__init_1 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_(var_1, var_0);
    return var_1;
},
jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException),
ji_Serializable = $rt_classWithoutFields(0),
jl_Comparable = $rt_classWithoutFields(0),
jl_CharSequence = $rt_classWithoutFields(0);
function jl_String() {
    jl_Object.call(this);
    this.$hashCode0 = 0;
}
let jl_String_EMPTY_CHARS = null,
jl_String_EMPTY = null,
jl_String_CASE_INSENSITIVE_ORDER = null,
jl_String__init_5 = $this => {
    $this.$nativeString = "";
},
jl_String__init_2 = () => {
    let var_0 = new jl_String();
    jl_String__init_5(var_0);
    return var_0;
},
jl_String__init_1 = ($this, $characters) => {
    $this.$nativeString = $rt_charArrayToString($characters.data, 0, $characters.data.length);
},
jl_String__init_0 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_1(var_1, var_0);
    return var_1;
},
jl_String__init_6 = (var$0, var$1) => {
    var$0.$nativeString = var$1;
},
jl_String__init_3 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_6(var_1, var_0);
    return var_1;
},
jl_String__init_4 = (var$0, var$1, $offset, $count) => {
    ju_Objects_checkFromIndexSize($offset, $count, var$1.data.length);
    var$0.$nativeString = $rt_charArrayToString(var$1.data, $offset, $count);
},
jl_String__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_String_charAt = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$nativeString.length)
        return $this.$nativeString.charCodeAt($index);
    var$2 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
jl_String_length = $this => {
    return $this.$nativeString.length;
},
jl_String_isEmpty = $this => {
    return $this.$nativeString.length ? 0 : 1;
},
jl_String_compareTo = ($this, $anotherString) => {
    let $l, $i, $a;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$nativeString.length, $anotherString.$nativeString.length);
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$nativeString.length - $anotherString.$nativeString.length | 0;
        $a = jl_String_charAt($this, $i) - jl_String_charAt($anotherString, $i) | 0;
        if ($a)
            break;
        $i = $i + 1 | 0;
    }
    return $a;
},
jl_String_startsWith0 = ($this, $prefix, $toffset) => {
    let $i, var$4, var$5;
    if (($toffset + $prefix.$nativeString.length | 0) > $this.$nativeString.length)
        return 0;
    $i = 0;
    while ($i < $prefix.$nativeString.length) {
        var$4 = jl_String_charAt($prefix, $i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != jl_String_charAt($this, $toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
},
jl_String_startsWith = ($this, $prefix) => {
    if ($this === $prefix)
        return 1;
    return jl_String_startsWith0($this, $prefix, 0);
},
jl_String_endsWith = ($this, $suffix) => {
    let $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$nativeString.length > $this.$nativeString.length)
        return 0;
    $j = 0;
    $i = $this.$nativeString.length - $suffix.$nativeString.length | 0;
    while ($i < $this.$nativeString.length) {
        var$4 = jl_String_charAt($this, $i);
        var$5 = $j + 1 | 0;
        if (var$4 != jl_String_charAt($suffix, $j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
},
jl_String_indexOf = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$nativeString.length)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$nativeString.length - 1 | 0))
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $hi && $this.$nativeString.charCodeAt(($i + 1 | 0)) == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_lastIndexOf = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_min($fromIndex, $this.$nativeString.length - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $lo) {
            $fromIndex = $i - 1 | 0;
            if ($this.$nativeString.charCodeAt($fromIndex) == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $fromIndex;
},
jl_String_lastIndexOf0 = ($this, $ch) => {
    return jl_String_lastIndexOf($this, $ch, $this.$nativeString.length - 1 | 0);
},
jl_String_indexOf0 = ($this, $str, $fromIndex) => {
    let $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$nativeString.length - $str.$nativeString.length | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$nativeString.length)
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_lastIndexOf1 = ($this, $str, $fromIndex) => {
    let $i, $j;
    $i = jl_Math_min($fromIndex, $this.$nativeString.length - $str.$nativeString.length | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$nativeString.length)
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
},
jl_String_substring = ($this, $beginIndex, $endIndex) => {
    let $length, var$4, var$5;
    $length = $this.$nativeString.length;
    var$4 = $rt_compare($beginIndex, $endIndex);
    if (!var$4)
        return jl_String_EMPTY;
    if (!$beginIndex && $endIndex == $length)
        return $this;
    if ($beginIndex >= 0 && var$4 <= 0 && $endIndex <= $length)
        return jl_String__init_3($this.$nativeString.substring($beginIndex, $endIndex));
    var$5 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_(var$5);
    $rt_throw(var$5);
},
jl_String_substring0 = ($this, $beginIndex) => {
    return jl_String_substring($this, $beginIndex, $this.$nativeString.length);
},
jl_String_replace = ($this, $target, $replacement) => {
    let $sb, $i, $sz, var$6, var$7, $i_0, $j;
    if ($target === $replacement)
        return $this;
    $target = $target;
    if (jl_String_isEmpty($target)) {
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        $i = 0;
        while ($i < $this.$nativeString.length) {
            jl_StringBuilder_append($sb, $replacement);
            jl_AbstractStringBuilder_append0($sb, jl_String_charAt($this, $i));
            $i = $i + 1 | 0;
        }
        jl_StringBuilder_append($sb, $replacement);
        return jl_AbstractStringBuilder_toString($sb);
    }
    if ($target.$nativeString.length == 1) {
        $sb = $replacement;
        if ($sb.$nativeString.length == 1) {
            $i = jl_String_charAt($target, 0);
            $sz = jl_String_charAt($sb, 0);
            if ($i != $sz) {
                var$6 = $rt_createCharArray($this.$nativeString.length);
                var$7 = var$6.data;
                $i_0 = 0;
                while ($i_0 < $this.$nativeString.length) {
                    var$7[$i_0] = jl_String_charAt($this, $i_0) != $i ? jl_String_charAt($this, $i_0) : $sz;
                    $i_0 = $i_0 + 1 | 0;
                }
                $this = jl_String__init_2();
                $this.$nativeString = $rt_fullArrayToString(var$6.data);
            }
            return $this;
        }
    }
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($sb);
    $sz = $this.$nativeString.length - $target.$nativeString.length | 0;
    $i_0 = 0;
    while ($i_0 <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$nativeString.length) {
                    jl_StringBuilder_append($sb, $replacement);
                    $i_0 = $i_0 + ($target.$nativeString.length - 1 | 0) | 0;
                    break a;
                }
                if (jl_String_charAt($this, $i_0 + $j | 0) != jl_String_charAt($target, $j))
                    break;
                $j = $j + 1 | 0;
            }
            jl_AbstractStringBuilder_append0($sb, jl_String_charAt($this, $i_0));
        }
        $i_0 = $i_0 + 1 | 0;
    }
    jl_StringBuilder_append($sb, jl_String_substring0($this, $i_0));
    return jl_AbstractStringBuilder_toString($sb);
},
jl_String_trim = $this => {
    let $lower, $upper;
    $lower = 0;
    $upper = $this.$nativeString.length - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if (jl_String_charAt($this, $lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && jl_String_charAt($this, $upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return jl_String_substring($this, $lower, $upper + 1 | 0);
},
jl_String_toString = $this => {
    return $this;
},
jl_String_toCharArray = $this => {
    let $array, var$2, $i, var$4;
    $array = $rt_createCharArray($this.$nativeString.length);
    var$2 = $array.data;
    $i = 0;
    var$4 = var$2.length;
    while ($i < var$4) {
        var$2[$i] = jl_String_charAt($this, $i);
        $i = $i + 1 | 0;
    }
    return $array;
},
jl_String_valueOf = $obj => {
    return $obj === null ? $rt_s(28) : $obj.$toString();
},
jl_String_valueOf0 = $c => {
    let var$2, var$3;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
},
jl_String_valueOf1 = $i => {
    let var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$2, $i));
},
jl_String_equals = ($this, $other) => {
    let $str;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    return $this.$nativeString !== $str.$nativeString ? 0 : 1;
},
jl_String_hashCode = $this => {
    let $i;
    a: {
        if (!$this.$hashCode0) {
            $i = 0;
            while (true) {
                if ($i >= $this.$nativeString.length)
                    break a;
                $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $this.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$hashCode0;
},
jl_String_split = ($this, $regex) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    $regex = jur_Pattern_compile($regex);
    var$2 = $this;
    var$3 = ju_ArrayList__init_();
    $regex = jur_Pattern_matcher($regex, var$2);
    var$4 = 0;
    var$5 = 0;
    var$2 = var$2;
    if (!var$2.$nativeString.length) {
        var$6 = $rt_createArray(jl_String, 1);
        var$6.data[0] = $rt_s(8);
    } else {
        while (jur_Matcher_find($regex)) {
            var$4 = var$4 + 1 | 0;
            ju_ArrayList_add(var$3, jl_String_substring(var$2, var$5, jur_Matcher_start($regex)));
            var$5 = jur_Matcher_end($regex);
        }
        ju_ArrayList_add(var$3, jl_String_substring(var$2, var$5, var$2.$nativeString.length));
        var$7 = var$4 + 1 | 0;
        while (true) {
            var$7 = var$7 + (-1) | 0;
            if (var$7 < 0)
                break;
            if ((ju_ArrayList_get(var$3, var$7)).$nativeString.length)
                break;
            ju_ArrayList_remove(var$3, var$7);
        }
        if (var$7 < 0)
            var$7 = 0;
        var$6 = $rt_createArray(jl_String, var$7);
        var$8 = var$6.data;
        $regex = var$3;
        var$5 = $regex.$size3;
        var$7 = var$8.length;
        if (var$7 < var$5)
            var$6 = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass(var$6)), var$5);
        else
            while (var$5 < var$7) {
                var$8[var$5] = null;
                var$5 = var$5 + 1 | 0;
            }
        var$7 = 0;
        var$3 = ju_AbstractList_iterator($regex);
        while (ju_AbstractList$1_hasNext(var$3)) {
            var$8 = var$6.data;
            var$4 = var$7 + 1 | 0;
            var$8[var$7] = ju_AbstractList$1_next(var$3);
            var$7 = var$4;
        }
        var$6 = var$6;
    }
    return var$6;
},
jl_String_compareTo0 = ($this, var$1) => {
    return jl_String_compareTo($this, var$1);
},
jl_String__clinit_ = () => {
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    jl_String_EMPTY = jl_String__init_2();
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_115_0;
},
jl_Number = $rt_classWithoutFields();
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
let jl_Integer_TYPE = null,
jl_Integer_integerCache = null,
jl_Integer__init_0 = ($this, $value) => {
    $this.$value = $value;
},
jl_Integer__init_ = var_0 => {
    let var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
},
jl_Integer_toHexString = $i => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    if (!$i)
        var$2 = $rt_s(10);
    else {
        var$3 = (((32 - jl_Integer_numberOfLeadingZeros($i) | 0) + 4 | 0) - 1 | 0) / 4 | 0;
        var$4 = $rt_createCharArray(var$3);
        var$5 = var$4.data;
        var$6 = (var$3 - 1 | 0) * 4 | 0;
        var$3 = 0;
        while (var$6 >= 0) {
            var$7 = var$3 + 1 | 0;
            var$5[var$3] = jl_Character_forDigit(($i >>> var$6 | 0) & 15, 16);
            var$6 = var$6 - 4 | 0;
            var$3 = var$7;
        }
        var$2 = jl_String__init_0(var$4);
    }
    return var$2;
},
jl_Integer_toString = $i => {
    return (jl_AbstractStringBuilder_append2(jl_AbstractStringBuilder__init_1(20), $i, 10)).$toString();
},
jl_Integer_parseInt = ($s, $radix) => {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$nativeString.length, $radix);
    $s = new jl_NumberFormatException;
    jl_RuntimeException__init_($s, $rt_s(30));
    $rt_throw($s);
},
jl_Integer_parseIntImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $value, $maxValue, var$9, $digit, var$11, var$12;
    if ($beginIndex == $endIndex) {
        $s = new jl_NumberFormatException;
        jl_RuntimeException__init_($s, $rt_s(31));
        $rt_throw($s);
    }
    if ($radix >= 2 && $radix <= 36) {
        a: {
            $negative = 0;
            $s = $s;
            switch (jl_String_charAt($s, $beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = 0;
        $maxValue = 1 + (2147483647 / $radix | 0) | 0;
        if (var$6 == $endIndex) {
            $s = new jl_NumberFormatException;
            jl_Exception__init_($s);
            $rt_throw($s);
        }
        while (var$6 < $endIndex) {
            var$9 = var$6 + 1 | 0;
            $digit = jl_String_charAt($s, var$6);
            $digit = $digit >= 48 && $digit <= 57 ? $digit - 48 | 0 : $digit >= 97 && $digit <= 122 ? ($digit - 97 | 0) + 10 | 0 : $digit >= 65 && $digit <= 90 ? ($digit - 65 | 0) + 10 | 0 : (-1);
            if ($digit < 0) {
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(32)), $s);
                jl_RuntimeException__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            if ($digit >= $radix) {
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$12, $rt_s(33)), $radix), $rt_s(25)), $s);
                jl_RuntimeException__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            if ($value > $maxValue) {
                $s = new jl_NumberFormatException;
                jl_RuntimeException__init_($s, $rt_s(34));
                $rt_throw($s);
            }
            $value = $rt_imul($radix, $value) + $digit | 0;
            if ($value < 0) {
                if (var$9 == $endIndex && $value == (-2147483648) && $negative)
                    return (-2147483648);
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(35)), $s);
                jl_RuntimeException__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            var$6 = var$9;
        }
        if ($negative)
            $value =  -$value | 0;
        return $value;
    }
    $s = new jl_NumberFormatException;
    var$11 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$11);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$11, $rt_s(36)), $radix);
    jl_RuntimeException__init_($s, jl_AbstractStringBuilder_toString(var$11));
    $rt_throw($s);
},
jl_Integer_parseInt0 = $s => {
    return jl_Integer_parseInt($s, 10);
},
jl_Integer_valueOf = $i => {
    let var$2, var$3;
    if ($i >= (-128) && $i <= 127) {
        a: {
            if (jl_Integer_integerCache === null) {
                jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
                var$2 = 0;
                while (true) {
                    var$3 = jl_Integer_integerCache.data;
                    if (var$2 >= var$3.length)
                        break a;
                    var$3[var$2] = jl_Integer__init_(var$2 - 128 | 0);
                    var$2 = var$2 + 1 | 0;
                }
            }
        }
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
},
jl_Integer_intValue = $this => {
    return $this.$value;
},
jl_Integer_toString0 = $this => {
    return jl_Integer_toString($this.$value);
},
jl_Integer_hashCode = $this => {
    return $this.$value;
},
jl_Integer_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
},
jl_Integer_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 >>> 8 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i >>> 4 | 0;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 >>> 2 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_numberOfTrailingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 << 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i << 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 << 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_compareTo = ($this, var$1) => {
    var$1 = var$1;
    return $rt_compare($this.$value, var$1.$value);
},
jl_Integer__clinit_ = () => {
    jl_Integer_TYPE = $rt_cls($rt_intcls);
};
function jl_AbstractStringBuilder() {
    let a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length2 = 0;
}
let jl_AbstractStringBuilder__init_ = $this => {
    jl_AbstractStringBuilder__init_0($this, 16);
},
jl_AbstractStringBuilder__init_2 = () => {
    let var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_0);
    return var_0;
},
jl_AbstractStringBuilder__init_0 = ($this, $capacity) => {
    $this.$buffer = $rt_createCharArray($capacity);
},
jl_AbstractStringBuilder__init_1 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder_append = ($this, $string) => {
    return $this.$insert($this.$length2, $string);
},
jl_AbstractStringBuilder_insert = ($this, $index, $string) => {
    let $i, $i_0, var$5, var$6;
    if ($index >= 0 && $index <= $this.$length2) {
        if ($string === null)
            $string = $rt_s(28);
        else if (jl_String_isEmpty($string))
            return $this;
        $this.$ensureCapacity($this.$length2 + $string.$nativeString.length | 0);
        $i = $this.$length2 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$nativeString.length | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length2 = $this.$length2 + $string.$nativeString.length | 0;
        $i_0 = 0;
        while ($i_0 < $string.$nativeString.length) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = jl_String_charAt($string, $i_0);
            $i_0 = $i_0 + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $string = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_($string);
    $rt_throw($string);
},
jl_AbstractStringBuilder_append2 = ($this, $value, $radix) => {
    return jl_AbstractStringBuilder_insert2($this, $this.$length2, $value, $radix);
},
jl_AbstractStringBuilder_insert2 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$5 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$5[$positive] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                $positive = $target;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_insert3 = ($this, $target, $value) => {
    let $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, $pos, $intDigit, $i;
    $mantissa = $rt_compare($value, 0.0);
    if (!$mantissa) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 48;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 46;
            var$4[$target] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 45;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 48;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 46;
        var$4[$mantissa] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 78;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 97;
        var$4[$target] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if ($mantissa > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $mantissa = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 73;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 110;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 102;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 110;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 116;
        var$4[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + ($digits + $leadingZeros | 0) | 0) | 0);
    if (!$negative)
        $negative = $target;
    else {
        var$4 = $this.$buffer.data;
        $negative = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 48;
        $negative = $target + 1 | 0;
        var$4[$target] = 46;
        while (true) {
            $target = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            $intDigit = $negative + 1 | 0;
            var$4[$negative] = 48;
            $leadingZeros = $target;
            $negative = $intDigit;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $negative = $target;
        else {
            $negative = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 69;
        if ($exp >= 0)
            $mantissa = $target;
        else {
            $exp =  -$exp | 0;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        if ($exp < 10)
            $intDigit = $mantissa;
        else {
            $intDigit = $mantissa + 1 | 0;
            var$4[$mantissa] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        var$4[$intDigit] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_trailingDecimalZeros = $n => {
    let $result, $zeros, var$4;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    $zeros = var$4 * 100 | 0;
    if ($n % $zeros | 0)
        $zeros = var$4;
    else
        $result = $result | 2;
    if (!($n % ($zeros * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
},
jl_AbstractStringBuilder_append0 = ($this, $c) => {
    return $this.$insert1($this.$length2, $c);
},
jl_AbstractStringBuilder_insert1 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
},
jl_AbstractStringBuilder_ensureCapacity = ($this, $capacity) => {
    let var$2, $newLength;
    var$2 = $this.$buffer.data.length;
    if (var$2 >= $capacity)
        return;
    $newLength = var$2 >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max(var$2 * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf1($this.$buffer, $newLength);
},
jl_AbstractStringBuilder_toString = $this => {
    return jl_String__init_($this.$buffer, 0, $this.$length2);
},
jl_AbstractStringBuilder_append3 = ($this, $chars, $offset, $len) => {
    return $this.$insert2($this.$length2, $chars, $offset, $len);
},
jl_AbstractStringBuilder_insert0 = ($this, $index, $chars, $offset, $len) => {
    let var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        $len = $index + 1 | 0;
        var$8 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = $len;
        $offset = var$8;
    }
    return $this;
},
jl_AbstractStringBuilder_append1 = ($this, $chars) => {
    return $this.$append7($chars, 0, $chars.data.length);
},
jl_AbstractStringBuilder_insertSpace = ($this, $start, $end) => {
    let var$3, $sz, $i, var$6;
    var$3 = $this.$length2;
    $sz = var$3 - $start | 0;
    $this.$ensureCapacity((var$3 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        var$6 = $this.$buffer.data;
        var$6[$end + $i | 0] = var$6[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length2 = $this.$length2 + ($end - $start | 0) | 0;
},
jl_Appendable = $rt_classWithoutFields(0),
jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuilder__init_0 = $this => {
    jl_AbstractStringBuilder__init_($this);
},
jl_StringBuilder__init_ = () => {
    let var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_0(var_0);
    return var_0;
},
jl_StringBuilder_append = ($this, $obj) => {
    let var$2, var$3;
    var$2 = $this.$length2;
    var$3 = $this;
    $obj = $obj === null ? $rt_s(28) : $obj.$toString();
    jl_AbstractStringBuilder_insert(var$3, var$2, $obj);
    return $this;
},
jl_StringBuilder_append1 = ($this, $string) => {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
},
jl_StringBuilder_append0 = ($this, $value) => {
    jl_AbstractStringBuilder_append2($this, $value, 10);
    return $this;
},
jl_StringBuilder_append2 = ($this, $value) => {
    let var$2;
    var$2 = $this.$length2;
    jl_AbstractStringBuilder_insert3($this, var$2, $value);
    return $this;
},
jl_StringBuilder_append3 = ($this, $c) => {
    jl_AbstractStringBuilder_append0($this, $c);
    return $this;
},
jl_StringBuilder_append4 = ($this, $b) => {
    let var$2, var$3, var$4;
    var$2 = $this.$length2;
    var$3 = $this;
    var$4 = !$b ? $rt_s(37) : $rt_s(38);
    jl_AbstractStringBuilder_insert(var$3, var$2, var$4);
    return $this;
},
jl_StringBuilder_delete = ($this, $start, $end) => {
    let var$3, var$4, var$5, var$6, var$7, var$8;
    if ($start >= 0) {
        var$3 = $rt_compare($start, $end);
        if (var$3 <= 0) {
            var$4 = $this.$length2;
            if ($start <= var$4) {
                if (var$3) {
                    if ($end > var$4)
                        $end = var$4;
                    var$5 = var$4 - $end | 0;
                    $this.$length2 = var$4 - ($end - $start | 0) | 0;
                    var$4 = 0;
                    while (var$4 < var$5) {
                        var$6 = $this.$buffer.data;
                        var$3 = $start + 1 | 0;
                        var$7 = $end + 1 | 0;
                        var$6[$start] = var$6[$end];
                        var$4 = var$4 + 1 | 0;
                        $start = var$3;
                        $end = var$7;
                    }
                }
                return $this;
            }
        }
    }
    var$8 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_(var$8);
    $rt_throw(var$8);
},
jl_StringBuilder_deleteCharAt = ($this, $index) => {
    let var$2, var$3, var$4, var$5;
    if ($index >= 0) {
        var$2 = $this.$length2;
        if ($index < var$2) {
            var$2 = var$2 - 1 | 0;
            $this.$length2 = var$2;
            while ($index < var$2) {
                var$3 = $this.$buffer.data;
                var$4 = $index + 1 | 0;
                var$3[$index] = var$3[var$4];
                $index = var$4;
            }
            return $this;
        }
    }
    var$5 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_(var$5);
    $rt_throw(var$5);
},
jl_StringBuilder_subSequence = ($this, var$1, var$2) => {
    let var$3;
    var$3 = $this;
    if (var$1 <= var$2 && var$1 >= 0 && var$2 <= var$3.$length2)
        return jl_String__init_(var$3.$buffer, var$1, var$2 - var$1 | 0);
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$3);
    $rt_throw(var$3);
},
jl_StringBuilder_insert = ($this, var$1, var$2, var$3, var$4) => {
    jl_AbstractStringBuilder_insert0($this, var$1, var$2, var$3, var$4);
    return $this;
},
jl_StringBuilder_append5 = ($this, var$1, var$2, var$3) => {
    jl_AbstractStringBuilder_append3($this, var$1, var$2, var$3);
    return $this;
},
jl_StringBuilder_length = $this => {
    return $this.$length2;
},
jl_StringBuilder_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuilder_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuilder_insert0 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert1($this, var$1, var$2);
    return $this;
},
jl_StringBuilder_insert1 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
},
otcir_FieldInfo = $rt_classWithoutFields(),
otcir_MethodInfo = $rt_classWithoutFields(),
otcir_ClassList = $rt_classWithoutFields(),
dcgt_TeaVMLauncher = $rt_classWithoutFields(),
dcgt_TeaVMLauncher_$callClinit = () => {
    dcgt_TeaVMLauncher_$callClinit = $rt_eraseClinit(dcgt_TeaVMLauncher);
    dcgt_TeaVMLauncher__clinit_();
},
dcgt_TeaVMLauncher_main = $args => {
    let $config, var$3, var$4;
    dcgt_TeaVMLauncher_$callClinit();
    $config = new cgxgbt_TeaApplicationConfiguration;
    $config.$useGL30 = 0;
    $config.$preloadAssets = 1;
    $config.$storagePrefix = $rt_s(39);
    $config.$localStoragePrefix = $rt_s(40);
    $config.$shouldEncodePreference = 0;
    $config.$showDownloadLogs = 0;
    $config.$width3 = (-1);
    $config.$height4 = (-1);
    $config.$padHorizontal = 0;
    $config.$padVertical = 0;
    $config.$stencil = 0;
    $config.$antialiasing = 0;
    $config.$alpha = 0;
    $config.$premultipliedAlpha = 0;
    $config.$preserveDrawingBuffer = 0;
    $config.$useDebugGL = 0;
    $config.$usePhysicalPixels = 0;
    $config.$powerPreference = $rt_s(41);
    $config.$baseUrlProvider = new cgxgbtu_TeaDefaultBaseUrlProvider;
    $config.$canvasID = $rt_s(42);
    $config.$width3 = (-1);
    $config.$height4 = (-1);
    var$3 = new cgxgbt_TeaApplication;
    var$4 = new dcg_Main;
    var$4.$game = new dcgb_GameMain;
    var$3.$lifecycleListeners = cbgu_Array__init_0(4);
    var$3.$initState = cgxgbt_TeaApplication$AppState_INIT;
    var$3.$lastWidth = (-1);
    var$3.$lastHeight = 1;
    var$3.$logLevel = 2;
    var$3.$prefs = cbgu_ObjectMap__init_();
    var$3.$runnables = cbgu_Array__init_();
    var$3.$runnablesHelper = cbgu_Array__init_();
    var$3.$window = cgxgbtdi_TeaWindow_get();
    var$3.$config = $config;
    var$3.$queueAppListener = var$4;
    cgxgbt_TeaApplication_init(var$3);
},
dcgt_TeaVMLauncher__clinit_ = () => {
    cbgu_ObjectMap__clinit_();
    jl_String__clinit_();
    jl_Float__clinit_();
    jl_AbstractStringBuilder$Constants__clinit_();
    jl_Integer__clinit_();
    otcit_FloatAnalyzer__clinit_();
    jl_Long__clinit_();
    cbgm_MathUtils__clinit_();
    jl_Character__clinit_();
    jlr_Modifier__clinit_();
    cbgg_Color__clinit_();
    cbggg_NinePatch__clinit_();
    cbgg_GLTexture__clinit_();
    cgxgbt_TeaApplication__clinit_();
    cgxgbt_TeaApplication$AppState__clinit_();
    cbg_Application$ApplicationType__clinit_();
    ju_Hashtable__clinit_();
    cbggg_GLVersion$Type__clinit_();
    jur_AbstractSet__clinit_();
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
    jur_AbstractCharClass__clinit_();
    jl_Thread__clinit_();
    cgxgbta_AssetType__clinit_();
    dcgb_ObjectManager__clinit_();
    dcgb_GameObject__clinit_();
    cbgm_Quaternion__clinit_();
    cbgu_BufferUtils__clinit_();
    cgxgbt_TeaTool__clinit_();
    cbgu_StringBuilder__clinit_();
    jn_ByteOrder__clinit_();
    cbgg_Mesh$VertexDataType__clinit_();
    cbg_Files$FileType__clinit_();
    cbgg_Pixmap$Blending__clinit_();
    cbgg_Pixmap$Filter__clinit_();
    cbgu_StreamUtils__clinit_();
    dcgccsf_TileType__clinit_();
    dcgccso_ShapeSelectBar__clinit_();
    dcgccso_Controller__clinit_();
    dcgbmf_RenderPosition__clinit_();
    dcgbmf_RenderFormat__clinit_();
    dcgccso_Score__clinit_();
    dcgb_Constant__clinit_();
    cbgg_Pixmap$Format__clinit_();
    cbgg_Texture$TextureFilter__clinit_();
    cbgg_Texture$TextureWrap__clinit_();
    cbgg_TextureData$TextureDataType__clinit_();
    cbggg_MipMapGenerator__clinit_();
    cbgm_Vector2__clinit_();
    dcgccsf_ShapeType__clinit_();
    cbgggf_FreeTypeFontGenerator__clinit_();
    cbgggf_FreeTypeFontGenerator$Hinting__clinit_();
    cbgggf_FreeType__clinit_();
    jnc_CodingErrorAction__clinit_();
    ju_Comparator$NaturalOrder__clinit_();
    jnc_CoderResult__clinit_();
    cbgm_Rectangle__clinit_();
    cbggg_BitmapFontCache__clinit_();
    cbgm_MathUtils$Sin__clinit_();
    dcgccso_Effect__clinit_();
    jl_Byte__clinit_();
    cbgm_Vector4__clinit_();
    cbggg_Attribute__clinit_();
    jl_Boolean__clinit_();
},
otci_IntegerUtil = $rt_classWithoutFields();
function cgxgbt_TeaApplicationConfiguration() {
    let a = this; jl_Object.call(a);
    a.$useGL30 = 0;
    a.$windowListener = null;
    a.$preloadAssets = 0;
    a.$storagePrefix = null;
    a.$localStoragePrefix = null;
    a.$shouldEncodePreference = 0;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width3 = 0;
    a.$height4 = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
    a.$powerPreference = null;
    a.$preloadListener = null;
    a.$baseUrlProvider = null;
}
let cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication = $this => {
    return !$this.$width3 && !$this.$height4 ? 1 : 0;
},
cbg_Application = $rt_classWithoutFields(0),
jl_Runnable = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication() {
    let a = this; jl_Object.call(a);
    a.$delayInitCount = 0;
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$audio = null;
    a.$config = null;
    a.$queueAppListener = null;
    a.$appListener = null;
    a.$lifecycleListeners = null;
    a.$window = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$assetLoader = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
}
let cgxgbt_TeaApplication_WEB_SCRIPT_PATH = null,
cgxgbt_TeaApplication_WEB_ASSET_PATH = null,
cgxgbt_TeaApplication_agentInfo = null,
cgxgbt_TeaApplication_init = $this => {
    let $assetDownload, $hostPageBaseURL, var$3, var$4, $map, $instance, var$7, var$8;
    cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    jl_System_setProperty($rt_s(43), $rt_s(8));
    jl_System_setProperty($rt_s(44), $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent));
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0)
        jl_System_setProperty($rt_s(45), $rt_s(46));
    else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
        jl_System_setProperty($rt_s(45), $rt_s(47));
    else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
        jl_System_setProperty($rt_s(45), $rt_s(48));
    else
        jl_System_setProperty($rt_s(45), $rt_s(49));
    $this.$graphics = cgxgbt_TeaGraphics__init_0($this.$config);
    $assetDownload = new cgxgbta_AssetDownloadImpl;
    $assetDownload.$showLogs = $this.$config.$showDownloadLogs;
    cgxgbta_AssetInstance_downloaderInstance = $assetDownload;
    $hostPageBaseURL = $rt_str((cgxgbtdi_TeaWindow_get()).$window0.location.href);
    var$3 = $hostPageBaseURL.$nativeString.length - $rt_s(50).$nativeString.length | 0;
    var$4 = 0;
    $map = $rt_s(50);
    $instance = $rt_s(50);
    a: {
        while (var$4 <= var$3) {
            var$7 = 0;
            while (true) {
                if (var$7 >= $map.$nativeString.length) {
                    var$3 = 1;
                    break a;
                }
                if (jl_String_charAt($hostPageBaseURL, var$4 + var$7 | 0) != jl_String_charAt($instance, var$7))
                    break;
                var$7 = var$7 + 1 | 0;
            }
            var$4 = var$4 + 1 | 0;
        }
        var$3 = 0;
    }
    if (var$3)
        $hostPageBaseURL = jl_String_replace(jl_String_replace(jl_String_replace($hostPageBaseURL, $rt_s(51), $rt_s(8)), $rt_s(52), $rt_s(8)), $rt_s(53), $rt_s(8));
    var$4 = jl_String_indexOf($hostPageBaseURL, 63, 0);
    if (var$4 >= 0)
        $hostPageBaseURL = jl_String_substring($hostPageBaseURL, 0, var$4);
    $instance = new cgxgbta_AssetLoadImpl;
    $map = $this.$graphics.$canvas0;
    $instance.$assetTotal = (-1);
    $instance.$assetDownloader = $assetDownload;
    $instance.$baseUrl = $hostPageBaseURL;
    $assetDownload = new ju_HashSet;
    $assetDownload.$backingMap = ju_HashMap__init_();
    $instance.$assetInQueue = $assetDownload;
    var$8 = $this.$config;
    if (var$8.$windowListener !== null) {
        $hostPageBaseURL = $map.ownerDocument;
        $map = new cgxgbta_AssetLoadImpl$1;
        $map.$this$050 = $instance;
        $hostPageBaseURL.addEventListener("dragenter", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"), !!0);
        $map = new cgxgbta_AssetLoadImpl$2;
        $map.$this$039 = $instance;
        $hostPageBaseURL.addEventListener("dragover", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"), !!0);
        $map = new cgxgbta_AssetLoadImpl$3;
        $map.$this$010 = $instance;
        $map.$val$config0 = var$8;
        $hostPageBaseURL.addEventListener("drop", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"));
    }
    $this.$assetLoader = $instance;
    cgxgbta_AssetInstance_instance = $instance;
    if (cgxjc_JMultiplatform_platformMap === null)
        cgxjc_JMultiplatform_platformMap = cgxjc_JMultiplatform__init_();
    $map = cgxjc_JMultiplatform_platformMap.$map1;
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_SCRIPT_PATH, cgxgbta_AssetLoadImpl_getScriptUrl($this.$assetLoader));
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_ASSET_PATH, cgxgbta_AssetLoadImpl_getAssetUrl($this.$assetLoader));
    $this.$input = cgxgbt_TeaInput__init_($this, $this.$graphics.$canvas0);
    $this.$files = cgxgbt_TeaFiles__init_0($this.$config, $this);
    $this.$net = cgxgbt_TeaNet__init_();
    $this.$logger = new cgxgbt_TeaApplicationLogger;
    $this.$clipboard = cgxgbt_TeaClipboard__init_0();
    cgxgbt_TeaApplication_initGdx($this);
    cgxgbt_TeaApplication_initSound($this);
    $assetDownload = $this.$config.$preloadListener;
    if ($assetDownload !== null)
        $assetDownload.$onPreload($this.$assetLoader);
    cbg_Gdx_app = $this;
    $assetDownload = $this.$graphics;
    cbg_Gdx_graphics = $assetDownload;
    cbg_Gdx_gl = cgxgbt_TeaGraphics_getGL20($assetDownload);
    cbg_Gdx_gl20 = cgxgbt_TeaGraphics_getGL20($this.$graphics);
    cbg_Gdx_gl30 = cgxgbt_TeaGraphics_getGL30($this.$graphics);
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    cbg_Gdx_net = $this.$net;
    $assetDownload = cgxgbt_DefaultTeaAudio__init_0();
    $this.$audio = $assetDownload;
    cbg_Gdx_audio = $assetDownload;
    cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(54), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$1__init_0($this)));
    $assetDownload = cgxgbtdi_TeaWindow_getDocument($this.$window);
    $map = cgxgbt_TeaApplication$2__init_0($this);
    $assetDownload.addEventListener("visibilitychange", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"));
    if (cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this.$config))
        cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(55), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$3__init_0($this)));
    cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
},
cgxgbt_TeaApplication_run = $this => {
    let $state, $queue, $element, $total, $percentage, $progressBar, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                c: {
                    d: {
                        cgxgbt_TeaApplication$6_$callClinit();
                        switch (cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                            case 1:
                                if ($this.$delayInitCount)
                                    break b;
                                $this.$initState = cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS;
                                break b;
                            case 2:
                                break;
                            case 3:
                                break c;
                            case 4:
                                break d;
                            default:
                                break b;
                        }
                        cgxgbta_AssetLoadImpl_preload($this.$assetLoader, $this.$config, $rt_s(56));
                        $this.$initState = cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS;
                        break b;
                    }
                    if ($this.$queueAppListener !== null) {
                        $state = $this.$appListener;
                        if ($state !== null) {
                            dcg_Main_pause($state);
                            dcg_Main_dispose($this.$appListener);
                        }
                        cgxgbt_TeaInput_setInputProcessor($this.$input, null);
                        cgxgbt_TeaInput_reset($this.$input);
                        cbgu_Array_clear($this.$runnables);
                        $this.$appListener = $this.$queueAppListener;
                        $this.$queueAppListener = null;
                        $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                        $this.$graphics.$frameId = Long_ZERO;
                    }
                    $state = $this.$appListener;
                    if ($state === null)
                        break b;
                    cgxgbt_TeaApplication_step($this, $state);
                    break b;
                }
                $queue = cgxgbta_AssetLoadImpl_getQueue($this.$assetLoader);
                if (!$queue) {
                    $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                    $element = window.document.getElementById("progress");
                    if ($element !== null)
                        $element.style.setProperty("display", "none");
                } else {
                    $total = $this.$assetLoader.$assetTotal;
                    if ($total > 0) {
                        $percentage = 25 + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                        $progressBar = window.document.getElementById("progress-bar");
                        if ($progressBar !== null) {
                            $t = $progressBar.style;
                            $element = jl_StringBuilder__init_();
                            jl_StringBuilder_append3(jl_StringBuilder_append0($element, $percentage), 37);
                            $t.setProperty("width", $rt_ustr(jl_StringBuilder_toString($element)));
                        }
                    }
                }
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
        return;
    }
    jl_Throwable_printStackTrace0($t);
    $rt_throw($t);
},
cgxgbt_TeaApplication_step = ($this, $appListener) => {
    let var$2, var$3, var$4, $resizeBypass, $width, $height, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $i, $$je;
    var$2 = $this.$graphics;
    var$3 = jl_System_currentTimeMillis();
    var$4 = Long_toNumber(Long_sub(var$3, var$2.$lastTimeStamp)) / 1000.0;
    var$2.$deltaTime = var$4;
    var$2.$lastTimeStamp = var$3;
    var$4 = var$2.$time + var$4;
    var$2.$time = var$4;
    $resizeBypass = var$2.$frames + 1 | 0;
    var$2.$frames = $resizeBypass;
    if (var$4 > 1.0) {
        var$2.$fps = $resizeBypass;
        var$2.$time = 0.0;
        var$2.$frames = 0;
    }
    $width = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
    $height = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
    $resizeBypass = 0;
    if ($this.$initState === cgxgbt_TeaApplication$AppState_APP_CREATE) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        var$2 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
        while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$2)) {
            juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$2);
        }
        var$8 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
        while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$8)) {
            var$2 = juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$8);
            if (!var$2.$isInitialized) {
                var$2.$init();
                var$2.$isInitialized = 1;
            }
        }
        var$9 = new dcgc_RootObject;
        dcgb_GameObject__init_(var$9, $rt_s(57));
        var$10 = new dcgbm_Camera2D;
        dcgbm_Camera2D_$callClinit();
        dcgb_GameObject__init_(var$10, $rt_s(58));
        var$8 = dcgbm_Camera2D_camera;
        var$4 = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
        var$11 = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
        cbgm_Vector3_set(var$8.$up, 0.0, 1.0, 0.0);
        cbgm_Vector3_set(var$8.$direction, 0.0, 0.0, (-1.0));
        var$2 = var$8.$position1;
        var$12 = var$8.$zoom;
        cbgm_Vector3_set(var$2, var$12 * var$4 / 2.0, var$12 * var$11 / 2.0, 0.0);
        var$8.$viewportWidth = var$4;
        var$8.$viewportHeight = var$11;
        cbgg_OrthographicCamera_update(var$8);
        dcgb_ObjectManager_add(var$10);
        var$13 = dcgccs_StandardScene__init_0($rt_s(59));
        var$2 = var$13.$objectNames;
        var$8 = var$13.$name;
        dcgb_SceneManager_$callClinit();
        ju_HashMap_put(dcgb_SceneManager_scenesObjectsMap, var$8, var$2);
        dcgb_ObjectManager_add(var$13);
        if (!ju_HashMap_containsKey(dcgb_SceneManager_scenesObjectsMap, $rt_s(59))) {
            $appListener = new dcgb_TransferSceneException;
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(60)), $rt_s(59)), $rt_s(61));
            jl_RuntimeException__init_($appListener, jl_AbstractStringBuilder_toString(var$2));
            $rt_throw($appListener);
        }
        a: {
            try {
                var$2 = dcgb_ObjectManager_get($rt_s(59));
                var$14 = dcgb_ObjectManager_get(dcgb_SceneManager_currentSceneName);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_ClassCastException) {
                } else {
                    throw $$e;
                }
            }
            var$2 = new dcgb_TransferSceneException;
            jl_RuntimeException__init_(var$2, $rt_s(8));
            $rt_throw(var$2);
        }
        if (var$2 !== null) {
            var$2 = var$2;
            var$8 = var$2.$prepareToLoad;
            var$10 = new dcgbmc_SceneComponent$loadObjects$lambda$_4_0;
            var$10.$_025 = var$2;
            ju_ArrayList_forEach(var$8, var$10);
        }
        if (var$14 !== null) {
            var$2 = var$14;
            var$8 = var$2.$objectNames;
            if (var$8 !== null) {
                var$10 = ju_AbstractList_iterator(var$8);
                while (ju_AbstractList$1_hasNext(var$10)) {
                    dcgb_ObjectManager_remove(dcgb_ObjectManager_get(ju_AbstractList$1_next(var$10)));
                }
                ju_ArrayList_clear(var$2.$objectNames);
            }
            var$8 = var$2.$prepareToLoad;
            if (var$8 !== null) {
                var$10 = ju_AbstractList_iterator(var$8);
                while (ju_AbstractList$1_hasNext(var$10)) {
                    (ju_AbstractList$1_next(var$10)).$dispose();
                }
                ju_ArrayList_clear(var$2.$prepareToLoad);
            }
        }
        dcgb_SceneManager_currentSceneName = $rt_s(59);
        var$2 = var$9;
        var$2.$functionalObject = 1;
        dcgb_ObjectManager_add(var$2);
        dcg_Main_resume($appListener);
        $resizeBypass = 1;
    }
    if (!($width == $this.$lastWidth && $height == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = $width;
        $this.$lastHeight = $height;
        cbg_Gdx_gl.$glViewport(0, 0, $width, $height);
        dcgb_ObjectManager_resize($width, $width);
    }
    cbgu_Array_addAll($this.$runnablesHelper, $this.$runnables);
    cbgu_Array_clear($this.$runnables);
    $i = 0;
    while (true) {
        $appListener = $this.$runnablesHelper;
        if ($i >= $appListener.$size0)
            break;
        cgxgbt_TeaApplication_run(cbgu_Array_get($appListener, $i));
        $i = $i + 1 | 0;
    }
    cbgu_Array_clear($appListener);
    $appListener = $this.$graphics;
    var$3 = Long_add($appListener.$frameId, Long_fromInt(1));
    $appListener.$frameId = var$3;
    if (Long_gt(var$3, Long_fromInt(60))) {
        dcgb_ObjectManager_update();
        dcgb_ObjectManager_render();
        dcgb_ObjectManager_test();
    }
    cgxgbt_TeaInput_reset($this.$input);
},
cgxgbt_TeaApplication_log = ($this, $tag, $message) => {
    let var$3, var$4;
    if ($this.$logLevel >= 2) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(25)), $message);
        $tag = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, $tag);
    }
},
cgxgbt_TeaApplication_initGdx = $this => {
    let var$1, var$2;
    var$1 = $this.$assetLoader;
    var$2 = new cgxgbt_TeaApplication$4;
    var$2.$this$046 = $this;
    cgxgbta_AssetLoadImpl_loadScript(var$1, $rt_s(62), var$2);
},
cgxgbt_TeaApplication_initSound = $this => {
    let var$1, var$2;
    var$1 = $this.$assetLoader;
    var$2 = new cgxgbt_TeaApplication$5;
    var$2.$this$029 = $this;
    cgxgbta_AssetLoadImpl_loadScript(var$1, $rt_s(63), var$2);
},
cgxgbt_TeaApplication__clinit_ = () => {
    cgxgbt_TeaApplication_WEB_SCRIPT_PATH = $rt_s(64);
    cgxgbt_TeaApplication_WEB_ASSET_PATH = $rt_s(65);
},
cbg_ApplicationListener = $rt_classWithoutFields(0),
cbg_ApplicationAdapter = $rt_classWithoutFields();
function dcg_Main() {
    cbg_ApplicationAdapter.call(this);
    this.$game = null;
}
let dcg_Main_dispose = $this => {
    let var$1, var$2;
    var$1 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$1)) {
        (juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$1)).$dispose();
    }
    var$2 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$2)) {
        juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$2);
    }
},
dcg_Main_pause = $this => {
    let var$1;
    var$1 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$1)) {
        juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$1);
    }
},
dcg_Main_resume = $this => {
    let var$1;
    var$1 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$1)) {
        juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$1);
    }
};
function cbggg_GlyphLayout$GlyphRun() {
    let a = this; jl_Object.call(a);
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x3 = 0.0;
    a.$y5 = 0.0;
    a.$width5 = 0.0;
}
let cbggg_GlyphLayout$GlyphRun__init_ = $this => {
    let var$1;
    $this.$glyphs = cbgu_Array__init_();
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items0 = $rt_createFloatArray(16);
    $this.$xAdvances = var$1;
},
cbggg_GlyphLayout$GlyphRun__init_0 = () => {
    let var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
},
cbggg_GlyphLayout$GlyphRun_appendRun = ($this, $run) => {
    let var$2, var$3;
    cbgu_Array_addAll($this.$glyphs, $run.$glyphs);
    var$2 = $this.$xAdvances;
    var$3 = var$2.$size2;
    if (var$3 <= 0 ? 0 : 1)
        var$2.$size2 = var$3 - 1 | 0;
    cbgu_FloatArray_addAll0(var$2, $run.$xAdvances);
},
cbggg_GlyphLayout$GlyphRun_reset = $this => {
    cbgu_Array_clear($this.$glyphs);
    cbgu_FloatArray_clear($this.$xAdvances);
},
cbggg_GlyphLayout$GlyphRun_toString = $this => {
    let $buffer, $glyphs, $i, $n;
    $buffer = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($buffer, $this.$glyphs.$size0 + 32 | 0);
    $glyphs = $this.$glyphs;
    $i = 0;
    $n = $glyphs.$size0;
    while ($i < $n) {
        jl_AbstractStringBuilder_append0($buffer, (cbgu_Array_get($glyphs, $i)).$id & 65535);
        $i = $i + 1 | 0;
    }
    jl_AbstractStringBuilder_append($buffer, $rt_s(20));
    jl_StringBuilder_append2($buffer, $this.$x3);
    jl_AbstractStringBuilder_append($buffer, $rt_s(20));
    jl_StringBuilder_append2($buffer, $this.$y5);
    jl_AbstractStringBuilder_append($buffer, $rt_s(20));
    jl_StringBuilder_append2($buffer, $this.$width5);
    return jl_AbstractStringBuilder_toString($buffer);
},
cbgu_Pools = $rt_classWithoutFields(),
cbgu_Pools_typePools = null,
cbgu_Pools_$callClinit = () => {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
},
cbgu_Pools_get = $type => {
    let var$2, var$3, $$je;
    cbgu_Pools_$callClinit();
    var$2 = cbgu_ObjectMap_get(cbgu_Pools_typePools, $type);
    if (var$2 === null) {
        var$2 = new cbgu_ReflectionPool;
        cbgu_Pool__init_(var$2, 4, 100);
        a: {
            try {
                var$3 = cbgur_ClassReflection_getConstructor($type, null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$3 = cbgur_ClassReflection_getDeclaredConstructor($type, null);
                cbgur_Constructor_setAccessible(var$3, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$3 = null;
        }
        var$2.$constructor = var$3;
        if (var$3 === null) {
            var$2 = new jl_RuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_AbstractStringBuilder_append(var$3, $rt_s(66));
            jl_AbstractStringBuilder_append(var$3, jl_Class_getName($type));
            jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $type, var$2);
    }
    return var$2;
},
cbgu_Pools__clinit_ = () => {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_();
};
function cbgu_IntArray() {
    let a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size1 = 0;
    a.$ordered0 = 0;
}
let cbgu_IntArray__init_2 = $this => {
    cbgu_IntArray__init_0($this, 1, 16);
},
cbgu_IntArray__init_1 = () => {
    let var_0 = new cbgu_IntArray();
    cbgu_IntArray__init_2(var_0);
    return var_0;
},
cbgu_IntArray__init_3 = ($this, $capacity) => {
    cbgu_IntArray__init_0($this, 1, $capacity);
},
cbgu_IntArray__init_ = var_0 => {
    let var_1 = new cbgu_IntArray();
    cbgu_IntArray__init_3(var_1, var_0);
    return var_1;
},
cbgu_IntArray__init_0 = ($this, $ordered, $capacity) => {
    $this.$ordered0 = $ordered;
    $this.$items1 = $rt_createIntArray($capacity);
},
cbgu_IntArray__init_4 = (var_0, var_1) => {
    let var_2 = new cbgu_IntArray();
    cbgu_IntArray__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items1;
    var$3 = $items.data;
    var$4 = $this.$size1;
    if (var$4 == var$3.length)
        $items = cbgu_IntArray_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size1;
    $this.$size1 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_IntArray_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size1)
        return $this.$items1.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(16));
    var$3 = jl_StringBuilder_append0(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$3, $this.$size1)));
    $rt_throw(var$2);
},
cbgu_IntArray_set = ($this, $index, $value) => {
    let var$3, var$4;
    if ($index < $this.$size1) {
        $this.$items1.data[$index] = $value;
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append(var$4, $rt_s(16));
    var$4 = jl_StringBuilder_append0(var$4, $index);
    jl_AbstractStringBuilder_append(var$4, $rt_s(5));
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$4, $this.$size1)));
    $rt_throw(var$3);
},
cbgu_IntArray_peek = $this => {
    return $this.$items1.data[$this.$size1 - 1 | 0];
},
cbgu_IntArray_clear = $this => {
    $this.$size1 = 0;
},
cbgu_IntArray_resize = ($this, $newSize) => {
    let $newItems, var$3;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    jl_System_fastArraycopy($this.$items1, 0, $newItems, 0, jl_Math_min($this.$size1, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
},
cbgu_IntArray_hashCode = $this => {
    let $items, $h, $i, $n, var$5;
    if (!$this.$ordered0)
        return jl_Object_identity($this);
    $items = $this.$items1;
    $h = 1;
    $i = 0;
    $n = $this.$size1;
    while ($i < $n) {
        var$5 = $items.data;
        $h = ($h * 31 | 0) + var$5[$i] | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_IntArray_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size1;
    if ($n != $array.$size1)
        return 0;
    $items1 = $this.$items1;
    $items2 = $array.$items1;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgu_IntArray_toString = $this => {
    let $items, $buffer, $i;
    if (!$this.$size1)
        return $rt_s(19);
    $items = $this.$items1.data;
    $buffer = cbgu_StringBuilder__init_(32);
    cbgu_StringBuilder_append0($buffer, 91);
    cbgu_StringBuilder_append1($buffer, $items[0]);
    $i = 1;
    while ($i < $this.$size1) {
        cbgu_StringBuilder_append00($buffer, $rt_s(20));
        cbgu_StringBuilder_append1($buffer, $items[$i]);
        $i = $i + 1 | 0;
    }
    cbgu_StringBuilder_append0($buffer, 93);
    return cbgu_StringBuilder_toString($buffer);
},
ju_Map = $rt_classWithoutFields(0),
ju_AbstractMap = $rt_classWithoutFields(),
jl_Cloneable = $rt_classWithoutFields(0);
function ju_HashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount0 = 0;
    a.$loadFactor5 = 0.0;
    a.$threshold3 = 0;
}
let ju_HashMap__init_2 = $this => {
    ju_HashMap__init_0($this, 16);
},
ju_HashMap__init_ = () => {
    let var_0 = new ju_HashMap();
    ju_HashMap__init_2(var_0);
    return var_0;
},
ju_HashMap__init_0 = ($this, $capacity) => {
    let var$2;
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    $capacity = ju_HashMap_calculateCapacity($capacity);
    $this.$elementCount = 0;
    $this.$elementData = $rt_createArray(ju_HashMap$HashEntry, $capacity);
    $this.$loadFactor5 = 0.75;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap__init_1 = var_0 => {
    let var_1 = new ju_HashMap();
    ju_HashMap__init_0(var_1, var_0);
    return var_1;
},
ju_HashMap_calculateCapacity = $x => {
    let var$2;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    $x = var$2 | var$2 >> 1;
    $x = $x | $x >> 2;
    $x = $x | $x >> 4;
    $x = $x | $x >> 8;
    return ($x | $x >> 16) + 1 | 0;
},
ju_HashMap_computeThreshold = $this => {
    $this.$threshold3 = $this.$elementData.data.length * $this.$loadFactor5 | 0;
},
ju_HashMap_containsKey = ($this, $key) => {
    return ju_HashMap_entryByKey($this, $key) === null ? 0 : 1;
},
ju_HashMap_get = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    if ($m === null)
        return null;
    return $m.$value0;
},
ju_HashMap_entryByKey = ($this, $key) => {
    let $m, $hash;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode();
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $hash & ($this.$elementData.data.length - 1 | 0), $hash);
    }
    return $m;
},
ju_HashMap_findNonNullKeyEntry = ($this, $key, $index, $keyHash) => {
    let $m;
    $m = $this.$elementData.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key))) {
        $m = $m.$next3;
    }
    return $m;
},
ju_HashMap_findNullKeyEntry = $this => {
    let $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next3;
    }
    return $m;
},
ju_HashMap_put = ($this, $key, $value) => {
    let var$3, var$4, var$5;
    if ($key === null) {
        var$3 = ju_HashMap_findNullKeyEntry($this);
        if (var$3 === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$3 = ju_HashMap_createHashedEntry($this, null, 0, 0);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold3)
                ju_HashMap_rehash($this);
        }
    } else {
        var$4 = $key.$hashCode();
        var$5 = var$4 & ($this.$elementData.data.length - 1 | 0);
        var$3 = ju_HashMap_findNonNullKeyEntry($this, $key, var$5, var$4);
        if (var$3 === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$3 = ju_HashMap_createHashedEntry($this, $key, var$5, var$4);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold3)
                ju_HashMap_rehash($this);
        }
    }
    $key = var$3.$value0;
    var$3.$value0 = $value;
    return $key;
},
ju_HashMap_createHashedEntry = ($this, $key, $index, $hash) => {
    let $entry, var$5;
    $entry = new ju_HashMap$HashEntry;
    ju_MapEntry__init_($entry, $key, null);
    $entry.$origKeyHash = $hash;
    var$5 = $this.$elementData.data;
    $entry.$next3 = var$5[$index];
    var$5[$index] = $entry;
    return $entry;
},
ju_HashMap_rehash = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$elementData.data.length;
    var$1 = ju_HashMap_calculateCapacity(!var$1 ? 1 : var$1 << 1);
    var$2 = $rt_createArray(ju_HashMap$HashEntry, var$1);
    var$3 = var$2.data;
    var$4 = 0;
    var$5 = var$1 - 1 | 0;
    while (true) {
        var$6 = $this.$elementData.data;
        if (var$4 >= var$6.length)
            break;
        var$7 = var$6[var$4];
        var$6[var$4] = null;
        while (var$7 !== null) {
            var$1 = var$7.$origKeyHash & var$5;
            var$8 = var$7.$next3;
            var$7.$next3 = var$3[var$1];
            var$3[var$1] = var$7;
            var$7 = var$8;
        }
        var$4 = var$4 + 1 | 0;
    }
    $this.$elementData = var$2;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
},
cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power1 = 0;
}
let cbgm_Interpolation$Pow__init_ = ($this, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$power1 = $power;
},
cbgm_Interpolation$Pow__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$Pow();
    cbgm_Interpolation$Pow__init_(var_1, var_0);
    return var_1;
},
cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Exp() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value4 = 0.0;
    a.$power0 = 0.0;
    a.$min1 = 0.0;
    a.$scale3 = 0.0;
}
let cbgm_Interpolation$Exp__init_ = ($this, $value, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$value4 = $value;
    $this.$power0 = $power;
    $power = jl_Math_pow($value,  -$power);
    $this.$min1 = $power;
    $this.$scale3 = 1.0 / (1.0 - $power);
},
cbgm_Interpolation$Exp__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Interpolation$Exp();
    cbgm_Interpolation$Exp__init_(var_2, var_0, var_1);
    return var_2;
},
cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Elastic() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value6 = 0.0;
    a.$power = 0.0;
    a.$scale0 = 0.0;
    a.$bounces = 0.0;
}
let cbgm_Interpolation$Elastic__init_ = ($this, $value, $power, $bounces, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$value6 = $value;
    $this.$power = $power;
    $this.$scale0 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
},
cbgm_Interpolation$Elastic__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Interpolation$Elastic();
    cbgm_Interpolation$Elastic__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale1 = 0.0;
}
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale4 = 0.0;
}
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale2 = 0.0;
}
function cbgm_Interpolation$BounceOut() {
    let a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
let cbgm_Interpolation$BounceOut__init_ = ($this, $bounces) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbgm_Interpolation__init_($this);
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            var$2 = $rt_createFloatArray($bounces);
            $this.$widths = var$2;
            var$3 = $rt_createFloatArray($bounces);
            var$4 = var$3.data;
            $this.$heights = var$3;
            var$4[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    var$3 = var$2.data;
                    var$3[0] = 0.4000000059604645;
                    var$3[1] = 0.4000000059604645;
                    var$3[2] = 0.20000000298023224;
                    var$4[1] = 0.33000001311302185;
                    var$4[2] = 0.10000000149011612;
                    break a;
                case 4:
                    var$3 = var$2.data;
                    var$3[0] = 0.3400000035762787;
                    var$3[1] = 0.3400000035762787;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.15000000596046448;
                    var$4[1] = 0.25999999046325684;
                    var$4[2] = 0.10999999940395355;
                    var$4[3] = 0.029999999329447746;
                    break a;
                case 5:
                    var$3 = var$2.data;
                    var$3[0] = 0.30000001192092896;
                    var$3[1] = 0.30000001192092896;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.10000000149011612;
                    var$3[4] = 0.10000000149011612;
                    var$4[1] = 0.44999998807907104;
                    var$4[2] = 0.30000001192092896;
                    var$4[3] = 0.15000000596046448;
                    var$4[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            var$3 = var$2.data;
            var$3[0] = 0.6000000238418579;
            var$3[1] = 0.4000000059604645;
            var$4[1] = 0.33000001311302185;
        }
        var$2 = var$2.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append(var$6, $rt_s(67));
    jl_RuntimeException__init_(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$6, $bounces)));
    $rt_throw(var$5);
},
cbgm_Interpolation$BounceOut__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_(var_1, var_0);
    return var_1;
},
cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
ju_Comparator = $rt_classWithoutFields(0),
jl_String$_clinit_$lambda$_115_0 = $rt_classWithoutFields(),
jl_Character = $rt_classWithoutFields(),
jl_Character_TYPE = null,
jl_Character_digitMapping = null,
jl_Character_upperCaseMapping = null,
jl_Character_lowerCaseMapping = null,
jl_Character_classMapping = null,
jl_Character_characterCache = null,
jl_Character_$$metadata$$0 = null,
jl_Character_$$metadata$$1 = null,
jl_Character_$$metadata$$3 = null,
jl_Character_$$metadata$$4 = null,
jl_Character_toString = $c => {
    let var$2, var$3;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
},
jl_Character_isSupplementaryCodePoint = $codePoint => {
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isHighSurrogate = $ch => {
    return ($ch & 64512) != 55296 ? 0 : 1;
},
jl_Character_isLowSurrogate = $ch => {
    return ($ch & 64512) != 56320 ? 0 : 1;
},
jl_Character_isSurrogate = $ch => {
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
},
jl_Character_isSurrogatePair = ($high, $low) => {
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
},
jl_Character_toCodePoint = ($high, $low) => {
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
},
jl_Character_highSurrogate = $codePoint => {
    return (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
},
jl_Character_lowSurrogate = $codePoint => {
    return (56320 | $codePoint & 1023) & 65535;
},
jl_Character_toLowerCase = $ch => {
    return jl_Character_toLowerCase0($ch) & 65535;
},
jl_Character_toLowerCase0 = $ch => {
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
    }
    return jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
},
jl_Character_toUpperCase = $ch => {
    return jl_Character_toUpperCase0($ch) & 65535;
},
jl_Character_toUpperCase0 = $codePoint => {
    if (jl_Character_upperCaseMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
    }
    return jl_Character_mapChar(jl_Character_upperCaseMapping, $codePoint);
},
jl_Character_mapChar = ($table, $codePoint) => {
    let $binSearchTable, var$4, var$5, var$6, $index, var$8;
    $binSearchTable = $table.$fastTable.data;
    if ($codePoint < $binSearchTable.length)
        return $codePoint + $binSearchTable[$codePoint] | 0;
    $binSearchTable = $table.$binarySearchTable.data;
    var$4 = 0;
    var$5 = $binSearchTable.length;
    var$6 = (var$5 / 2 | 0) - 1 | 0;
    a: {
        while (true) {
            $index = (var$4 + var$6 | 0) / 2 | 0;
            var$8 = $rt_compare($binSearchTable[$index * 2 | 0], $codePoint);
            if (!var$8)
                break;
            if (var$8 <= 0) {
                var$4 = $index + 1 | 0;
                if (var$4 > var$6)
                    break a;
            } else {
                $index = $index - 1 | 0;
                if ($index < var$4)
                    break a;
                var$6 = $index;
            }
        }
    }
    if ($index >= 0) {
        $index = $index * 2 | 0;
        if ($index < var$5)
            return $codePoint + $binSearchTable[$index + 1 | 0] | 0;
    }
    return 0;
},
jl_Character_digit = ($ch, $radix) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($radix >= 2 && $radix <= 36) {
        if (jl_Character_digitMapping === null) {
            if (jl_Character_$$metadata$$3 === null)
                jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
            var$3 = (jl_Character_$$metadata$$3.value !== null ? $rt_str(jl_Character_$$metadata$$3.value) : null);
            var$4 = otci_CharFlow__init_(jl_String_toCharArray(var$3));
            var$5 = otci_Base46_decodeUnsigned(var$4);
            var$6 = $rt_createIntArray(var$5 * 2 | 0);
            var$7 = var$6.data;
            var$8 = 0;
            var$9 = 0;
            var$10 = 0;
            var$11 = 0;
            while (var$11 < var$5) {
                var$9 = var$9 + otci_Base46_decode(var$4) | 0;
                var$10 = var$10 + otci_Base46_decode(var$4) | 0;
                var$12 = var$8 + 1 | 0;
                var$7[var$8] = var$9;
                var$8 = var$12 + 1 | 0;
                var$7[var$12] = var$10;
                var$11 = var$11 + 1 | 0;
            }
            jl_Character_digitMapping = var$6;
        }
        var$6 = jl_Character_digitMapping.data;
        var$8 = 0;
        var$9 = (var$6.length / 2 | 0) - 1 | 0;
        a: {
            while (var$9 >= var$8) {
                var$10 = (var$8 + var$9 | 0) / 2 | 0;
                var$11 = var$10 * 2 | 0;
                var$5 = $rt_compare($ch, var$6[var$11]);
                if (var$5 > 0)
                    var$8 = var$10 + 1 | 0;
                else {
                    if (var$5 >= 0) {
                        $ch = var$6[var$11 + 1 | 0];
                        break a;
                    }
                    var$9 = var$10 - 1 | 0;
                }
            }
            $ch = (-1);
        }
        if ($ch >= $radix)
            $ch = (-1);
    } else
        $ch = (-1);
    return $ch;
},
jl_Character_forDigit = ($digit, $radix) => {
    if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
},
jl_Character_toChars = $codePoint => {
    let var$2, var$3, var$4;
    if (!($codePoint >= 0 && $codePoint <= 1114111 ? 1 : 0)) {
        var$2 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    if ($codePoint < 65536) {
        var$3 = $rt_createCharArray(1);
        var$3.data[0] = $codePoint & 65535;
        return var$3;
    }
    var$3 = $rt_createCharArray(2);
    var$4 = var$3.data;
    var$4[0] = jl_Character_highSurrogate($codePoint);
    var$4[1] = jl_Character_lowSurrogate($codePoint);
    return var$3;
},
jl_Character_getType = $codePoint => {
    let $u, $range, $classes, var$5, var$6, var$7, var$8, var$9, $i, var$11, var$12, var$13, var$14, $l;
    $u = $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
    if ($u && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    if (jl_Character_classMapping === null) {
        if (jl_Character_$$metadata$$4 === null)
            jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
        $range = (jl_Character_$$metadata$$4.value !== null ? $rt_str(jl_Character_$$metadata$$4.value) : null);
        $classes = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
        var$5 = $classes.data;
        var$6 = $rt_createByteArray(16384);
        var$7 = var$6.data;
        var$8 = 0;
        var$9 = 0;
        $i = 0;
        var$11 = 0;
        while (var$11 < $range.$nativeString.length) {
            var$12 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
            if (var$12 == 64) {
                var$11 = var$11 + 1 | 0;
                var$12 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
                var$13 = 0;
                var$14 = 1;
                $u = 0;
                while ($u < 3) {
                    var$11 = var$11 + 1 | 0;
                    var$13 = var$13 | $rt_imul(var$14, otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11)));
                    var$14 = var$14 * 64 | 0;
                    $u = $u + 1 | 0;
                }
            } else if (var$12 < 32)
                var$13 = 1;
            else {
                var$12 = (var$12 - 32 | 0) << 24 >> 24;
                var$11 = var$11 + 1 | 0;
                var$13 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
            }
            if (!var$12 && var$13 >= 128) {
                if (var$8 > 0) {
                    $u = var$9 + 1 | 0;
                    var$5[var$9] = otciu_UnicodeHelper$Range__init_($i, $i + var$8 | 0, ju_Arrays_copyOf0(var$6, var$8));
                    var$9 = $u;
                }
                $i = $i + (var$8 + var$13 | 0) | 0;
                var$8 = 0;
            } else {
                $u = var$8 + var$13 | 0;
                if ($u < var$7.length)
                    $l = var$9;
                else {
                    $l = var$9 + 1 | 0;
                    var$5[var$9] = otciu_UnicodeHelper$Range__init_($i, $i + var$8 | 0, ju_Arrays_copyOf0(var$6, var$8));
                    $i = $i + $u | 0;
                    var$8 = 0;
                }
                while (true) {
                    $u = var$13 + (-1) | 0;
                    if (var$13 <= 0)
                        break;
                    var$13 = var$8 + 1 | 0;
                    var$7[var$8] = var$12;
                    var$8 = var$13;
                    var$13 = $u;
                }
                var$9 = $l;
            }
            var$11 = var$11 + 1 | 0;
        }
        jl_Character_classMapping = ju_Arrays_copyOf($classes, var$9);
    }
    $classes = jl_Character_classMapping.data;
    $l = 0;
    $u = $classes.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = $classes[$i];
        if ($codePoint >= $range.$end3)
            $l = $i + 1 | 0;
        else {
            $u = $range.$start2;
            if ($codePoint >= $u)
                return $range.$data16.data[$codePoint - $u | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
},
jl_Character_isLetterOrDigit = $codePoint => {
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
},
jl_Character_isIdentifierIgnorable = $codePoint => {
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
},
jl_Character_isSpaceChar = $codePoint => {
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isWhitespace = $codePoint => {
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
},
jl_Character__clinit_ = () => {
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
},
jl_Character_acquireLowerCaseMapping$$create = () => {
    return {"value" : "TW  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 a$#%# -mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%"
    + "# #%# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# #$$r#%# \'%# +%# #%# #%# #P6rM \'%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# .\'F#S HB#F#b o@5F#b Jo=N#f "};
},
jl_Character_acquireUpperCaseMapping$$create = () => {
    return {"value" : "NY  ,%H#U :#>b# vH#O #H#/:+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #,5# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'#(;#N1# %\'# #\'# %\'# \'\'# +\'# %6)# \'\'#*/#N6r# %_+# %\'# #\'# #\'# %\'# )\'# %\'# \'\'# #\'# %\'# \'\'# #J%# +\'#+# #\'#+# #\'#+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#L\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'#+# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3#!$r#:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'"
    + "# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d# #\'- (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'#"
    + " #\'# #\'# -\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'# %\'\' #\'% )\'# #\'# #\'# U\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#t {nm%:# V%H#^ >B#H#b o@5H#b No=P#f "};
},
jl_Character_obtainDigitMapping$$create = () => {
    return {"value" : "kE*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%_fG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%B\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%oYG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%ow?G%%%%%%%%%%%%%%%%%%s4%G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%"
    + "%%%%:OG%%%%%%%%%%%%%%%%%%V*OG%%%%%%%%%%%%%%%%%%VZ%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%k5G%%%%%%%%%%%%%%%%%%.lG%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
},
jl_Character_obtainClasses$$create = () => {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A&G*FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F) Y#J+Y(^+G*^*Y$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*!#A&BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0"
    + "G.H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^jA7^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?6767676"
    + "7Y&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^GA*=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#B##A#!# # #!#!#!#!A6E$!#&"
    + "E##F(\'F$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F"
    + "\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#A$FUA-b&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+A\'J+F%%&B7A$G&5%C7A)Z#b 1$ L@ FK G#5A#F#A1F$AXG%F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'"
    + "F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&A,F+ &A#& FG &I$G\' )A#) I% I#\')\'&\'&Y# Y#A)G#A>FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+A\'J5A=F<A#\')\'I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%"
    + "Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W# FB9A/J+A\'F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+\'b 6! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0A+b&<` A&b&(* b ZK!F?G-I$G$J+b \'< b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q\' E$FIE#Y$J+b \'$ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AJF#A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =_ b=Q$ J+A\'b=U\'"
    + " AnGOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b 7$ F?G#&J+A%9b A( F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% "
    + "F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^-A%^#A`b=5& A-^/A#^.A$^+A&^YA(^0A#^,A\'^*A(b=4#  b==! J+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
},
cgxgbtu_TeaBaseUrlProvider = $rt_classWithoutFields(0),
cgxgbtu_TeaDefaultBaseUrlProvider = $rt_classWithoutFields(),
dcgb_GameTemplate = $rt_classWithoutFields(0),
dcgb_GameMain = $rt_classWithoutFields();
function jl_Enum() {
    let a = this; jl_Object.call(a);
    a.$name1 = null;
    a.$ordinal0 = 0;
}
let jl_Enum__init_ = ($this, $name, $ordinal) => {
    $this.$name1 = $name;
    $this.$ordinal0 = $ordinal;
},
jl_Enum_ordinal = $this => {
    return $this.$ordinal0;
},
jl_Enum_toString = $this => {
    return $this.$name1;
},
cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum),
cgxgbt_TeaApplication$AppState_INIT = null,
cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_APP_CREATE = null,
cgxgbt_TeaApplication$AppState_APP_LOOP = null,
cgxgbt_TeaApplication$AppState_$VALUES = null,
cgxgbt_TeaApplication$AppState__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(68), 0);
    cgxgbt_TeaApplication$AppState_INIT = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(69), 1);
    cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(70), 2);
    cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(71), 3);
    cgxgbt_TeaApplication$AppState_APP_CREATE = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(72), 4);
    cgxgbt_TeaApplication$AppState_APP_LOOP = var$1;
    var$2 = $rt_createArray(cgxgbt_TeaApplication$AppState, 5);
    var$3 = var$2.data;
    var$3[0] = cgxgbt_TeaApplication$AppState_INIT;
    var$3[1] = cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS;
    var$3[2] = cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS;
    var$3[3] = cgxgbt_TeaApplication$AppState_APP_CREATE;
    var$3[4] = var$1;
    cgxgbt_TeaApplication$AppState_$VALUES = var$2;
},
cgxgbtd_WindowWrapper = $rt_classWithoutFields(0),
otj_JSObject = $rt_classWithoutFields(0),
otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function cgxgbtdi_TeaWindow() {
    let a = this; jl_Object.call(a);
    a.$window0 = null;
    a.$runnable = null;
}
let cgxgbtdi_TeaWindow_TEA_WINDOW = null,
cgxgbtdi_TeaWindow_$callClinit = () => {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
},
cgxgbtdi_TeaWindow_get = () => {
    cgxgbtdi_TeaWindow_$callClinit();
    return cgxgbtdi_TeaWindow_TEA_WINDOW;
},
cgxgbtdi_TeaWindow__init_0 = $this => {
    cgxgbtdi_TeaWindow_$callClinit();
    $this.$window0 = window;
},
cgxgbtdi_TeaWindow__init_ = () => {
    let var_0 = new cgxgbtdi_TeaWindow();
    cgxgbtdi_TeaWindow__init_0(var_0);
    return var_0;
},
cgxgbtdi_TeaWindow_getDocument = $this => {
    return $this.$window0.document;
},
cgxgbtdi_TeaWindow_requestAnimationFrame = ($this, $runnable) => {
    $this.$runnable = $runnable;
    requestAnimationFrame(otji_JS_function(otji_JSWrapper_unwrap($this), "onAnimationFrame"));
},
cgxgbtdi_TeaWindow_getClientWidth = $this => {
    return $this.$window0.innerWidth;
},
cgxgbtdi_TeaWindow_getClientHeight = $this => {
    return $this.$window0.innerHeight;
},
cgxgbtdi_TeaWindow_addEventListener = ($this, $type, $listener) => {
    $this.$window0.addEventListener($rt_ustr($type), otji_JS_function($listener, "handleEvent"));
},
cgxgbtdi_TeaWindow__clinit_ = () => {
    cgxgbtdi_TeaWindow_TEA_WINDOW = cgxgbtdi_TeaWindow__init_();
},
cgxgbtdi_TeaWindow_onAnimationFrame$exported$0 = (var$1, var$2) => {
    let var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    var$2;
    var$1 = var$1;
    var$3 = var$1.$runnable;
    var$1.$runnable = null;
    cgxgbt_TeaApplication_run(var$3);
},
jl_Math = $rt_classWithoutFields(),
jl_Math_sin = var$1 => {
    return Math.sin(var$1);
},
jl_Math_cos = var$1 => {
    return Math.cos(var$1);
},
jl_Math_sqrt = var$1 => {
    return Math.sqrt(var$1);
},
jl_Math_ceil = var$1 => {
    return Math.ceil(var$1);
},
jl_Math_floor = var$1 => {
    return Math.floor(var$1);
},
jl_Math_pow = (var$1, $y) => {
    return jl_Math_powImpl(var$1, $y);
},
jl_Math_powImpl = (var$1, var$2) => {
    return Math.pow(var$1, var$2);
},
jl_Math_round = var$1 => {
    return var$1 + jl_Math_sign(var$1) * 0.5 | 0;
},
jl_Math_randomImpl = () => {
    return Math.random();
},
jl_Math_min = ($a, $b) => {
    if ($a < $b)
        $b = $a;
    return $b;
},
jl_Math_max = ($a, $b) => {
    if ($a > $b)
        $b = $a;
    return $b;
},
jl_Math_minImpl = (var$1, var$2) => {
    return Math.min(var$1, var$2);
},
jl_Math_maxImpl = (var$1, var$2) => {
    return Math.max(var$1, var$2);
},
jl_Math_max0 = (var$1, var$2) => {
    return jl_Math_maxImpl(var$1, var$2);
},
jl_Math_abs = $n => {
    if ($n < 0)
        $n =  -$n | 0;
    return $n;
},
jl_Math_absImpl = var$1 => {
    return Math.abs(var$1);
},
jl_Math_abs0 = var$1 => {
    return jl_Math_absImpl(var$1);
},
jl_Math_sign = var$1 => {
    return Math.sign(var$1);
},
jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalArgumentException__init_ = ($this, var$1) => {
    jl_RuntimeException__init_($this, var$1);
},
jl_IllegalArgumentException__init_1 = var_0 => {
    let var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_(var_1, var_0);
    return var_1;
},
ju_Objects = $rt_classWithoutFields(),
ju_Objects_requireNonNull = $obj => {
    if ($obj !== null)
        return $obj;
    $obj = new jl_NullPointerException;
    jl_RuntimeException__init_($obj, $rt_s(8));
    $rt_throw($obj);
},
ju_Objects_checkFromIndexSize = ($fromIndex, $size, $length) => {
    let var$4;
    if ($fromIndex >= 0 && $size >= 0 && $size <= ($length - $fromIndex | 0))
        return $fromIndex;
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
};
function otji_JSWrapper() {
    jl_Object.call(this);
    this.$js = null;
}
let otji_JSWrapper__init_0 = ($this, $js) => {
    $this.$js = $js;
},
otji_JSWrapper__init_ = var_0 => {
    let var_1 = new otji_JSWrapper();
    otji_JSWrapper__init_0(var_1, var_0);
    return var_1;
},
otji_JSWrapper_wrap = $jsNumber => {
    let $type, $isObject, $wrappers, $existingRef, $existing, $wrapper, $stringWrappers, $stringFinalizationRegistry, $wrapperAsJs, $numberWrappers, $numberFinalizationRegistry;
    if ($jsNumber === null)
        return null;
    $type = $rt_str(typeof $jsNumber);
    $isObject = !jl_String_equals($type, $rt_s(73)) && !jl_String_equals($type, $rt_s(74)) ? 0 : 1;
    otji_JSWrapper$Helper_$callClinit();
    $wrappers = otji_JSWrapper$Helper_wrappers;
    if ($wrappers !== null) {
        if ($isObject) {
            $existingRef = $wrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrappers.set($jsNumber, new WeakRef($wrapper));
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(75))) {
            $stringWrappers = otji_JSWrapper$Helper_stringWrappers;
            $stringFinalizationRegistry = otji_JSWrapper$Helper_stringFinalizationRegistry;
            $existingRef = $stringWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrapperAsJs = $wrapper;
            $stringWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($stringFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(76))) {
            $numberWrappers = otji_JSWrapper$Helper_numberWrappers;
            $numberFinalizationRegistry = otji_JSWrapper$Helper_numberFinalizationRegistry;
            $existingRef = $numberWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrapperAsJs = $wrapper;
            $numberWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($numberFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(77))) {
            $existingRef = otji_JSWrapper$Helper_undefinedWrapper;
            $existing = $existingRef === null ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            otji_JSWrapper$Helper_undefinedWrapper = new WeakRef($wrapper);
            return $wrapper;
        }
    }
    return otji_JSWrapper__init_($jsNumber);
},
otji_JSWrapper_unwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof otji_JSWrapper) ? $o : $o.$js;
},
otji_JSWrapper_javaToJs = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() && $o instanceof otji_JSWrapper ? otji_JSWrapper_unwrap($o) : $o;
},
otji_JSWrapper_jsToJava = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() ? $o : otji_JSWrapper_wrap($o);
},
otji_JSWrapper_register$js_body$_4 = (var$1, var$2, var$3) => {
    return var$1.register(var$2, var$3);
},
cgxgbta_TeaWebAgent = $rt_classWithoutFields(),
cgxgbta_TeaWebAgent_createAgent$js_body$_1 = () => {
    var userAgent = navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
},
jl_System = $rt_classWithoutFields(),
jl_System_outCache = null,
jl_System_errCache = null,
jl_System_properties = null,
jl_System_out = () => {
    let var$1;
    if (jl_System_outCache === null) {
        var$1 = new otcic_JSStdoutPrintStream;
        otcic_JsConsolePrintStream__init_(var$1);
        jl_System_outCache = var$1;
    }
    return jl_System_outCache;
},
jl_System_err = () => {
    let var$1;
    if (jl_System_errCache === null) {
        var$1 = new otcic_JSStderrPrintStream;
        otcic_JsConsolePrintStream__init_(var$1);
        jl_System_errCache = var$1;
    }
    return jl_System_errCache;
},
jl_System_arraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let $srcType, $targetType, $srcArray, $i, var$10, var$11, var$12;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            a: {
                b: {
                    if ($src !== $dest) {
                        $srcType = jl_Class_getComponentType(jl_Object_getClass($src));
                        $targetType = jl_Class_getComponentType(jl_Object_getClass($dest));
                        if ($srcType !== null && $targetType !== null) {
                            if ($srcType === $targetType)
                                break b;
                            if (!jl_Class_isPrimitive($srcType) && !jl_Class_isPrimitive($targetType)) {
                                $srcArray = $src;
                                $i = 0;
                                var$10 = $srcPos;
                                while ($i < $length) {
                                    var$11 = $srcArray.data;
                                    var$12 = var$10 + 1 | 0;
                                    if (!jl_Class_isInstance($targetType, var$11[var$10])) {
                                        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                        $src = new jl_ArrayStoreException;
                                        jl_Exception__init_($src);
                                        $rt_throw($src);
                                    }
                                    $i = $i + 1 | 0;
                                    var$10 = var$12;
                                }
                                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                return;
                            }
                            if (!jl_Class_isPrimitive($srcType))
                                break a;
                            if (jl_Class_isPrimitive($targetType))
                                break b;
                            else
                                break a;
                        }
                        $src = new jl_ArrayStoreException;
                        jl_Exception__init_($src);
                        $rt_throw($src);
                    }
                }
                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                return;
            }
            $src = new jl_ArrayStoreException;
            jl_Exception__init_($src);
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $dest = new jl_NullPointerException;
    jl_RuntimeException__init_($dest, $rt_s(78));
    $rt_throw($dest);
},
jl_System_fastArraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
        return;
    }
    $src = new jl_IndexOutOfBoundsException;
    jl_Exception__init_($src);
    $rt_throw($src);
},
jl_System_doArrayCopy = (var$1, var$2, var$3, var$4, var$5) => {
    if (var$5 !== 0) {
        if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = var$2 + var$5 | 0;
            var$4 = var$4 + var$5 | 0;
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[ --var$4] = var$1.data[ --var$2];
            }
        }
    }
},
jl_System_currentTimeMillis = () => {
    return Long_fromNumber((new Date()).getTime());
},
jl_System_setProperty = (var$1, var$2) => {
    let var$3, var$4, var$5;
    if (jl_System_properties === null) {
        var$3 = new ju_Properties;
        ju_Hashtable__init_(var$3);
        var$4 = var$3;
        ju_Hashtable_put(var$4, $rt_s(79), $rt_s(80));
        ju_Hashtable_put(var$4, $rt_s(45), $rt_s(81));
        ju_Hashtable_put(var$4, $rt_s(82), $rt_s(83));
        ju_Hashtable_put(var$4, $rt_s(84), $rt_s(85));
        ju_Hashtable_put(var$4, $rt_s(86), $rt_s(26));
        ju_Hashtable_put(var$4, $rt_s(87), $rt_s(88));
        ju_Hashtable_put(var$4, $rt_s(89), $rt_s(80));
        ju_Hashtable_put(var$4, $rt_s(90), $rt_s(83));
        var$5 = new ju_Properties;
        ju_Hashtable__init_(var$5);
        var$5.$defaults = var$3;
        jl_System_properties = var$5;
    }
    return ju_Hashtable_put(jl_System_properties, var$1, var$2);
},
cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    let a = this; jl_Object.call(a);
    a.$context = null;
    a.$canvas0 = null;
    a.$config1 = null;
    a.$gl20 = null;
    a.$gl30 = null;
    a.$glVersion = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
let cgxgbt_TeaGraphics__init_ = ($this, $config) => {
    let $attr, $canvas1, $window, $document, $versionString, $vendorString, $rendererString, $width, $currentWindow, var$11, var$12;
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config1 = $config;
    $this.$canvas0 = (cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow__init_())).getElementById($rt_ustr($config.$canvasID));
    $attr = cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14();
    $attr.alpha = !!$config.$alpha;
    $attr.antialias = !!$config.$antialiasing;
    $attr.stencil = !!$config.$stencil;
    $attr.premultipliedAlpha = !!$config.$premultipliedAlpha;
    $attr.preserveDrawingBuffer = !!$config.$preserveDrawingBuffer;
    $attr.powerPreference = $rt_ustr($config.$powerPreference);
    $canvas1 = $this.$canvas0;
    if ($config.$useGL30)
        $this.$context = $canvas1.getContext("webgl2", $attr);
    a: {
        if ($config.$useGL30) {
            $window = $this.$context;
            if ($window !== null) {
                if (!$config.$useDebugGL)
                    $document = cgxgbt_TeaGL30__init_0($window);
                else {
                    $document = new cgxgbt_TeaGL30Debug;
                    cgxgbt_TeaGL30__init_($document, $window);
                }
                $this.$gl30 = $document;
                $this.$gl20 = $document;
                break a;
            }
        }
        $document = $canvas1.getContext("webgl", $attr);
        $this.$context = $document;
        if (!$config.$useDebugGL)
            $window = cgxgbt_TeaGL20__init_0($document);
        else {
            $window = new cgxgbt_TeaGL20Debug;
            cgxgbt_TeaGL20__init_($window, $document);
        }
        $this.$gl20 = $window;
    }
    $versionString = $this.$gl20.$glGetString(7938);
    $vendorString = $this.$gl20.$glGetString(7936);
    $rendererString = $this.$gl20.$glGetString(7937);
    $canvas1 = new cbggg_GLVersion;
    $window = cbg_Application$ApplicationType_WebGL;
    $canvas1.$TAG = $rt_s(91);
    if ($window === cbg_Application$ApplicationType_Android)
        $canvas1.$type1 = cbggg_GLVersion$Type_GLES;
    else if ($window === cbg_Application$ApplicationType_iOS)
        $canvas1.$type1 = cbggg_GLVersion$Type_GLES;
    else if ($window === cbg_Application$ApplicationType_Desktop)
        $canvas1.$type1 = cbggg_GLVersion$Type_OpenGL;
    else if ($window === cbg_Application$ApplicationType_Applet)
        $canvas1.$type1 = cbggg_GLVersion$Type_OpenGL;
    else if ($window !== $window)
        $canvas1.$type1 = cbggg_GLVersion$Type_NONE;
    else
        $canvas1.$type1 = cbggg_GLVersion$Type_WebGL;
    $window = $canvas1.$type1;
    if ($window === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(92), $versionString);
    else if ($window === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(93), $versionString);
    else if ($window === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(94), $versionString);
    else {
        $canvas1.$majorVersion = (-1);
        $canvas1.$minorVersion = (-1);
        $canvas1.$releaseVersion = (-1);
        $vendorString = $rt_s(8);
        $rendererString = $rt_s(8);
    }
    $canvas1.$versionString = $versionString;
    $canvas1.$vendorString = $vendorString;
    $canvas1.$rendererString = $rendererString;
    $this.$glVersion = $canvas1;
    $width = $config.$width3;
    if (!($width < 0 && $config.$height4 < 0)) {
        if ($width && $config.$height4 ? 1 : 0)
            cgxgbt_TeaGraphics_setCanvasSize($this, $width, $config.$height4, 0);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_get();
            cgxgbt_TeaGraphics_setCanvasSize($this, cgxgbtdi_TeaWindow_getClientWidth($currentWindow) - $config.$padHorizontal | 0, cgxgbtdi_TeaWindow_getClientHeight($currentWindow) - $config.$padVertical | 0, $config.$usePhysicalPixels);
        }
    }
    $config = $this.$context;
    var$11 = cgxgbt_TeaGraphics_getWidth($this);
    var$12 = cgxgbt_TeaGraphics_getHeight($this);
    $config.viewport(0, 0, var$11, var$12);
    $config = $this.$canvas0;
    $window = new cgxgbt_TeaGraphics$1;
    $window.$this$022 = $this;
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($config, otji_JS_function(otji_JSWrapper_unwrap($window), "fullscreenChanged"));
},
cgxgbt_TeaGraphics__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGraphics_getGL20 = $this => {
    return $this.$gl20;
},
cgxgbt_TeaGraphics_getGL30 = $this => {
    return $this.$gl30;
},
cgxgbt_TeaGraphics_getWidth = $this => {
    return $this.$canvas0.width;
},
cgxgbt_TeaGraphics_getHeight = $this => {
    return $this.$canvas0.height;
},
cgxgbt_TeaGraphics_setCanvasSize = ($this, $width, $height, $usePhysicalPixels) => {
    let $density, $w, $h, $style, var$8;
    $density = 1.0;
    if ($usePhysicalPixels)
        $density = devicePixelRatio || 1;
    $w = $width * $density | 0;
    $h = $height * $density | 0;
    $this.$canvas0.width = $w;
    $this.$canvas0.height = $h;
    if ($usePhysicalPixels) {
        $style = $this.$canvas0.style;
        cgxgbtd_StyleWrapper$Unit_$callClinit();
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        jl_StringBuilder_append(jl_StringBuilder_append0(var$8, $width), $rt_s(95));
        $style.setProperty("width", $rt_ustr(jl_AbstractStringBuilder_toString(var$8)));
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        jl_StringBuilder_append(jl_StringBuilder_append0(var$8, $height), $rt_s(95));
        $style.setProperty("height", $rt_ustr(jl_AbstractStringBuilder_toString(var$8)));
    }
},
cgxgbt_TeaGraphics_supportsExtension = ($this, $extensionName) => {
    return $this.$context.getExtension($rt_ustr($extensionName)) === null ? 0 : 1;
},
cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61 = (var$1, var$2) => {
    if (var$1.requestFullscreen) {
        document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        document.addEventListener("msfullscreenchange", var$2, false);
    }
},
cgxgbta_AssetDownloader = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl() {
    let a = this; jl_Object.call(a);
    a.$queue = 0;
    a.$showLogs = 0;
}
let cgxgbta_AssetDownloadImpl_subtractQueue = $this => {
    $this.$queue = $this.$queue - 1 | 0;
},
cgxgbta_AssetDownloadImpl_addQueue = $this => {
    $this.$queue = $this.$queue + 1 | 0;
},
cgxgbta_AssetDownloadImpl_load = ($this, $async, $url, $type, $listener) => {
    let $internalListener, var$6;
    $internalListener = new cgxgbta_AssetDownloadImpl$1;
    $internalListener.$this$07 = $this;
    $internalListener.$val$listener = $listener;
    if ($this.$showLogs) {
        $listener = jl_System_out();
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(96)), $url);
        var$6 = jl_AbstractStringBuilder_toString(var$6);
        otcic_JsConsolePrintStream_println($listener, var$6);
    }
    a: {
        cgxgbta_AssetDownloadImpl$3_$callClinit();
        switch (cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[$type.$ordinal0]) {
            case 1:
                break;
            case 2:
                $type = null;
                cgxgbta_AssetDownloadImpl$1_onSuccess($internalListener, $url, $type);
                break a;
            default:
                $url = new cbgu_GdxRuntimeException;
                $type = jl_String_valueOf($type);
                $listener = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($listener);
                jl_StringBuilder_append(jl_StringBuilder_append($listener, $rt_s(97)), $type);
                jl_RuntimeException__init_($url, jl_AbstractStringBuilder_toString($listener));
                $rt_throw($url);
        }
        cgxgbta_AssetDownloadImpl_loadBinary($this, $async, $url, $internalListener, 0);
    }
},
cgxgbta_AssetDownloadImpl_loadBinary = ($this, $async, $url, $listener, $count) => {
    let var$5;
    if ($count == 3) {
        if ($listener !== null)
            cgxgbta_AssetDownloadImpl$1_onFailure($listener, $url);
        return;
    }
    cgxgbta_AssetDownloadImpl_addQueue($this);
    if (!$async)
        cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $listener, $count);
    else {
        var$5 = new cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0;
        var$5.$_04 = $this;
        var$5.$_10 = $url;
        var$5.$_20 = $listener;
        var$5.$_30 = $count;
        setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$5), "onTimer"), 0);
    }
},
cgxgbta_AssetDownloadImpl_loadBinaryInternally = ($this, $async, $url, $listener, $count) => {
    let $request, var$6;
    $request = new XMLHttpRequest();
    var$6 = new cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0;
    var$6.$_017 = $this;
    var$6.$_15 = $request;
    var$6.$_24 = $listener;
    var$6.$_32 = $url;
    var$6.$_40 = $count;
    var$6.$_5 = $async;
    $request.onreadystatechange = otji_JS_function(otji_JSWrapper_unwrap(var$6), "handleEvent");
    var$6 = new cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0;
    var$6.$_019 = $listener;
    $listener = otji_JSWrapper_unwrap(var$6);
    $request.addEventListener("progress", otji_JS_function($listener, "handleEvent"));
    $request.open("GET", $rt_ustr($url), !!$async);
    if ($async)
        $request.responseType = "arraybuffer";
    $request.send();
},
cgxgbta_AssetInstance = $rt_classWithoutFields(),
cgxgbta_AssetInstance_downloaderInstance = null,
cgxgbta_AssetInstance_instance = null,
cgxgbta_AssetLoader = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl() {
    let a = this; jl_Object.call(a);
    a.$assetTotal = 0;
    a.$baseUrl = null;
    a.$assetInQueue = null;
    a.$assetDownloader = null;
}
let cgxgbta_AssetLoadImpl_getAssetUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(98));
    return jl_AbstractStringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_getScriptUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(99));
    return jl_AbstractStringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_preload = ($this, $config, $assetFileUrl) => {
    let $listener, var$4, var$5;
    $listener = new cgxgbta_AssetLoadImpl$5;
    $listener.$this$03 = $this;
    $listener.$val$config = $config;
    $listener.$val$assetFileUrl = $assetFileUrl;
    $config = $this.$assetDownloader;
    var$4 = cgxgbta_AssetLoadImpl_getAssetUrl($this);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $assetFileUrl);
    $assetFileUrl = jl_AbstractStringBuilder_toString(var$5);
    var$5 = cgxgbta_AssetType_Binary;
    cgxgbta_AssetDownloadImpl_load($config, 1, $assetFileUrl, var$5, $listener);
},
cgxgbta_AssetLoadImpl_loadScript = ($this, $path, $listener) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $this.$assetDownloader;
    var$4 = cgxgbta_AssetLoadImpl_getScriptUrl($this);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $path);
    var$6 = jl_AbstractStringBuilder_toString(var$5);
    $path = var$3;
    if ($path.$showLogs) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(100)), var$6);
        var$4 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, var$4);
    }
    cgxgbta_AssetDownloadImpl_addQueue($path);
    var$5 = window.document;
    var$7 = var$5.createElement("script");
    var$3 = new cgxgbta_AssetDownloadImpl$2;
    var$3.$this$06 = $path;
    var$3.$val$url = var$6;
    var$3.$val$listener1 = $listener;
    var$7.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent"));
    var$4 = new cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0;
    var$4.$_07 = $path;
    var$4.$_12 = var$6;
    var$4.$_22 = $listener;
    var$7.addEventListener("error", otji_JS_function(otji_JSWrapper_unwrap(var$4), "handleEvent"));
    $path = $rt_ustr(var$6);
    var$7.src = $path;
    var$5.body.appendChild(var$7);
},
cgxgbta_AssetLoadImpl_getQueue = $this => {
    return $this.$assetDownloader.$queue;
};
function cgxjc_JMultiplatform() {
    jl_Object.call(this);
    this.$map1 = null;
}
let cgxjc_JMultiplatform_platformMap = null,
cgxjc_JMultiplatform__init_0 = $this => {
    let var$1;
    var$1 = new cgxjc_JPlatformMap;
    var$1.$map0 = ju_HashMap__init_();
    $this.$map1 = var$1;
},
cgxjc_JMultiplatform__init_ = () => {
    let var_0 = new cgxjc_JMultiplatform();
    cgxjc_JMultiplatform__init_0(var_0);
    return var_0;
};
function cgxjc_JPlatformMap() {
    jl_Object.call(this);
    this.$map0 = null;
}
let cgxjc_JPlatformMap_put = ($this, $key, $value) => {
    ju_HashMap_put($this.$map0, $key, $value);
},
cbg_Input = $rt_classWithoutFields(0);
function cbg_AbstractInput() {
    let a = this; jl_Object.call(a);
    a.$pressedKeys = null;
    a.$justPressedKeys = null;
    a.$keysToCatch = null;
}
let cbg_AbstractInput_isCatchKey = ($this, $keycode) => {
    let var$2;
    var$2 = $this.$keysToCatch;
    return !$keycode ? var$2.$hasZeroValue1 : cbgu_IntSet_locateKey(var$2, $keycode) < 0 ? 0 : 1;
},
cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbt_TeaInput() {
    let a = this; cbg_AbstractInput.call(a);
    a.$canvas = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$keyJustPressed = 0;
    a.$justPressedButtons = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
    a.$application = null;
}
let cgxgbt_TeaInput_getMouseWheelVelocity = $event => {
    let $agent, $delta, $detail, $wheelDelta;
    $agent = cgxgbt_TeaApplication_agentInfo;
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        $detail = $delta / 120.0;
        if (jl_Math_abs0($detail) >= 1.0)
            $delta = $detail;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? $detail : $delta / 3.0;
    }
    return $delta;
},
cgxgbt_TeaInput__init_0 = ($this, $application, $canvas) => {
    let var$3, var$4, var$5;
    $this.$keysToCatch = cbgu_IntSet__init_();
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$justTouched = 0;
    var$3 = new cbgu_IntMap;
    var$3.$loadFactor0 = 0.800000011920929;
    var$4 = cbgu_ObjectSet_tableSize(20, 0.800000011920929);
    var$3.$threshold0 = var$4 * 0.800000011920929 | 0;
    var$5 = var$4 - 1 | 0;
    var$3.$mask1 = var$5;
    var$3.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$5));
    var$3.$keyTable1 = $rt_createIntArray(var$4);
    var$3.$valueTable1 = $rt_createArray(jl_Object, var$4);
    $this.$touchMap = var$3;
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_();
    $this.$pressedKeyCount = 0;
    $this.$keyJustPressed = 0;
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$hasFocus = 1;
    $this.$application = $application;
    $this.$canvas = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
},
cgxgbt_TeaInput__init_ = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaInput_hookEvents = $this => {
    let $document;
    $document = $this.$canvas.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $this.$canvas.addEventListener("touchstart", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchmove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchcancel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchend", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
},
cgxgbt_TeaInput_handleMouseEvents = ($this, $touchEvent) => {
    let $type, $target, $canvas2, var$5, $button, $relativeX, $relativeY, $touch, $mouseX, $mouseY, $wheelDelta, $touches, $i, $j, $real, $equals, $touch_0, $touchId, $j_0, var$21;
    a: {
        $type = $rt_str($touchEvent.type);
        if (jl_String_equals($type, $rt_s(101))) {
            window.focus();
            $target = $touchEvent.target;
            $canvas2 = $this.$canvas;
            if ($target !== $canvas2 ? 0 : 1) {
                var$5 = $this.$touched.data;
                if (!var$5[0]) {
                    $this.$hasFocus = 1;
                    $this.$justTouched = 1;
                    var$5[0] = 1;
                    $button = cgxgbtu_KeyCodes_getButton($touchEvent.button);
                    cbgu_IntSet_add($this.$pressedButtons, $button);
                    $this.$justPressedButtons.data[$button] = 1;
                    $this.$deltaX.data[0] = 0;
                    $this.$deltaY.data[0] = 0;
                    if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                        $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touchEvent, $this.$canvas);
                        $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
                        $this.$touchX.data[0] = $relativeX;
                        $this.$touchY.data[0] = $relativeY;
                    } else {
                        var$5 = $this.$touchX.data;
                        var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                        var$5 = $this.$touchY.data;
                        var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                    }
                    $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
                    $touchEvent.preventDefault();
                    $touchEvent.stopPropagation();
                    break a;
                }
            }
            $mouseX = cgxgbt_TeaInput_getRelativeX0($this, $touchEvent, $canvas2);
            $mouseY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
            if (!($mouseX >= 0.0 && $mouseX <= cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) && $mouseY >= 0.0 && $mouseY <= cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics)))
                $this.$hasFocus = 0;
            return;
        }
        if (jl_String_equals($type, $rt_s(102))) {
            if (!$this.$touched.data[0])
                return;
            cbgu_IntSet_remove($this.$pressedButtons, cgxgbtu_KeyCodes_getButton($touchEvent.button));
            var$5 = $this.$touched;
            var$5.data[0] = $this.$pressedButtons.$size4 <= 0 ? 0 : 1;
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                cgxgbt_TeaInput_setDelta($this, 0, cgxgbt_TeaInput_getRelativeX0($this, $touchEvent, $this.$canvas) - $this.$touchX.data[0] | 0, cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = cgxgbt_TeaInput_getRelativeX0($this, $touchEvent, $this.$canvas);
                $this.$touchY.data[0] = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
        } else if (!jl_String_equals($type, $rt_s(103))) {
            if (jl_String_equals($type, $rt_s(104))) {
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($touchEvent);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if (jl_String_equals($type, $rt_s(105))) {
                $this.$justTouched = 1;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = $touches.item($i);
                    $real = $touch.identifier;
                    $canvas2 = $this.$touchMap;
                    $equals = cgxgbt_TeaInput_getAvailablePointer($this);
                    cbgu_IntMap_put($canvas2, $real, jl_Integer_valueOf($equals));
                    $this.$touched.data[$equals] = 1;
                    $this.$touchX.data[$equals] = cgxgbt_TeaInput_getRelativeX($this, $touch, $this.$canvas);
                    $this.$touchY.data[$equals] = cgxgbt_TeaInput_getRelativeY($this, $touch, $this.$canvas);
                    $this.$deltaX.data[$equals] = 0;
                    $this.$deltaY.data[$equals] = 0;
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[$equals], $this.$touchY.data[$equals], $equals, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $touchEvent.preventDefault();
            }
        } else {
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touchEvent, $this.$canvas);
                $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
                cgxgbt_TeaInput_setDelta($this, 0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touch = $this.$processor;
            if ($touch !== null) {
                if (!$this.$touched.data[0])
                    $touch.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $touch.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if (jl_String_equals($type, $rt_s(106))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cgxgbt_TeaInput_setDelta($this, $touchId, cgxgbt_TeaInput_getRelativeX($this, $touch_0, $this.$canvas) - $this.$touchX.data[$touchId] | 0, cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = cgxgbt_TeaInput_getRelativeX($this, $touch_0, $this.$canvas);
            $this.$touchY.data[$touchId] = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(107))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touch_0, $this.$canvas);
            $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(108))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touch_0, $this.$canvas);
            $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
},
cgxgbt_TeaInput_handleKeyboardEvents = ($this, $keyboardEvent) => {
    let $type, $c, var$4, $code, var$6, $keyChar;
    $type = $rt_str($keyboardEvent.type);
    if (!(jl_String_equals($type, $rt_s(109)) && $this.$hasFocus)) {
        if (jl_String_equals($type, $rt_s(110)) && $this.$hasFocus) {
            $c = $keyboardEvent.charCode & 65535;
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyTyped($c);
            if ($c == 9) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        } else if (jl_String_equals($type, $rt_s(111)) && $this.$hasFocus) {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            if (cbg_AbstractInput_isCatchKey($this, $code))
                $keyboardEvent.preventDefault();
            var$6 = $this.$pressedKeys.data;
            if (var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                var$6[$code] = 0;
            }
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyUp($code);
            if ($code == 61) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        }
    } else {
        a: {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if (cbg_AbstractInput_isCatchKey($this, $code))
            $keyboardEvent.preventDefault();
        if (!($code != 67 && $code != 112)) {
            $keyboardEvent.preventDefault();
            var$4 = $this.$processor;
            if (var$4 !== null) {
                var$4.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else {
            var$6 = $this.$pressedKeys.data;
            if (!var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
                var$6[$code] = 1;
                $this.$keyJustPressed = 1;
                $this.$justPressedKeys.data[$code] = 1;
                var$4 = $this.$processor;
                if (var$4 !== null)
                    var$4.$keyDown($code);
            }
        }
        if ($code == 61) {
            $keyboardEvent.preventDefault();
            $keyboardEvent.stopPropagation();
        }
    }
},
cgxgbt_TeaInput_getAvailablePointer = $this => {
    let $i, var$2, var$3, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        a: {
            b: {
                var$2 = $this.$touchMap;
                var$3 = jl_Integer_valueOf($i);
                var$4 = var$2.$valueTable1;
                if (var$3 !== null) {
                    if (var$2.$hasZeroValue) {
                        var$2 = var$2.$zeroValue;
                        if (jl_Integer_equals(var$3, var$2)) {
                            var$5 = 1;
                            break a;
                        }
                    }
                    var$4 = var$4.data;
                    var$5 = var$4.length - 1 | 0;
                    while (true) {
                        if (var$5 < 0)
                            break b;
                        var$2 = var$4[var$5];
                        if (jl_Integer_equals(var$3, var$2))
                            break;
                        var$5 = var$5 + (-1) | 0;
                    }
                    var$5 = 1;
                    break a;
                }
                if (var$2.$hasZeroValue && var$2.$zeroValue === null) {
                    var$5 = 1;
                    break a;
                }
                var$6 = var$4.data;
                var$4 = var$2.$keyTable1;
                var$5 = var$6.length - 1 | 0;
                while (true) {
                    if (var$5 < 0)
                        break b;
                    if (var$4.data[var$5] && var$6[var$5] === null)
                        break;
                    var$5 = var$5 + (-1) | 0;
                }
                var$5 = 1;
                break a;
            }
            var$5 = 0;
        }
        if (!var$5)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
cgxgbt_TeaInput_reset = $this => {
    let $i, var$2, $i_0;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedButtons.data;
                if ($i >= var$2.length)
                    break a;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedKeys.data;
                if ($i >= var$2.length)
                    break b;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    $i_0 = 0;
    while ($i_0 < $this.$touchX.data.length) {
        $this.$deltaX.data[$i_0] = 0;
        $this.$deltaY.data[$i_0] = 0;
        $i_0 = $i_0 + 1 | 0;
    }
},
cgxgbt_TeaInput_setDelta = ($this, $touchId, $x, $y) => {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
},
cgxgbt_TeaInput_getCompatMode = ($this, $element) => {
    if (jl_String_equals($rt_str($element.compatMode), $rt_s(112)))
        $element = $element.documentElement;
    return $element;
},
cgxgbt_TeaInput_getScrollTop = ($this, $target) => {
    return $target.scrollTop | 0;
},
cgxgbt_TeaInput_getScrollTop0 = ($this, $target) => {
    return cgxgbt_TeaInput_getScrollTop($this, cgxgbt_TeaInput_getCompatMode($this, $target));
},
cgxgbt_TeaInput_getScrollLeft = ($this, $target) => {
    return $target.scrollLeft | 0;
},
cgxgbt_TeaInput_getScrollLeft0 = ($this, $target) => {
    return cgxgbt_TeaInput_getScrollLeft($this, cgxgbt_TeaInput_getCompatMode($this, $target));
},
cgxgbt_TeaInput_getRelativeX0 = ($this, $e, $target) => {
    return jl_Math_round($target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target) * ((($e.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeY0 = ($this, $e, $target) => {
    return jl_Math_round($target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target) * ((($e.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeX = ($this, $touch, $target) => {
    return jl_Math_round($target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target) * ((($touch.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeY = ($this, $touch, $target) => {
    return jl_Math_round($target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target) * ((($touch.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getClientWidth = ($this, $target) => {
    return $target.clientWidth;
},
cgxgbt_TeaInput_getClientHeight = ($this, $target) => {
    return $target.clientHeight;
},
cgxgbt_TeaInput_getAbsoluteTop = ($this, $target) => {
    let var$2, var$3;
    var$2 = 0.0;
    var$3 = $target;
    while (var$3.offsetParent !== null) {
        var$2 = var$2 - var$3.scrollTop;
        var$3 = var$3.parentNode;
    }
    while ($target !== null) {
        var$2 = var$2 + $target.offsetTop;
        $target = var$3.offsetParent;
    }
    return var$2 | 0;
},
cgxgbt_TeaInput_getAbsoluteLeft = ($this, $target) => {
    let var$2, var$3;
    var$2 = 0.0;
    var$3 = $target;
    while (var$3.offsetParent !== null) {
        var$2 = var$2 - var$3.scrollLeft;
        var$3 = var$3.parentNode;
    }
    while ($target !== null) {
        var$2 = var$2 + $target.offsetLeft;
        $target = var$3.offsetParent;
    }
    return var$2 | 0;
},
cgxgbt_TeaInput_getX = $this => {
    return $this.$touchX.data[0];
},
cgxgbt_TeaInput_getY = $this => {
    return $this.$touchY.data[0];
},
cgxgbt_TeaInput_setInputProcessor = ($this, $processor) => {
    $this.$processor = $processor;
},
cgxgbt_TeaInput_isCursorCatched = $this => {
    return cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas) ? 1 : 0;
},
cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75 = var$1 => {
    if (document.pointerLockElement === canvas || document.mozPointerLockElement === canvas) {
        return true;
    }
    return false;
},
cgxgbt_TeaInput_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1;
    if (var$1.$application.$appListener !== null) {
        cgxgbt_TeaInput_handleMouseEvents(var$1, var$2);
        cgxgbt_TeaInput_handleKeyboardEvents(var$1, var$2);
    }
},
cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    let a = this; jl_Object.call(a);
    a.$internalStorage = null;
    a.$classpathStorage = null;
    a.$localStorage = null;
    a.$localStoragePrefix0 = null;
}
let cgxgbt_TeaFiles__init_ = ($this, $config, $teaApplication) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = new cgxgbtft_InternalStorage;
    cgxgbtf_MemoryFileStorage__init_(var$3);
    $this.$internalStorage = var$3;
    var$3 = new cgxgbtft_ClasspathStorage;
    cgxgbtf_MemoryFileStorage__init_(var$3);
    $this.$classpathStorage = var$3;
    var$4 = new cgxgbtft_LocalDBStorage;
    cgxgbtf_MemoryFileStorage__init_(var$4);
    var$4.$dataBase = null;
    if ($teaApplication !== null) {
        var$5 = $teaApplication.$config;
        $teaApplication.$delayInitCount = $teaApplication.$delayInitCount + 1 | 0;
        var$6 = indexedDB || mozIndexedDB || webkitIndexedDB || msIndexedDB;
        if (typeof var$6 === 'undefined' ? 1 : 0) {
            $teaApplication = new jl_IllegalStateException;
            jl_RuntimeException__init_($teaApplication, $rt_s(113));
            $rt_throw($teaApplication);
        }
        var$7 = var$5.$localStoragePrefix;
        var$5 = var$6.open($rt_ustr(var$7), 1);
        var$3 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0;
        var$3.$_05 = var$5;
        var$5.onupgradeneeded = otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent");
        var$3 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1;
        var$3.$_020 = var$4;
        var$3.$_17 = var$5;
        var$3.$_25 = $teaApplication;
        var$5.onsuccess = otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent");
        var$3 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2;
        var$3.$_018 = var$7;
        var$3.$_16 = $teaApplication;
        var$5.onerror = otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent");
    }
    $this.$localStorage = var$4;
    $this.$localStoragePrefix0 = $config.$localStoragePrefix;
},
cgxgbt_TeaFiles__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaFiles();
    cgxgbt_TeaFiles__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaFiles_getFileDB = ($this, $type) => {
    if ($type === cbg_Files$FileType_Internal)
        return $this.$internalStorage;
    if ($type === cbg_Files$FileType_Classpath)
        return $this.$classpathStorage;
    if ($type !== cbg_Files$FileType_Local)
        return null;
    return $this.$localStorage;
},
cgxgbt_TeaFiles_getFileHandle = ($this, $path, $type) => {
    let var$3;
    if ($type === cbg_Files$FileType_Internal)
        return cgxgbt_TeaFiles_internal($this, $path);
    var$3 = cbg_Files$FileType_Classpath;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    var$3 = cbg_Files$FileType_Local;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    $path = new cbgu_GdxRuntimeException;
    $type = jl_String_valueOf($type);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(114)), $type), $rt_s(115));
    jl_RuntimeException__init_($path, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw($path);
},
cgxgbt_TeaFiles_internal = ($this, $path) => {
    return cgxgbt_TeaFileHandle__init_($this, $path, cbg_Files$FileType_Internal);
};
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
let cgxgbt_TeaNet__init_0 = $this => {
    $this.$httpResponseListeners = ju_HashMap__init_1(16);
},
cgxgbt_TeaNet__init_ = () => {
    let var_0 = new cgxgbt_TeaNet();
    cgxgbt_TeaNet__init_0(var_0);
    return var_0;
},
cbg_ApplicationLogger = $rt_classWithoutFields(0),
cgxgbt_TeaApplicationLogger = $rt_classWithoutFields(),
cbgu_Clipboard = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard() {
    let a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
let cgxgbt_TeaClipboard__init_ = $this => {
    let var$1, var$2;
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    var$1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler;
    var$1.$this$01 = $this;
    $this.$writeHandler = var$1;
    $this.$content = $rt_s(8);
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_0;
    var$2.$_08 = $this;
    var$1.addEventListener("copy", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_1;
    var$2.$_024 = $this;
    var$1.addEventListener("cut", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_2;
    var$2.$_016 = $this;
    var$1.addEventListener("paste", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
},
cgxgbt_TeaClipboard__init_0 = () => {
    let var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_(var_0);
    return var_0;
},
cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4 = var$1 => {
    if ("clipboard" in navigator) {
        navigator.clipboard.writeText(var$1);
    }
},
cbg_Gdx = $rt_classWithoutFields(),
cbg_Gdx_app = null,
cbg_Gdx_graphics = null,
cbg_Gdx_audio = null,
cbg_Gdx_input = null,
cbg_Gdx_files = null,
cbg_Gdx_net = null,
cbg_Gdx_gl = null,
cbg_Gdx_gl20 = null,
cbg_Gdx_gl30 = null,
cbg_Audio = $rt_classWithoutFields(0),
cgxgbt_TeaAudio = $rt_classWithoutFields(0);
function cgxgbt_DefaultTeaAudio() {
    jl_Object.call(this);
    this.$webAudioAPIManager = null;
}
let cgxgbt_DefaultTeaAudio__init_ = $this => {
    $this.$webAudioAPIManager = null;
    $this.$webAudioAPIManager = new cgxgbtwh_HowlerAudioManager;
},
cgxgbt_DefaultTeaAudio__init_0 = () => {
    let var_0 = new cgxgbt_DefaultTeaAudio();
    cgxgbt_DefaultTeaAudio__init_(var_0);
    return var_0;
},
otjde_EventListener = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$02 = null;
}
let cgxgbt_TeaApplication$1__init_ = ($this, $this$0) => {
    $this.$this$02 = $this$0;
},
cgxgbt_TeaApplication$1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$1();
    cgxgbt_TeaApplication$1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1;
    var$2 = var$1.$this$02.$appListener;
    if (var$2 !== null) {
        dcg_Main_pause(var$2);
        dcg_Main_dispose(var$1.$this$02.$appListener);
        var$1.$this$02.$appListener = null;
    }
};
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$0 = null;
}
let cgxgbt_TeaApplication$2__init_ = ($this, $this$0) => {
    $this.$this$0 = $this$0;
},
cgxgbt_TeaApplication$2__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$2();
    cgxgbt_TeaApplication$2__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, $$je;
    var$1 = var$1;
    var$3 = var$1.$this$0;
    if (var$3.$initState === cgxgbt_TeaApplication$AppState_APP_LOOP) {
        var$3 = $rt_str((cgxgbtdi_TeaWindow_getDocument(var$3.$window)).visibilityState);
        if (jl_String_equals(var$3, $rt_s(116))) {
            var$2 = var$1.$this$0.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$2);
            a: {
                b: {
                    try {
                        var$3 = cbgu_Array_iterator(var$2);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;
                        break b;

                    }
                    var$4 = var$3;
                    while (true) {
                        try {
                            if (!cbgu_Array$ArrayIterator_hasNext(var$4))
                                break;
                            (cbgu_Array$ArrayIterator_next(var$4)).$pause();
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$1 = $$je;
                            break b;

                        }
                    }
                    try {
                        jl_Object_monitorExitSync(var$2);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;

                    }
                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw(var$1);
            }
            dcg_Main_pause(var$1.$this$0.$appListener);
        } else if (jl_String_equals(var$3, $rt_s(117))) {
            var$2 = var$1.$this$0.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$2);
            c: {
                d: {
                    try {
                        var$3 = cbgu_Array_iterator(var$2);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;
                        break d;

                    }
                    var$4 = var$3;
                    while (true) {
                        try {
                            if (!cbgu_Array$ArrayIterator_hasNext(var$4))
                                break;
                            (cbgu_Array$ArrayIterator_next(var$4)).$resume();
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$1 = $$je;
                            break d;

                        }
                    }
                    try {
                        jl_Object_monitorExitSync(var$2);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;

                    }
                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw(var$1);
            }
            dcg_Main_resume(var$1.$this$0.$appListener);
        }
    }
};
function cgxgbt_TeaApplication$3() {
    jl_Object.call(this);
    this.$this$00 = null;
}
let cgxgbt_TeaApplication$3__init_ = ($this, $this$0) => {
    $this.$this$00 = $this$0;
},
cgxgbt_TeaApplication$3__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$3();
    cgxgbt_TeaApplication$3__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$3_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    var$3 = cgxgbtdi_TeaWindow_getClientWidth(var$1.$this$00.$window);
    var$2 = var$1.$this$00;
    var$3 = var$3 - var$2.$config.$padHorizontal | 0;
    var$4 = cgxgbtdi_TeaWindow_getClientHeight(var$2.$window);
    var$1 = var$1.$this$00;
    var$2 = var$1.$config;
    var$4 = var$4 - var$2.$padVertical | 0;
    if (var$3 > 0 && var$4 > 0) {
        var$1 = var$1.$graphics;
        if (var$1 !== null)
            cgxgbt_TeaGraphics_setCanvasSize(var$1, var$3, var$4, var$2.$usePhysicalPixels);
    }
};
function cbgu_Pool() {
    let a = this; jl_Object.call(a);
    a.$max2 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
let cbgu_Pool__init_ = ($this, $initialCapacity, $max) => {
    $this.$freeObjects = cbgu_Array__init_3(0, $initialCapacity);
    $this.$max2 = $max;
},
cbgu_Pool_obtain = $this => {
    let var$1, var$2, var$3, var$4, $$je;
    a: {
        var$1 = $this.$freeObjects;
        if (var$1.$size0)
            var$1 = cbgu_Array_pop(var$1);
        else {
            var$2 = $this;
            try {
                var$1 = cbgur_Constructor_newInstance(var$2.$constructor, null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    var$4 = $$je;
                    var$3 = new cbgu_GdxRuntimeException;
                    var$1 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$1);
                    jl_AbstractStringBuilder_append(var$1, $rt_s(118));
                    jl_AbstractStringBuilder_append(var$1, jl_Class_getName(cbgur_Constructor_getDeclaringClass(var$2.$constructor)));
                    jl_Throwable__init_(var$3, jl_AbstractStringBuilder_toString(var$1), var$4);
                    $rt_throw(var$3);
                } else {
                    throw $$e;
                }
            }
        }
    }
    return var$1;
},
cbgu_Pool_free = ($this, $object) => {
    let var$2;
    if ($object === null) {
        $object = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($object, $rt_s(119));
        $rt_throw($object);
    }
    var$2 = $this.$freeObjects;
    if (var$2.$size0 >= $this.$max2)
        cbgu_Pool_reset($this, $object);
    else {
        cbgu_Array_add(var$2, $object);
        $this.$peak = jl_Math_max($this.$peak, $this.$freeObjects.$size0);
        cbgu_Pool_reset($this, $object);
    }
},
cbgu_Pool_reset = ($this, $object) => {
    if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset();
},
cbgu_Pool_discard = ($this, $object) => {
    cbgu_Pool_reset($this, $object);
},
cbgu_Pool_freeAll = ($this, $objects) => {
    let $freeObjects, $max, $i, $n, $object;
    if ($objects === null) {
        $objects = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($objects, $rt_s(120));
        $rt_throw($objects);
    }
    $freeObjects = $this.$freeObjects;
    $max = $this.$max2;
    $i = 0;
    $n = $objects.$size0;
    while ($i < $n) {
        $object = cbgu_Array_get($objects, $i);
        if ($object !== null) {
            if ($freeObjects.$size0 >= $max)
                cbgu_Pool_reset($this, $object);
            else {
                cbgu_Array_add($freeObjects, $object);
                cbgu_Pool_reset($this, $object);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max($this.$peak, $freeObjects.$size0);
};
function cbgu_ReflectionPool() {
    cbgu_Pool.call(this);
    this.$constructor = null;
}
let jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException),
jl_IndexOutOfBoundsException__init_ = ($this, $message) => {
    jl_RuntimeException__init_($this, $message);
},
jl_IndexOutOfBoundsException__init_0 = var_0 => {
    let var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_(var_1, var_0);
    return var_1;
},
cbgu_ObjectSet = $rt_classWithoutFields(),
cbgu_ObjectSet_tableSize = ($capacity, $loadFactor) => {
    let var$3, var$4, $tableSize;
    if ($capacity < 0) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, $rt_s(121));
        jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$4, $capacity)));
        $rt_throw(var$3);
    }
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(jl_Math_max(2, jl_Math_ceil($capacity / $loadFactor) | 0));
    if ($tableSize <= 1073741824)
        return $tableSize;
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append(var$4, $rt_s(122));
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$4, $capacity)));
    $rt_throw(var$3);
},
jl_Long = $rt_classWithoutFields(jl_Number),
jl_Long_TYPE = null,
jl_Long_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    $i = Long_shru(var$3, 16);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru($i, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 8;
    $i = Long_shru(var$3, 4);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru($i, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_divideUnsigned = (var$1, var$2) => {
    return Long_udiv(var$1, var$2);
},
jl_Long_remainderUnsigned = (var$1, var$2) => {
    return Long_urem(var$1, var$2);
},
jl_Long_compareUnsigned = (var$1, var$2) => {
    return Long_ucompare(var$1, var$2);
},
jl_Long__clinit_ = () => {
    jl_Long_TYPE = $rt_cls($rt_longcls);
},
cgxgbtg_WebGLContextAttributesWrapper = $rt_classWithoutFields(),
cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14 = () => {
    return {  };
},
cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    let a = this; jl_Object.call(a);
    a.$gl = null;
    a.$programs = null;
    a.$shaders = null;
    a.$buffers = null;
    a.$frameBuffers = null;
    a.$renderBuffers = null;
    a.$textures = null;
    a.$uniforms0 = null;
    a.$currProgram = 0;
}
let cgxgbt_TeaGL20__init_ = ($this, $gl) => {
    $this.$programs = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$shaders = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$buffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$frameBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$renderBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$textures = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$uniforms0 = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$currProgram = 0;
    $this.$gl = $gl;
    $gl.pixelStorei(37441, 0);
},
cgxgbt_TeaGL20__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL20_getUniformLocation = ($this, $location) => {
    return cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $this.$currProgram), $location);
},
cgxgbt_TeaGL20_glActiveTexture = ($this, $texture) => {
    $this.$gl.activeTexture($texture);
},
cgxgbt_TeaGL20_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
},
cgxgbt_TeaGL20_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer);
    var$3.bindBuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture);
    var$3.bindTexture($target, var$4);
},
cgxgbt_TeaGL20_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
},
cgxgbt_TeaGL20_glBufferData = ($this, $target, $size, $data, $usage) => {
    let $typedArray;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
        $this.$gl.bufferData($target, $typedArray, $usage);
    }
},
cgxgbt_TeaGL20_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let $typedArray;
    $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
    $this.$gl.bufferSubData($target, $offset, $typedArray);
},
cgxgbt_TeaGL20_glClear = ($this, $mask) => {
    $this.$gl.clear($mask);
},
cgxgbt_TeaGL20_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
},
cgxgbt_TeaGL20_glCompileShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
},
cgxgbt_TeaGL20_glCreateProgram = $this => {
    let $program;
    $program = $this.$gl.createProgram();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, $program);
},
cgxgbt_TeaGL20_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = $this.$gl.createShader($type);
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, $shader);
},
cgxgbt_TeaGL20_glDeleteTexture = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$textures, $id);
    $this.$gl.deleteTexture(var$2);
},
cgxgbt_TeaGL20_glDepthMask = ($this, $flag) => {
    $this.$gl.depthMask(!!$flag);
},
cgxgbt_TeaGL20_glDisable = ($this, $cap) => {
    $this.$gl.disable($cap);
},
cgxgbt_TeaGL20_glDisableVertexAttribArray = ($this, $index) => {
    $this.$gl.disableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glDrawArrays = ($this, $mode, $first, $count) => {
    $this.$gl.drawArrays($mode, $first, $count);
},
cgxgbt_TeaGL20_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6;
    var$5 = $this.$gl;
    var$6 = $indices.$position0;
    var$5.drawElements($mode, $count, $type, var$6);
},
cgxgbt_TeaGL20_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    $this.$gl.drawElements($mode, $count, $type, $indices);
},
cgxgbt_TeaGL20_glEnable = ($this, $cap) => {
    $this.$gl.enable($cap);
},
cgxgbt_TeaGL20_glEnableVertexAttribArray = ($this, $index) => {
    $this.$gl.enableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glGenBuffer = $this => {
    let $buffer;
    $buffer = $this.$gl.createBuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$buffers, $buffer);
},
cgxgbt_TeaGL20_glGenerateMipmap = ($this, $target) => {
    $this.$gl.generateMipmap($target);
},
cgxgbt_TeaGL20_glGenTexture = $this => {
    let $texture;
    $texture = $this.$gl.createTexture();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$textures, $texture);
},
cgxgbt_TeaGL20_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveAttrib(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveUniform(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetAttribLocation = ($this, $program, $name) => {
    let var$3;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    return $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
},
cgxgbt_TeaGL20_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938) {
        $params = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($params, $rt_s(123));
        $rt_throw($params);
    }
    var$3 = $this.$gl.getParameter($pname);
    jn_FloatBufferImpl_put($params, 0, var$3);
},
cgxgbt_TeaGL20_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4, var$5;
    a: {
        b: {
            if ($pname == 34016)
                break b;
            if ($pname == 3413)
                break b;
            if ($pname == 32970)
                break b;
            if ($pname == 32968)
                break b;
            if ($pname == 34877)
                break b;
            if ($pname == 32777)
                break b;
            if ($pname == 32971)
                break b;
            if ($pname == 32969)
                break b;
            if ($pname == 3412)
                break b;
            if ($pname == 2885)
                break b;
            if ($pname == 3414)
                break b;
            if ($pname == 2932)
                break b;
            if ($pname == 2886)
                break b;
            if ($pname == 33170)
                break b;
            if ($pname == 3411)
                break b;
            if ($pname == 35739)
                break b;
            if ($pname == 35738)
                break b;
            if ($pname == 35661)
                break b;
            if ($pname == 34076)
                break b;
            if ($pname == 36349)
                break b;
            if ($pname == 34024)
                break b;
            if ($pname == 34930)
                break b;
            if ($pname == 3379)
                break b;
            if ($pname == 36348)
                break b;
            if ($pname == 34921)
                break b;
            if ($pname == 35660)
                break b;
            if ($pname == 36347)
                break b;
            if ($pname == 34466)
                break b;
            if ($pname == 3333)
                break b;
            if ($pname == 3410)
                break b;
            if ($pname == 32936)
                break b;
            if ($pname == 32937)
                break b;
            if ($pname == 34817)
                break b;
            if ($pname == 34816)
                break b;
            if ($pname == 34818)
                break b;
            if ($pname == 34819)
                break b;
            if ($pname == 36003)
                break b;
            if ($pname == 36004)
                break b;
            if ($pname == 36005)
                break b;
            if ($pname == 3415)
                break b;
            if ($pname == 2961)
                break b;
            if ($pname == 2964)
                break b;
            if ($pname == 2962)
                break b;
            if ($pname == 2965)
                break b;
            if ($pname == 2966)
                break b;
            if ($pname == 2967)
                break b;
            if ($pname == 2963)
                break b;
            if ($pname == 2968)
                break b;
            if ($pname == 3408)
                break b;
            if ($pname != 3317) {
                if ($pname != 2978) {
                    if ($pname != 36006) {
                        $params = new cbgu_GdxRuntimeException;
                        jl_RuntimeException__init_($params, $rt_s(124));
                        $rt_throw($params);
                    }
                    var$3 = $this.$gl.getParameter($pname);
                    if (var$3 === null)
                        jn_IntBufferImpl_put($params, 0, 0);
                    else {
                        var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$3);
                        jn_IntBufferImpl_put($params, 0, var$4);
                    }
                    break a;
                }
                var$5 = $this.$gl.getParameter($pname);
                var$4 = var$5[0];
                $params = $params;
                jn_IntBufferImpl_put($params, 0, var$4);
                jn_IntBufferImpl_put($params, 1, var$5[1]);
                jn_IntBufferImpl_put($params, 2, var$5[2]);
                jn_IntBufferImpl_put($params, 3, var$5[3]);
                break a;
            }
        }
        $pname = $this.$gl.getParameter($pname);
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetProgramInfoLog = ($this, $program) => {
    return $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
},
cgxgbt_TeaGL20_glGetProgramiv = ($this, $program, $pname, $params) => {
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        $program = $this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname);
        jn_IntBufferImpl_put($params, 0, $program);
    } else {
        $pname = !($this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetShaderInfoLog = ($this, $shader) => {
    return $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
},
cgxgbt_TeaGL20_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let $result;
    if ($pname != 35713 && $pname != 35712) {
        $result = $this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname);
        jn_IntBufferImpl_put($params, 0, $result);
    } else {
        $pname = !($this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL20_glGetUniformLocation = ($this, $program, $name) => {
    let $location;
    $location = $this.$gl.getUniformLocation(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $rt_ustr($name));
    if ($location === null)
        return (-1);
    $name = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $program);
    if ($name === null) {
        $name = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
        $this.$uniforms0[$program] = $name;
    }
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($name, $location);
},
cgxgbt_TeaGL20_glLinkProgram = ($this, $program) => {
    let var$2, var$3;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.linkProgram(var$3);
},
cgxgbt_TeaGL20_glPixelStorei = ($this, $pname, $param) => {
    $this.$gl.pixelStorei($pname, $param);
},
cgxgbt_TeaGL20_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    var$3.shaderSource(var$4, $rt_ustr($source));
},
cgxgbt_TeaGL20_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let $arrayBuffer;
    if ($pixels === null) {
        $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, null);
        return;
    }
    $arrayBuffer = $type == 5121 ? cgxgbtdt_TypedArrays_getUint8Array($pixels) : $type != 5123 && $type != 33635 && $type != 32819 ? ($type != 5126 ? cgxgbtdt_TypedArrays_getTypedArray($pixels) : cgxgbtdt_TypedArrays_getFloat32Array($pixels)) : cgxgbtdt_TypedArrays_getUint16Array($pixels);
    $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $arrayBuffer);
},
cgxgbt_TeaGL20_glTexSubImage2D = ($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels) => {
    let $arrayBuffer;
    $arrayBuffer = $type == 5121 ? cgxgbtdt_TypedArrays_getUint8Array($pixels) : $type != 5123 && $type != 33635 && $type != 32819 ? ($type != 5126 ? cgxgbtdt_TypedArrays_getTypedArray($pixels) : cgxgbtdt_TypedArrays_getFloat32Array($pixels)) : cgxgbtdt_TypedArrays_getUint16Array($pixels);
    $this.$gl.texSubImage2D($target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $arrayBuffer);
},
cgxgbt_TeaGL20_glTexParameterf = ($this, $target, $pname, $param) => {
    $this.$gl.texParameterf($target, $pname, $param);
},
cgxgbt_TeaGL20_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
},
cgxgbt_TeaGL20_glUniform1i = ($this, $location, $x) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1i($loc, $x);
},
cgxgbt_TeaGL20_glUniformMatrix4fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniformMatrix4fv($loc, !!$transpose, $value.data);
},
cgxgbt_TeaGL20_glUseProgram = ($this, $program) => {
    let var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.useProgram(var$3);
},
cgxgbt_TeaGL20_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
},
cgxgbt_TeaGL20_glViewport = ($this, $x, $y, $width, $height) => {
    $this.$gl.viewport($x, $y, $width, $height);
};
let cbgg_GL30 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL30() {
    let a = this; cgxgbt_TeaGL20.call(a);
    a.$gl0 = null;
    a.$queries = null;
    a.$samplers = null;
    a.$feedbacks = null;
    a.$vertexArrays = null;
}
let cgxgbt_TeaGL30__init_ = ($this, $gl) => {
    cgxgbt_TeaGL20__init_($this, $gl);
    $this.$queries = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$samplers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$feedbacks = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$vertexArrays = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$gl0 = $gl;
},
cgxgbt_TeaGL30__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL30();
    cgxgbt_TeaGL30__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL30_glBindVertexArray = ($this, $array) => {
    let var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $array);
    var$2.bindVertexArray(var$3);
},
cgxgbt_TeaGL30_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
},
cgxgbt_TeaGL30_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
},
cgxgbt_TeaGL30_glGenVertexArrays = ($this, $n, $ids) => {
    let $i, var$4, $vArray;
    $i = 0;
    var$4 = $ids;
    while ($i < $n) {
        $vArray = $this.$gl0.createVertexArray();
        jn_IntBufferImpl_put(var$4, $i, cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$vertexArrays, $vArray));
        $i = $i + 1 | 0;
    }
},
cgxgbt_TeaGL30_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 34045)
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    else {
        var$3 = $this.$gl0.getParameter($pname);
        jn_FloatBufferImpl_put($params, 0, var$3);
    }
},
cgxgbt_TeaGL30_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4;
    switch ($pname) {
        case 3074:
        case 3314:
        case 3315:
        case 3316:
        case 3330:
        case 3331:
        case 3332:
        case 32877:
        case 32878:
        case 32883:
        case 33000:
        case 33001:
        case 34852:
        case 34853:
        case 34854:
        case 34855:
        case 34856:
        case 34857:
        case 34858:
        case 34859:
        case 34860:
        case 34861:
        case 34862:
        case 34863:
        case 35071:
        case 35076:
        case 35077:
        case 35371:
        case 35373:
        case 35375:
        case 35657:
        case 35658:
        case 35659:
        case 35723:
        case 35968:
        case 35978:
        case 35979:
        case 36063:
        case 36183:
        case 37154:
        case 37157:
            $pname = $this.$gl0.getParameter($pname);
            jn_IntBufferImpl_put($params, 0, $pname);
            return;
        case 32874:
        case 35869:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$textures, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        case 34229:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$vertexArrays, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        case 36006:
        case 36010:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        default:
    }
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
},
cgxgbt_TeaGL30Debug = $rt_classWithoutFields(cgxgbt_TeaGL30),
cgxgbt_TeaGL30Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl0.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(125)), var$1), $rt_s(20)), var$3);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glBindVertexArray = ($this, $array) => {
    cgxgbt_TeaGL30_glBindVertexArray($this, $array);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenVertexArrays = ($this, $n, $ids) => {
    cgxgbt_TeaGL30_glGenVertexArrays($this, $n, $ids);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL30Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexSubImage2D = ($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexSubImage2D($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL30Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL30Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL30Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL30Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL30Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
};
let cgxgbt_TeaGL30Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL30Debug_checkError($this);
};
function cbggg_GLVersion() {
    let a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$versionString = null;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type1 = null;
    a.$TAG = $rt_s(91);
}
let cbggg_GLVersion_extractVersion = ($this, $patternString, $versionString) => {
    let $matcher, $pattern, $resultSplit, $found;
    $matcher = jur_Pattern_matcher(jur_Pattern_compile($patternString), $versionString);
    if (!jur_Matcher_find($matcher)) {
        $pattern = cbg_Gdx_app;
        $patternString = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($patternString);
        jl_AbstractStringBuilder_append($patternString, $rt_s(126));
        jl_AbstractStringBuilder_append($patternString, $versionString);
        $versionString = jl_AbstractStringBuilder_toString($patternString);
        cgxgbt_TeaApplication_log($pattern, $rt_s(91), $versionString);
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    } else {
        $resultSplit = (jl_String_split(jur_Matcher_group($matcher, 1), $rt_s(127))).data;
        $this.$majorVersion = cbggg_GLVersion_parseInt($this, $resultSplit[0], 2);
        $found = $resultSplit.length;
        $this.$minorVersion = $found < 2 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[1], 0);
        $this.$releaseVersion = $found < 3 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[2], 0);
    }
},
cbggg_GLVersion_parseInt = ($this, $v, $defaultValue) => {
    let var$3, var$4, var$5, var$6, var$7, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt0($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    var$4 = cbg_Gdx_app;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $rt_s(128));
    jl_AbstractStringBuilder_append(var$5, $v);
    jl_AbstractStringBuilder_append(var$5, $rt_s(129));
    var$6 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$5, $defaultValue));
    if (var$4.$logLevel >= 1) {
        $v = jl_System_err();
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(130)), $rt_s(25)), var$6);
        var$7 = jl_AbstractStringBuilder_toString(var$5);
        otcic_JsConsolePrintStream_println($v, var$7);
    }
    return $defaultValue;
},
cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum),
cbg_Application$ApplicationType_Android = null,
cbg_Application$ApplicationType_Desktop = null,
cbg_Application$ApplicationType_HeadlessDesktop = null,
cbg_Application$ApplicationType_Applet = null,
cbg_Application$ApplicationType_WebGL = null,
cbg_Application$ApplicationType_iOS = null,
cbg_Application$ApplicationType_$VALUES = null,
cbg_Application$ApplicationType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(131), 0);
    cbg_Application$ApplicationType_Android = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(132), 1);
    cbg_Application$ApplicationType_Desktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(133), 2);
    cbg_Application$ApplicationType_HeadlessDesktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(134), 3);
    cbg_Application$ApplicationType_Applet = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(135), 4);
    cbg_Application$ApplicationType_WebGL = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(136), 5);
    cbg_Application$ApplicationType_iOS = var$1;
    var$2 = $rt_createArray(cbg_Application$ApplicationType, 6);
    var$3 = var$2.data;
    var$3[0] = cbg_Application$ApplicationType_Android;
    var$3[1] = cbg_Application$ApplicationType_Desktop;
    var$3[2] = cbg_Application$ApplicationType_HeadlessDesktop;
    var$3[3] = cbg_Application$ApplicationType_Applet;
    var$3[4] = cbg_Application$ApplicationType_WebGL;
    var$3[5] = var$1;
    cbg_Application$ApplicationType_$VALUES = var$2;
},
cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$022 = null;
}
let cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0 = var$1 => {
    var$1;
},
cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20),
cgxgbt_TeaGL20Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(125)), var$1), $rt_s(20)), var$3);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL20Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexSubImage2D = ($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexSubImage2D($this, $target, $level, $xoffset, $yoffset, $width, $height, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL20Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL20Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL20Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL20Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL20Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL20Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL20Debug_checkError($this);
},
ju_Collection = $rt_classWithoutFields(0),
ju_Collection_stream = $this => {
    let var$1, var$2;
    var$1 = new jusi_StreamOverSpliterator;
    var$2 = new jusi_SpliteratorOverCollection;
    var$2.$collection = $this;
    var$1.$spliterator = var$2;
    return var$1;
},
ju_AbstractCollection = $rt_classWithoutFields(),
ju_Set = $rt_classWithoutFields(0);
let ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection);
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
function cbgu_IntMap() {
    let a = this; jl_Object.call(a);
    a.$size8 = 0;
    a.$keyTable1 = null;
    a.$valueTable1 = null;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
    a.$shift1 = 0;
    a.$mask1 = 0;
}
let cbgu_IntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift1));
},
cbgu_IntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable1;
    $i = cbgu_IntMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    return $i;
},
cbgu_IntMap_put = ($this, $key, $value) => {
    let $oldValue, $i, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size8 = $this.$size8 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i >= 0) {
        var$5 = $this.$valueTable1.data;
        $oldValue = var$5[$i];
        var$5[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$5 = $this.$keyTable1.data;
    var$5[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
    $key = $this.$size8 + 1 | 0;
    $this.$size8 = $key;
    if ($key >= $this.$threshold0)
        a: {
            $key = var$5.length;
            $i = $key << 1;
            $this.$threshold0 = $i * $this.$loadFactor0 | 0;
            var$6 = $i - 1 | 0;
            $this.$mask1 = var$6;
            $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$6));
            var$5 = $this.$keyTable1;
            var$7 = $this.$valueTable1;
            $this.$keyTable1 = $rt_createIntArray($i);
            $this.$valueTable1 = $rt_createArray(jl_Object, $i);
            if ($this.$size8 > 0) {
                var$6 = 0;
                while (true) {
                    if (var$6 >= $key)
                        break a;
                    var$8 = var$5.data[var$6];
                    if (var$8) {
                        $value = var$7.data[var$6];
                        var$9 = $this.$keyTable1;
                        var$10 = cbgu_IntMap_place($this, var$8);
                        while (true) {
                            var$11 = var$9.data;
                            if (!var$11[var$10])
                                break;
                            var$10 = (var$10 + 1 | 0) & $this.$mask1;
                        }
                        var$11[var$10] = var$8;
                        $this.$valueTable1.data[var$10] = $value;
                    }
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
    return null;
},
cbgu_IntMap_get = ($this, $key) => {
    let $i;
    if (!$key)
        return !$this.$hasZeroValue ? null : $this.$zeroValue;
    $i = cbgu_IntMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable1.data[$i];
},
cbgu_IntMap_remove = ($this, $key) => {
    let $oldValue, $i, $keyTable, $valueTable, $oldValue_0, $mask, $next, var$9, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $this.$hasZeroValue = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size8 = $this.$size8 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable1;
    $valueTable = $this.$valueTable1.data;
    $oldValue_0 = $valueTable[$i];
    $mask = $this.$mask1;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        $key = var$9[$next];
        if (!$key)
            break;
        $placement = cbgu_IntMap_place($this, $key);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = $key;
            $valueTable[$i] = $valueTable[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = 0;
    $valueTable[$i] = null;
    $this.$size8 = $this.$size8 - 1 | 0;
    return $oldValue_0;
};
function cbgu_IntSet() {
    let a = this; jl_Object.call(a);
    a.$size4 = 0;
    a.$keyTable2 = null;
    a.$hasZeroValue1 = 0;
    a.$loadFactor4 = 0.0;
    a.$threshold1 = 0;
    a.$shift0 = 0;
    a.$mask0 = 0;
}
let cbgu_IntSet__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor4 = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold1 = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask0 = var$2;
    $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable2 = $rt_createIntArray(var$1);
},
cbgu_IntSet__init_ = () => {
    let var_0 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_0);
    return var_0;
},
cbgu_IntSet_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift0));
},
cbgu_IntSet_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable2;
    $i = cbgu_IntSet_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    return $i;
},
cbgu_IntSet_add = ($this, $key) => {
    let $i, var$3, var$4, var$5, var$6, var$7;
    if (!$key) {
        if ($this.$hasZeroValue1)
            return 0;
        $this.$hasZeroValue1 = 1;
        $this.$size4 = $this.$size4 + 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i >= 0)
        return 0;
    $i =  -($i + 1 | 0) | 0;
    var$3 = $this.$keyTable2.data;
    var$3[$i] = $key;
    $key = $this.$size4 + 1 | 0;
    $this.$size4 = $key;
    if ($key >= $this.$threshold1)
        a: {
            $key = var$3.length;
            $i = $key << 1;
            $this.$threshold1 = $i * $this.$loadFactor4 | 0;
            var$4 = $i - 1 | 0;
            $this.$mask0 = var$4;
            $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$4));
            var$3 = $this.$keyTable2;
            $this.$keyTable2 = $rt_createIntArray($i);
            if ($this.$size4 > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $key)
                        break a;
                    var$4 = var$3.data[$i];
                    if (var$4) {
                        var$5 = $this.$keyTable2;
                        var$6 = cbgu_IntSet_place($this, var$4);
                        while (true) {
                            var$7 = var$5.data;
                            if (!var$7[var$6])
                                break;
                            var$6 = (var$6 + 1 | 0) & $this.$mask0;
                        }
                        var$7[var$6] = var$4;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    return 1;
},
cbgu_IntSet_remove = ($this, $key) => {
    let $i, $keyTable, $mask, $next, var$6, var$7, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue1)
            return 0;
        $this.$hasZeroValue1 = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i < 0)
        return 0;
    $keyTable = $this.$keyTable2;
    $mask = $this.$mask0;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$6 = $keyTable.data;
        var$7 = var$6[$next];
        if (!var$7)
            break;
        $placement = cbgu_IntSet_place($this, var$7);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = var$7;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size4 = $this.$size4 - 1 | 0;
    return 1;
},
cgxgbtf_FileDB = $rt_classWithoutFields();
function cgxgbtf_MemoryFileStorage() {
    let a = this; cgxgbtf_FileDB.call(a);
    a.$fileMap = null;
    a.$tmpPaths = null;
    a.$debug = 0;
}
let cgxgbtf_MemoryFileStorage__init_ = $this => {
    $this.$tmpPaths = cbgu_Array__init_();
    $this.$debug = 0;
    $this.$fileMap = cbgu_OrderedMap__init_();
},
cgxgbtf_MemoryFileStorage__init_0 = () => {
    let var_0 = new cgxgbtf_MemoryFileStorage();
    cgxgbtf_MemoryFileStorage__init_(var_0);
    return var_0;
},
cgxgbtf_MemoryFileStorage_read = ($this, $file) => {
    let $path, $data, $byteArray, $e, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $$je;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, $path);
    if ($data === null)
        return null;
    $byteArray = $data.$bytes;
    a: {
        try {
            $file = ji_ByteArrayInputStream__init_0($byteArray);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $file;
    }
    var$6 = $this.$fileMap;
    cbgu_Array_removeValue(var$6.$keys, $path, 0);
    var$7 = cbgu_ObjectMap_locateKey(var$6, $path);
    if (var$7 < 0)
        $file = null;
    else {
        $byteArray = var$6.$keyTable;
        var$8 = var$6.$valueTable.data;
        $file = var$8[var$7];
        var$9 = var$6.$mask2;
        var$10 = (var$7 + 1 | 0) & var$9;
        while (true) {
            var$11 = $byteArray.data;
            $data = var$11[var$10];
            if ($data === null)
                break;
            var$12 = cbgu_ObjectMap_place(var$6, $data);
            if (((var$10 - var$12 | 0) & var$9) > ((var$7 - var$12 | 0) & var$9)) {
                var$11[var$7] = $data;
                var$8[var$7] = var$8[var$10];
                var$7 = var$10;
            }
            var$10 = (var$10 + 1 | 0) & var$9;
        }
        var$11[var$7] = null;
        var$8[var$7] = null;
        var$6.$size7 = var$6.$size7 - 1 | 0;
    }
    var$13 = $file;
    if ($this.$debug) {
        $data = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($data);
        jl_AbstractStringBuilder_append0($data, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($data, $path), 34);
        var$14 = jl_AbstractStringBuilder_toString($data);
        var$6 = var$13 !== null && cgxgbtf_FileData_isDirectory(var$13) ? $rt_s(137) : $rt_s(138);
        var$15 = jl_System_out();
        $data = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$7 = var$13 === null ? 0 : 1;
        $file = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($file);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append($file, $data), var$6), var$7), $rt_s(139)), var$14);
        $data = jl_AbstractStringBuilder_toString($file);
        otcic_JsConsolePrintStream_println(var$15, $data);
    }
    if (var$13 !== null)
        $this.$removeFile($path);
    $file = new cbgu_GdxRuntimeException;
    $data = jl_Class_getSimpleName(jl_Object_getClass($this));
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $data), $rt_s(140)), $path);
    jl_Throwable__init_($file, jl_AbstractStringBuilder_toString(var$6), $e);
    $rt_throw($file);
},
cgxgbtf_MemoryFileStorage_writeInternal = ($this, $file, $data, $append, $expectedLength) => {
    let $path, $oldData, var$7, var$8, $newSize, $oldBytes, $i, $j, $cur, $parentPath;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $oldData = cbgu_ObjectMap_get($this.$fileMap, $path);
    if ($append && $oldData !== null) {
        var$7 = $data.data;
        var$8 = $oldData.$bytes.data;
        $append = var$7.length;
        $expectedLength = var$8.length;
        $newSize = $append + $expectedLength | 0;
        $data = $rt_createByteArray($newSize);
        $oldBytes = $data.data;
        $i = 0;
        while ($i < $expectedLength) {
            $oldBytes[$i] = var$8[$i];
            $i = $i + 1 | 0;
        }
        $j = 0;
        while ($expectedLength < $newSize) {
            $oldBytes[$expectedLength] = var$7[$j];
            $expectedLength = $expectedLength + 1 | 0;
            $j = $j + 1 | 0;
        }
    }
    cgxgbtf_MemoryFileStorage_putFileInternal($this, $path, $data, 1);
    $cur = cgxgbt_TeaFileHandle_parent($file);
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $oldData = $cur;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $oldData.$file);
        if (!cbgu_ObjectMap_containsKey($this.$fileMap, $parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = cgxgbt_TeaFileHandle_parent($oldData);
    }
},
cgxgbtf_MemoryFileStorage_mkdirs = ($this, $file) => {
    let $cur, $path, $parentPath;
    cgxgbtf_MemoryFileStorage_putFolderInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file));
    $cur = cgxgbt_TeaFileHandle_parent($file);
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $path = $cur;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $path.$file);
        if (!cbgu_ObjectMap_containsKey($this.$fileMap, $parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = cgxgbt_TeaFileHandle_parent($path);
    }
},
cgxgbtf_MemoryFileStorage_exists = ($this, $file) => {
    let $path, var$3, var$4, var$5, var$6;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    if (cgxgbtf_MemoryFileStorage_isRootFolder($this, $file))
        return 1;
    $file = cbgu_ObjectMap_get($this.$fileMap, $path);
    var$3 = $file === null ? 0 : 1;
    if ($this.$debug) {
        $file = $file !== null && cgxgbtf_FileData_isDirectory($file) ? $rt_s(141) : $rt_s(142);
        var$4 = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $file), var$3), $rt_s(139)), $path);
        $file = jl_AbstractStringBuilder_toString(var$6);
        otcic_JsConsolePrintStream_println(var$4, $file);
    }
    return var$3;
},
cgxgbtf_MemoryFileStorage_length = ($this, $file) => {
    let $data;
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file));
    if ($data !== null && !cgxgbtf_FileData_isDirectory($data))
        return Long_fromInt($data.$bytes.data.length);
    return Long_ZERO;
},
cgxgbtf_MemoryFileStorage_isRootFolder = ($this, $cur) => {
    let $path;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $cur.$file);
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(143)) && !jl_String_equals($path, $rt_s(83)) && !jl_String_equals($path, $rt_s(144)))
        return 0;
    return 1;
},
cgxgbtf_MemoryFileStorage_putFile = ($this, $key, $data) => {
    return;
},
cgxgbtf_MemoryFileStorage_removeFile = ($this, $key) => {
    return;
},
cgxgbtf_MemoryFileStorage_getInternal = ($this, $path) => {
    let $fileData, $type, var$4, var$5, var$6, var$7, var$8, var$9;
    $fileData = cbgu_ObjectMap_get($this.$fileMap, $path);
    if ($this.$debug) {
        $type = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($type);
        jl_AbstractStringBuilder_append0($type, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($type, $path), 34);
        var$4 = jl_AbstractStringBuilder_toString($type);
        $type = $fileData !== null && cgxgbtf_FileData_isDirectory($fileData) ? $rt_s(145) : $rt_s(146);
        $path = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$6 = $fileData === null ? 0 : 1;
        if ($fileData === null)
            var$7 = 0;
        else {
            var$8 = $fileData.$bytes;
            var$7 = var$8 === null ? 0 : var$8.data.length;
        }
        var$9 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$9);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$5), $type), var$6), $rt_s(147)), var$7), $rt_s(139)), var$4);
        $type = jl_AbstractStringBuilder_toString(var$9);
        otcic_JsConsolePrintStream_println($path, $type);
    }
    return $fileData;
},
cgxgbtf_MemoryFileStorage_putFileInternal = ($this, $path, $bytes, $callMethod) => {
    let var$4, $fileData, var$6, var$7, var$8, var$9;
    if ($this.$debug) {
        var$4 = $bytes.data;
        $fileData = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($fileData);
        jl_AbstractStringBuilder_append0($fileData, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($fileData, $path), 34);
        var$6 = jl_AbstractStringBuilder_toString($fileData);
        $fileData = jl_System_out();
        var$7 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$8 = var$4.length;
        var$9 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$9);
        jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$7), $rt_s(148)), var$6), $rt_s(149)), var$8);
        var$7 = jl_AbstractStringBuilder_toString(var$9);
        otcic_JsConsolePrintStream_println($fileData, var$7);
    }
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(143)) && !jl_String_equals($path, $rt_s(83)) && !jl_String_equals($path, $rt_s(144))) {
        $fileData = cgxgbtf_FileData__init_0($path, $bytes);
        cbgu_OrderedMap_put($this.$fileMap, $path, $fileData);
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    $fileData = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_($fileData, $rt_s(150));
    $rt_throw($fileData);
},
cgxgbtf_MemoryFileStorage_putFolderInternal = ($this, $path) => {
    cgxgbtf_MemoryFileStorage_putFolderInternal0($this, $path, 1);
},
cgxgbtf_MemoryFileStorage_putFolderInternal0 = ($this, $path, $callMethod) => {
    let var$3, var$4, var$5, $fileData;
    if ($this.$debug) {
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append0(var$3, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$3, $path), 34);
        var$4 = jl_AbstractStringBuilder_toString(var$3);
        var$3 = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        $fileData = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($fileData);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($fileData, var$5), $rt_s(151)), var$4);
        var$5 = jl_AbstractStringBuilder_toString($fileData);
        otcic_JsConsolePrintStream_println(var$3, var$5);
    }
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(143)) && !jl_String_equals($path, $rt_s(83)) && !jl_String_equals($path, $rt_s(144))) {
        $fileData = cgxgbtf_FileData__init_1($path);
        cbgu_OrderedMap_put($this.$fileMap, $path, cgxgbtf_FileData__init_1($path));
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    var$3 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$3, $rt_s(150));
    $rt_throw(var$3);
},
cgxgbtf_MemoryFileStorage_fixPath = ($this, $path) => {
    let var$2, var$3, var$4, var$5;
    var$2 = jl_String_trim($path);
    if (jl_String_startsWith(var$2, $rt_s(144)))
        var$2 = jl_String_replace(var$2, $rt_s(144), $rt_s(8));
    if (jl_String_startsWith(var$2, $rt_s(143))) {
        var$2 = jur_Pattern_matcher(jur_Pattern_compile($rt_s(143)), var$2);
        var$2.$leftBound0 = 0;
        var$3 = var$2.$string0.$nativeString.length;
        var$2.$rightBound0 = var$3;
        jur_MatchResultImpl_reset(var$2.$matchResult, var$2.$string0, var$2.$leftBound0, var$3);
        var$2.$appendPos = 0;
        var$2.$replacement0 = null;
        var$2.$matchResult.$previousMatch = (-1);
        if (!jur_Matcher_find(var$2))
            var$2 = var$2.$string0;
        else {
            var$4 = new jl_StringBuffer;
            jl_AbstractStringBuilder__init_(var$4);
            var$2.$processedRepl = jur_Matcher_processReplacement(var$2, $rt_s(8));
            $path = var$2.$string0;
            var$5 = var$2.$appendPos;
            var$3 = jur_Matcher_start(var$2);
            jl_StringBuffer_append(var$4, jl_String_substring($path, var$5, var$3));
            jl_AbstractStringBuilder_append(var$4, var$2.$processedRepl);
            var$5 = jur_Matcher_end(var$2);
            var$2.$appendPos = var$5;
            $path = var$2.$string0;
            var$2 = jl_AbstractStringBuilder_toString(jl_StringBuffer_append(var$4, jl_String_substring($path, var$5, $path.$nativeString.length)));
        }
    }
    if (!jl_String_startsWith(var$2, $rt_s(83))) {
        $path = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($path);
        jl_AbstractStringBuilder_append0($path, 47);
        jl_StringBuilder_append($path, var$2);
        var$2 = jl_AbstractStringBuilder_toString($path);
    }
    if (!jl_String_endsWith(var$2, $rt_s(83))) {
        $path = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($path);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($path, var$2), 47);
        var$2 = jl_AbstractStringBuilder_toString($path);
    }
    return var$2;
},
cgxgbtft_InternalStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage),
cgxgbtft_ClasspathStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage);
function cgxgbtft_LocalDBStorage() {
    cgxgbtf_MemoryFileStorage.call(this);
    this.$dataBase = null;
}
let cgxgbtft_LocalDBStorage_putFile = ($this, $key, $fileData) => {
    let $type, $transaction, $objectStore, $dbFileData, $request;
    if ($this.$debug) {
        $type = $fileData !== null && cgxgbtf_FileData_isDirectory($fileData) ? $rt_s(152) : $rt_s(153);
        $transaction = jl_System_out();
        $objectStore = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($objectStore);
        jl_StringBuilder_append(jl_StringBuilder_append($objectStore, $type), $key);
        $objectStore = jl_AbstractStringBuilder_toString($objectStore);
        otcic_JsConsolePrintStream_println($transaction, $objectStore);
    }
    $objectStore = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA");
    $dbFileData = cgxgbtfi_IndexedDBFileData_create$js_body$_5($fileData.$type6, new Date());
    if (!cgxgbtf_FileData_isDirectory($fileData))
        $dbFileData.contents = otji_JS_wrap($fileData.$bytes);
    $type = $rt_ustr($key);
    $request = $objectStore.put($dbFileData, $type);
    $fileData = new cgxgbtft_LocalDBStorage$putFile$lambda$_2_0;
    $fileData.$_01 = $key;
    $key = otji_JS_function(otji_JSWrapper_unwrap($fileData), "handleEvent");
    $request.onerror = $key;
},
cgxgbtft_LocalDBStorage_removeFile = ($this, $key) => {
    let $objectStore, $transaction, $request;
    if ($this.$debug) {
        $objectStore = jl_System_out();
        $transaction = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($transaction);
        jl_StringBuilder_append(jl_StringBuilder_append($transaction, $rt_s(154)), $key);
        $transaction = jl_AbstractStringBuilder_toString($transaction);
        otcic_JsConsolePrintStream_println($objectStore, $transaction);
    }
    $objectStore = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA");
    $transaction = $rt_ustr($key);
    $request = $objectStore.delete($transaction);
    $objectStore = new cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0;
    $objectStore.$_014 = $key;
    $key = otji_JS_function(otji_JSWrapper_unwrap($objectStore), "handleEvent");
    $request.onerror = $key;
},
cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$01 = null;
}
let cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0 = var$1 => {
    var$1 = var$1.$this$01;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1 = var$1 => {
    var$1 = var$1.$this$01;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2 = var$1 => {
    var$1.$this$01.$hasWritePermissions = 0;
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_08 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_08;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_1() {
    jl_Object.call(this);
    this.$_024 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_024;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_2() {
    jl_Object.call(this);
    this.$_016 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_016;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$1.$content = $rt_str(var$3.getData("text/plain"));
    var$2.preventDefault();
},
cgxgbta_AssetLoaderListener = $rt_classWithoutFields(0),
cgxgbta_AssetLoaderListener_onProgress = ($this, $total, $loaded) => {
    return;
},
cgxgbta_AssetLoaderListener_onFailure = ($this, $url) => {
    return;
},
cgxgbta_AssetLoaderListener_onSuccess = ($this, $url, $result) => {
    return;
};
function cgxgbt_TeaApplication$4() {
    jl_Object.call(this);
    this.$this$046 = null;
}
function cgxgbt_TeaApplication$5() {
    jl_Object.call(this);
    this.$this$029 = null;
}
let cbg_LifecycleListener = $rt_classWithoutFields(0),
cgxgbtwh_HowlerAudioManager = $rt_classWithoutFields(),
cbgm_MathUtils = $rt_classWithoutFields(),
cbgm_MathUtils_random = null,
cbgm_MathUtils_sin = $radians => {
    return cbgm_MathUtils$Sin_table.data[($radians * 2607.594482421875 | 0) & 16383];
},
cbgm_MathUtils_nextPowerOfTwo = $value => {
    let var$2;
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    $value = var$2 | var$2 >> 1;
    $value = $value | $value >> 2;
    $value = $value | $value >> 4;
    $value = $value | $value >> 8;
    return ($value | $value >> 16) + 1 | 0;
},
cbgm_MathUtils_clamp = ($value, $min, $max) => {
    if ($value < $min)
        return $min;
    if ($value <= $max)
        return $value;
    return $max;
},
cbgm_MathUtils__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cbgm_RandomXS128;
    var$2 = new ju_Random;
    var$3 = Long_or(Long_shl(Long_fromInt(ju_Random_nextInt0(var$2)), 32), Long_fromInt(ju_Random_nextInt0(var$2)));
    if (Long_eq(var$3, Long_ZERO))
        var$3 = Long_create(0, 2147483648);
    var$4 = cbgm_RandomXS128_murmurHash3(var$3);
    var$3 = cbgm_RandomXS128_murmurHash3(var$4);
    var$1.$seed0 = var$4;
    var$1.$seed1 = var$3;
    cbgm_MathUtils_random = var$1;
},
ju_Dictionary = $rt_classWithoutFields();
function ju_Hashtable() {
    let a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold5 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount2 = 0;
}
let ju_Hashtable_EMPTY_ENUMERATION = null,
ju_Hashtable_EMPTY_ITERATOR = null,
ju_Hashtable__init_ = $this => {
    let var$1, var$2;
    $this.$lastSlot = (-1);
    $this.$elementCount0 = 0;
    var$1 = $rt_createArray(ju_Hashtable$Entry, 11);
    var$2 = var$1.data;
    $this.$elementData0 = var$1;
    $this.$firstSlot = var$2.length;
    $this.$loadFactor3 = 0.75;
    ju_Hashtable_computeMaxSize($this);
},
ju_Hashtable__init_0 = () => {
    let var_0 = new ju_Hashtable();
    ju_Hashtable__init_(var_0);
    return var_0;
},
ju_Hashtable_computeMaxSize = $this => {
    $this.$threshold5 = $this.$elementData0.data.length * $this.$loadFactor3 | 0;
},
ju_Hashtable_put = ($this, $key, $value) => {
    let $result, var$4, var$5, $index, $entry, $hash, var$9, var$10, var$11, var$12, var$13;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $result = $key;
            var$4 = jl_String_hashCode($result) & 2147483647;
            var$5 = $this.$elementData0.data;
            $index = var$4 % var$5.length | 0;
            $entry = var$5[$index];
            while ($entry !== null && !($entry.$hashcode == jl_String_hashCode($result) && $entry.$key.$equals($key) ? 1 : 0)) {
                $entry = $entry.$next4;
            }
            if ($entry !== null) {
                $result = $entry.$value0;
                $entry.$value0 = $value;
                return $result;
            }
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $hash = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = $hash;
            if ($hash > $this.$threshold5) {
                $hash = ($this.$elementData0.data.length << 1) + 1 | 0;
                if (!$hash)
                    $hash = 1;
                $index = (-1);
                var$9 = $rt_createArray(ju_Hashtable$Entry, $hash);
                var$5 = var$9.data;
                var$10 = $this.$lastSlot + 1 | 0;
                var$11 = $hash;
                while (true) {
                    var$10 = var$10 + (-1) | 0;
                    if (var$10 < $this.$firstSlot)
                        break;
                    var$12 = $this.$elementData0.data[var$10];
                    while (var$12 !== null) {
                        var$13 = (var$12.$key.$hashCode() & 2147483647) % $hash | 0;
                        if (var$13 < var$11)
                            var$11 = var$13;
                        if (var$13 > $index)
                            $index = var$13;
                        $entry = var$12.$next4;
                        var$12.$next4 = var$5[var$13];
                        var$5[var$13] = var$12;
                        var$12 = $entry;
                    }
                }
                $this.$firstSlot = var$11;
                $this.$lastSlot = $index;
                $this.$elementData0 = var$9;
                ju_Hashtable_computeMaxSize($this);
                $index = var$4 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            $entry = new ju_Hashtable$Entry;
            ju_MapEntry__init_($entry, $key, $value);
            $entry.$hashcode = jl_String_hashCode($result);
            var$5 = $this.$elementData0.data;
            $entry.$next4 = var$5[$index];
            var$5[$index] = $entry;
            return null;
        }
        $key = new jl_NullPointerException;
        jl_Exception__init_($key);
        $rt_throw($key);
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
ju_Hashtable__clinit_ = () => {
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
};
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
let cgxgbt_TeaGL20$CustomIntMap = $rt_classWithoutFields(),
cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1 = () => {
    return [undefined];
},
cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2 = (var$1, var$2) => {
    if (var$1[var$2] === undefined) return null;
    return var$1[var$2];
},
cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4 = (var$1, var$2) => {
    var$1.push(var$2);
    return var$1.length - 1;
},
cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5 = (var$1, var$2) => {
    var value = var$1[var$2];
    delete var$1[var$2];
    return value;
},
cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6 = (var$1, var$2) => {
    for (var i = 0;i < var$1.length;i++) {
        if (var$2 === var$1[i]) {
            return i;
        }
    }
},
cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum),
cbggg_GLVersion$Type_OpenGL = null,
cbggg_GLVersion$Type_GLES = null,
cbggg_GLVersion$Type_WebGL = null,
cbggg_GLVersion$Type_NONE = null,
cbggg_GLVersion$Type_$VALUES = null,
cbggg_GLVersion$Type__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(155), 0);
    cbggg_GLVersion$Type_OpenGL = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(156), 1);
    cbggg_GLVersion$Type_GLES = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(135), 2);
    cbggg_GLVersion$Type_WebGL = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(157), 3);
    cbggg_GLVersion$Type_NONE = var$1;
    var$2 = $rt_createArray(cbggg_GLVersion$Type, 4);
    var$3 = var$2.data;
    var$3[0] = cbggg_GLVersion$Type_OpenGL;
    var$3[1] = cbggg_GLVersion$Type_GLES;
    var$3[2] = cbggg_GLVersion$Type_WebGL;
    var$3[3] = var$1;
    cbggg_GLVersion$Type_$VALUES = var$2;
};
function cgxgbta_AssetLoadImpl$1() {
    jl_Object.call(this);
    this.$this$050 = null;
}
let cgxgbta_AssetLoadImpl$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$2() {
    jl_Object.call(this);
    this.$this$039 = null;
}
let cgxgbta_AssetLoadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$3() {
    let a = this; jl_Object.call(a);
    a.$val$config0 = null;
    a.$this$010 = null;
}
let cgxgbta_AssetLoadImpl$3_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = var$1;
    var$2.preventDefault();
    var$3 = var$2.dataTransfer.files;
    var$2 = var$1.$this$010;
    var$1 = var$1.$val$config0;
    var$4 = var$3.length;
    if (var$4 > 0) {
        cbgu_Array__init_2(new cbgu_Array);
        var$5 = new Array();
        var$6 = 0;
        while (var$6 < var$4) {
            var$7 = var$3[var$6];
            var$8 = $rt_str(var$7.name);
            if (var$1.$windowListener.$acceptFileDropped(var$8)) {
                var$9 = new cgxgbta_AssetLoadImpl$getFile$lambda$_2_0;
                var$9.$_06 = var$2;
                var$9.$_11 = var$7;
                var$9.$_21 = var$8;
                var$5.push(new Promise(otji_JS_function(otji_JSWrapper_unwrap(var$9), "onExecute")));
            }
            var$6 = var$6 + 1 | 0;
        }
        var$3 = Promise.all(var$5);
        var$2 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0;
        var$2.$_021 = var$1;
        var$1 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1;
        var$2 = var$3.then(otji_JS_function(otji_JSWrapper_unwrap(var$2), "apply"), otji_JS_function(otji_JSWrapper_unwrap(var$1), "apply"));
        var$1 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2;
        var$2.finally(otji_JS_function(otji_JSWrapper_unwrap(var$1), "get"));
    }
},
cbgur_ClassReflection = $rt_classWithoutFields(),
cbgur_ClassReflection_getConstructor = ($c, $parameterTypes) => {
    let $e, $constructor, var$5, var$6, var$7, var$8, var$9, var$10, $$je;
    if ($parameterTypes !== null && $parameterTypes.data.length) {
        a: {
            try {
                $e = cbgur_Constructor__init_(jl_Class_getConstructor($c, $parameterTypes));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_SecurityException) {
                    $e = $$je;
                    break a;
                } else if ($$je instanceof jl_NoSuchMethodException) {
                    $e = $$je;
                    $constructor = new cbgur_ReflectionException;
                    $c = jl_Class_getName($c);
                    jl_Throwable__init_($constructor, $c, $e);
                    $rt_throw($constructor);
                } else {
                    throw $$e;
                }
            }
            return $e;
        }
        $constructor = new cbgur_ReflectionException;
        $c = jl_Class_getName($c);
        jl_Throwable__init_($constructor, $c, $e);
        $rt_throw($constructor);
    }
    $parameterTypes = (jl_Class_getDeclaredConstructors($c)).data;
    var$5 = $parameterTypes.length;
    var$6 = $rt_createArray(jlr_Constructor, var$5);
    var$7 = var$6.data;
    var$8 = 0;
    var$9 = 0;
    while (var$9 < var$5) {
        $c = $parameterTypes[var$9];
        if (jlr_Modifier_isPublic(jlr_Constructor_getModifiers($c))) {
            var$10 = var$8 + 1 | 0;
            var$7[var$8] = $c;
            var$8 = var$10;
        }
        var$9 = var$9 + 1 | 0;
    }
    if (var$8 < var$7.length)
        var$6 = ju_Arrays_copyOf(var$6, var$8);
    $parameterTypes = var$6.data;
    return $parameterTypes.length <= 0 ? null : cbgur_Constructor__init_($parameterTypes[0]);
},
cbgur_ClassReflection_getDeclaredConstructor = ($c, $parameterTypes) => {
    let $e, $declaredConstructor, $$je;
    a: {
        try {
            $e = cbgur_Constructor__init_(jl_Class_getDeclaredConstructor($c, $parameterTypes));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_SecurityException) {
                $e = $$je;
                break a;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
                $declaredConstructor = new cbgur_ReflectionException;
                $c = jl_Class_getName($c);
                jl_Throwable__init_($declaredConstructor, $c, $e);
                $rt_throw($declaredConstructor);
            } else {
                throw $$e;
            }
        }
        return $e;
    }
    $declaredConstructor = new cbgur_ReflectionException;
    $c = jl_Class_getName($c);
    jl_Throwable__init_($declaredConstructor, $c, $e);
    $rt_throw($declaredConstructor);
};
function cbgur_Constructor() {
    jl_Object.call(this);
    this.$constructor0 = null;
}
let cbgur_Constructor__init_0 = ($this, $constructor) => {
    $this.$constructor0 = $constructor;
},
cbgur_Constructor__init_ = var_0 => {
    let var_1 = new cbgur_Constructor();
    cbgur_Constructor__init_0(var_1, var_0);
    return var_1;
},
cbgur_Constructor_getDeclaringClass = $this => {
    return $this.$constructor0.$declaringClass;
},
cbgur_Constructor_setAccessible = ($this, $accessible) => {
    return;
},
cbgur_Constructor_newInstance = ($this, $args) => {
    let $e, var$3, var$4, $$je;
    if ($args === null)
        $args = $rt_createArray(jl_Object, 0);
    a: {
        b: {
            c: {
                try {
                    $e = jlr_Constructor_newInstance($this.$constructor0, $args);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_IllegalArgumentException) {
                        $e = $$je;
                        break c;
                    } else if ($$je instanceof jl_InstantiationException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_IllegalAccessException) {
                        $e = $$je;
                        break b;
                    } else if ($$je instanceof jlr_InvocationTargetException) {
                        $e = $$je;
                        var$3 = new cbgur_ReflectionException;
                        var$4 = jl_Class_getName(cbgur_Constructor_getDeclaringClass($this));
                        jl_Throwable__init_(var$3, var$4, $e);
                        $rt_throw(var$3);
                    } else {
                        throw $$e;
                    }
                }
                return $e;
            }
            var$3 = new cbgur_ReflectionException;
            var$4 = jl_Class_getName(cbgur_Constructor_getDeclaringClass($this));
            jl_Throwable__init_(var$3, var$4, $e);
            $rt_throw(var$3);
        }
        var$3 = new cbgur_ReflectionException;
        var$4 = jl_Class_getName(cbgur_Constructor_getDeclaringClass($this));
        jl_Throwable__init_(var$3, var$4, $e);
        $rt_throw(var$3);
    }
    var$3 = new cbgur_ReflectionException;
    var$4 = jl_Class_getName(cbgur_Constructor_getDeclaringClass($this));
    jl_Throwable__init_(var$3, var$4, $e);
    $rt_throw(var$3);
},
cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
function jur_Pattern() {
    let a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start1 = null;
}
let jur_Pattern_matcher = ($this, $input) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$2 = new jur_Matcher;
    var$2.$leftBound0 = (-1);
    var$2.$rightBound0 = (-1);
    var$2.$pat = $this;
    var$2.$start4 = $this.$start1;
    var$2.$string0 = $input;
    var$2.$leftBound0 = 0;
    var$3 = $input.$nativeString.length;
    var$2.$rightBound0 = var$3;
    var$4 = new jur_MatchResultImpl;
    var$5 = var$2.$leftBound0;
    var$6 = $this.$globalGroupIndex;
    var$7 = $this.$compCount + 1 | 0;
    var$8 = $this.$consCount + 1 | 0;
    var$4.$previousMatch = (-1);
    var$6 = var$6 + 1 | 0;
    var$4.$groupCount = var$6;
    var$4.$groupBounds = $rt_createIntArray(var$6 * 2 | 0);
    var$9 = $rt_createIntArray(var$8);
    var$4.$consumers = var$9;
    ju_Arrays_fill(var$9, (-1));
    if (var$7 > 0)
        var$4.$compQuantCounters = $rt_createIntArray(var$7);
    ju_Arrays_fill(var$4.$groupBounds, (-1));
    jur_MatchResultImpl_reset(var$4, $input, var$5, var$3);
    var$2.$matchResult = var$4;
    var$4.$anchoringBounds = 1;
    return var$2;
},
jur_Pattern_pattern = $this => {
    return $this.$lexemes.$orig;
},
jur_Pattern_processExpression = ($this, $ch, $newFlags, $last) => {
    let $children, $saveFlags, $saveChangedFlags, $fSet, $child, var$9;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags;
    $saveChangedFlags = 0;
    if ($newFlags != $saveFlags)
        $this.$flags = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            default:
                $newFlags = $this.$globalGroupIndex + 1 | 0;
                $this.$globalGroupIndex = $newFlags;
                if ($last !== null)
                    $fSet = jur_FSet__init_0($newFlags);
                else {
                    $fSet = new jur_FinalSet;
                    jur_FSet__init_($fSet, 0);
                    $saveChangedFlags = 1;
                }
                $newFlags = $this.$globalGroupIndex;
                if ($newFlags <= (-1))
                    break a;
                if ($newFlags >= 10)
                    break a;
                $this.$backRefs.data[$newFlags] = $fSet;
                break a;
        }
        $fSet = new jur_AheadFSet;
        jur_FSet__init_($fSet, (-1));
    }
    while (true) {
        if (jur_Lexer_isLetter($this.$lexemes) && $this.$lexemes.$lookAhead == (-536870788)) {
            $last = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
                $child = $this.$lexemes;
                var$9 = $child.$lookAhead;
                if (var$9 && var$9 != (-536870788) && var$9 != (-536870871))
                    break;
                jur_CharClass_add0($last, jur_Lexer_next($child));
                $child = $this.$lexemes;
                if ($child.$ch != (-536870788))
                    continue;
                jur_Lexer_next($child);
            }
            $child = jur_Pattern_processRangeSet($this, $last);
            $child.$setNext($fSet);
        } else if ($this.$lexemes.$ch == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            jur_Lexer_next($this.$lexemes);
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            $last = $this.$lexemes;
            if ($last.$ch == (-536870788))
                jur_Lexer_next($last);
        }
        if ($child !== null)
            ju_ArrayList_add($children, $child);
        if (jur_Lexer_isEmpty($this.$lexemes))
            break;
        if ($this.$lexemes.$ch == (-536870871))
            break;
    }
    if ($this.$lexemes.$lookBack == (-536870788))
        ju_ArrayList_add($children, jur_EmptySet__init_($fSet));
    if ($this.$flags != $saveFlags && !$saveChangedFlags) {
        $this.$flags = $saveFlags;
        $last = $this.$lexemes;
        $last.$flags0 = $saveFlags;
        $last.$lookAhead = $last.$ch;
        $last.$lookAheadST = $last.$curST;
        var$9 = $last.$curToc;
        $last.$index = var$9 + 1 | 0;
        $last.$lookAheadToc = var$9;
        jur_Lexer_movePointer($last);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            $last = new jur_PositiveLookAhead;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -268435416:
            $last = new jur_NegativeLookAhead;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -134217688:
            $last = new jur_PositiveLookBehind;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -67108824:
            $last = new jur_NegativeLookBehind;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -33554392:
            $last = new jur_AtomicJointSet;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        default:
            switch ($children.$size3) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_0(ju_ArrayList_get($children, 0), $fSet);
                default:
                    return jur_JointSet__init_0($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    $last = new jur_NonCapJointSet;
    jur_JointSet__init_($last, $children, $fSet);
    return $last;
},
jur_Pattern_processDecomposedChar = $this => {
    let $codePoints, $curSymb, $curSymbIndex, $codePointsHangul, var$5, var$6, $readCodePoints;
    $codePoints = $rt_createIntArray(4);
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $codePointsHangul = $codePoints.data;
        $curSymb = jur_Lexer_next($this.$lexemes);
        $codePointsHangul[0] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        $codePoints = $codePointsHangul.data;
        $codePoints[0] = $curSymb & 65535;
        var$5 = $this.$lexemes;
        var$6 = var$5.$ch;
        $readCodePoints = var$6 - 4449 | 0;
        if ($readCodePoints >= 0 && $readCodePoints < 21) {
            $codePoints[1] = var$6 & 65535;
            jur_Lexer_next(var$5);
            var$5 = $this.$lexemes;
            var$6 = var$5.$ch;
            $curSymb = var$6 - 4519 | 0;
            if ($curSymb >= 0 && $curSymb < 28) {
                $codePoints[2] = var$6 & 65535;
                jur_Lexer_next(var$5);
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_($codePoints[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_($codePoints[0]);
        return jur_CICharSet__init_($codePoints[0]);
    }
    $codePointsHangul = $codePoints.data;
    $curSymb = 1;
    while ($curSymb < 4 && !jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $readCodePoints = $curSymb + 1 | 0;
        $codePointsHangul[$curSymb] = jur_Lexer_next($this.$lexemes);
        $curSymb = $readCodePoints;
    }
    if ($curSymb == 1) {
        $readCodePoints = $codePointsHangul[0];
        if (!(jur_Lexer_singleDecompTable.$get($readCodePoints) == jur_Lexer_singleDecompTableSize ? 0 : 1))
            return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_0($codePoints, $curSymb);
    if (jur_Pattern_hasFlag($this, 64)) {
        var$5 = new jur_UCIDecomposedCharSet;
        jur_DecomposedCharSet__init_(var$5, $codePoints, $curSymb);
        return var$5;
    }
    var$5 = new jur_CIDecomposedCharSet;
    jur_DecomposedCharSet__init_(var$5, $codePoints, $curSymb);
    return var$5;
},
jur_Pattern_processSubExpression = ($this, $last) => {
    let $cur, $term, var$4, var$5, var$6, $next, var$8;
    if (jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead)) {
        if (jur_Pattern_hasFlag($this, 128)) {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!jur_Lexer_isEmpty($this.$lexemes)) {
                $term = $this.$lexemes;
                var$4 = $term.$ch;
                if (!(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788) && !jur_Lexer_isLetter($term))
                    $cur = jur_Pattern_processQuantifier($this, $last, $cur);
            }
        } else if (!jur_Lexer_isHighSurrogate0($this.$lexemes) && !jur_Lexer_isLowSurrogate0($this.$lexemes)) {
            $term = new jl_StringBuffer;
            jl_AbstractStringBuilder__init_($term);
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isHighSurrogate0($this.$lexemes) && !jur_Lexer_isLowSurrogate0($this.$lexemes)) {
                if (!(!jur_Lexer_isNextSpecial($this.$lexemes) && !$this.$lexemes.$lookAhead) && !(!jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead))) {
                    var$5 = $this.$lexemes.$lookAhead;
                    if (var$5 != (-536870871) && (var$5 & (-2147418113)) != (-2147483608) && var$5 != (-536870788) && var$5 != (-536870876))
                        break;
                }
                var$4 = jur_Lexer_next($this.$lexemes);
                if (!jl_Character_isSupplementaryCodePoint(var$4))
                    jl_AbstractStringBuilder_append0($term, var$4 & 65535);
                else
                    jl_AbstractStringBuilder_append1($term, jl_Character_toChars(var$4));
            }
            if (!jur_Pattern_hasFlag($this, 2)) {
                $cur = new jur_SequenceSet;
                jur_LeafSet__init_($cur);
                $cur.$string = jl_AbstractStringBuilder_toString($term);
                var$4 = $term.$length2;
                $cur.$charCount0 = var$4;
                $cur.$leftToRight = jur_SequenceSet$IntHash__init_(var$4);
                $cur.$rightToLeft = jur_SequenceSet$IntHash__init_($cur.$charCount0);
                var$6 = 0;
                while (var$6 < ($cur.$charCount0 - 1 | 0)) {
                    jur_SequenceSet$IntHash_put($cur.$leftToRight, jl_String_charAt($cur.$string, var$6), ($cur.$charCount0 - var$6 | 0) - 1 | 0);
                    jur_SequenceSet$IntHash_put($cur.$rightToLeft, jl_String_charAt($cur.$string, ($cur.$charCount0 - var$6 | 0) - 1 | 0), ($cur.$charCount0 - var$6 | 0) - 1 | 0);
                    var$6 = var$6 + 1 | 0;
                }
            } else
                $cur = jur_Pattern_hasFlag($this, 64) ? jur_UCISequenceSet__init_0($term) : jur_CISequenceSet__init_0($term);
        } else
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    } else {
        $term = $this.$lexemes;
        if ($term.$ch != (-536870871))
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
        else {
            if ($last instanceof jur_FinalSet)
                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $term.$orig, $term.$curToc));
            $cur = jur_EmptySet__init_($last);
        }
    }
    a: {
        if (!jur_Lexer_isEmpty($this.$lexemes)) {
            var$4 = $this.$lexemes.$ch;
            if (!(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788)) {
                $next = jur_Pattern_processSubExpression($this, $last);
                if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                    var$8 = $cur;
                    $term = var$8;
                    if (!$next.$first1($term.$innerSet)) {
                        $cur = new jur_UnifiedQuantifierSet;
                        $term = $term.$innerSet;
                        var$8 = var$8;
                        jur_LeafQuantifierSet__init_($cur, $term, var$8.$next2, var$8.$type4);
                        $cur.$innerSet.$setNext($cur);
                    }
                }
                if (($next.$getType1() & 65535) != 43)
                    $cur.$setNext($next);
                else
                    $cur.$setNext($next.$innerSet);
                break a;
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType1() & 65535) != 43)
        return $cur;
    return $cur.$innerSet;
},
jur_Pattern_processQuantifier = ($this, $last, $term) => {
    let $q, $quant, $q_0, var$6, $leaf;
    $q = $this.$lexemes;
    $quant = $q.$ch;
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                jur_Lexer_next($q);
                $q = new jur_PossessiveGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, $quant);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483605:
                jur_Lexer_next($q);
                $q = new jur_PosPlusGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-2147483606));
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483585:
                jur_Lexer_next($q);
                $q = new jur_PosAltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483525:
                $q_0 = new jur_PosCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), var$6);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q_0;
            case -1073741782:
            case -1073741781:
                jur_Lexer_next($q);
                $q = new jur_ReluctantGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                jur_Lexer_next($q);
                $q = new jur_RelAltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q_0 = new jur_RelCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            case -536870870:
            case -536870869:
                jur_Lexer_next($q);
                if ($term.$getType1() != (-2147483602)) {
                    $q = new jur_GroupQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else if (jur_Pattern_hasFlag($this, 32)) {
                    $q = new jur_DotAllQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else {
                    $q = new jur_DotQuantifierSet;
                    $q_0 = jur_AbstractLineTerminator_getInstance($this.$flags);
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                    $q.$lt = $q_0;
                }
                $term.$setNext($q);
                return $q;
            case -536870849:
                jur_Lexer_next($q);
                $q = new jur_AltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q_0 = new jur_CompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            jur_Lexer_next($q);
            $q = new jur_PossessiveQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next2 = $q;
            return $q;
        case -2147483585:
            jur_Lexer_next($q);
            $term = new jur_PossessiveAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-2147483585));
            return $term;
        case -2147483525:
            $term = new jur_PossessiveCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($q), $leaf, $last, (-2147483525));
            return $term;
        case -1073741782:
        case -1073741781:
            jur_Lexer_next($q);
            $q = new jur_ReluctantQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next2 = $q;
            return $q;
        case -1073741761:
            jur_Lexer_next($q);
            $term = new jur_ReluctantAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-1073741761));
            return $term;
        case -1073741701:
            $term = new jur_ReluctantCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($q), $leaf, $last, (-1073741701));
            return $term;
        case -536870870:
        case -536870869:
            jur_Lexer_next($q);
            $q = jur_LeafQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$next2 = $q;
            return $q;
        case -536870849:
            jur_Lexer_next($q);
            $term = new jur_AltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-536870849));
            return $term;
        case -536870789:
            return jur_CompositeQuantifierSet__init_0(jur_Lexer_nextSpecial($q), $leaf, $last, (-536870789));
        default:
    }
    return $term;
},
jur_Pattern_processTerminal = ($this, $last) => {
    let $term, var$3, var$4, $ch, $newFlags, $number, $negative, $cc;
    $term = null;
    var$3 = $last instanceof jur_FinalSet;
    while (true) {
        a: {
            var$4 = $this.$lexemes;
            $ch = var$4.$ch;
            if (($ch & (-2147418113)) == (-2147483608)) {
                jur_Lexer_next(var$4);
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    var$4 = $this.$lexemes;
                    if (var$4.$ch != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), var$4.$orig, var$4.$curToc));
                    jur_Lexer_next(var$4);
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                jur_Lexer_next(var$4);
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                jur_Lexer_next(var$4);
                                $term = new jur_PreviousMatch;
                                jur_AbstractSet__init_($term);
                                break a;
                            case -2147483558:
                                jur_Lexer_next(var$4);
                                $term = new jur_EOLSet;
                                $number = $this.$consCount + 1 | 0;
                                $this.$consCount = $number;
                                jur_EOLSet__init_($term, $number);
                                break a;
                            case -2147483550:
                                jur_Lexer_next(var$4);
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                jur_Lexer_next(var$4);
                                $term = new jur_EOISet;
                                jur_AbstractSet__init_($term);
                                break a;
                            case -536870876:
                                jur_Lexer_next(var$4);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_0($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_0($this.$consCount);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount);
                                break a;
                            case -536870866:
                                jur_Lexer_next(var$4);
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_0();
                                    break a;
                                }
                                $term = jur_DotSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case -536870821:
                                jur_Lexer_next(var$4);
                                $negative = 0;
                                $term = $this.$lexemes;
                                if ($term.$ch == (-536870818)) {
                                    $negative = 1;
                                    jur_Lexer_next($term);
                                }
                                $term = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
                                $term.$setNext($last);
                                var$4 = $this.$lexemes;
                                if (var$4.$ch != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), var$4.$orig, var$4.$curToc));
                                jur_Lexer_setMode(var$4, 1);
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            case -536870818:
                                jur_Lexer_next(var$4);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = new jur_SOLSet;
                                    jur_AbstractSet__init_($term);
                                    break a;
                                }
                                $term = new jur_MultiLineSOLSet;
                                var$4 = jur_AbstractLineTerminator_getInstance($this.$flags);
                                jur_AbstractSet__init_($term);
                                $term.$lt1 = var$4;
                                break a;
                            case 0:
                                $cc = var$4.$curST;
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if (jur_Lexer_isEmpty(var$4)) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            default:
                                break b;
                        }
                        jur_Lexer_next(var$4);
                        $term = new jur_SOLSet;
                        jur_AbstractSet__init_($term);
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString(var$4), jur_Lexer_getIndex($this.$lexemes)));
                    jur_Lexer_next(var$4);
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_0($number, $this.$consCount) : jur_CIBackReferenceSet__init_0($number, $this.$consCount);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !jur_Lexer_isSpecial(var$4)) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    jur_Lexer_next($this.$lexemes);
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        $last = new jur_PatternSyntaxException;
                        $term = !jur_Lexer_isSpecial($this.$lexemes) ? jl_Character_toString($ch & 65535) : $this.$lexemes.$curST.$toString();
                        var$4 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0($last, $term, var$4.$orig, var$4.$curToc);
                        $rt_throw($last);
                    }
                    if (var$3) {
                        $last = new jur_PatternSyntaxException;
                        var$4 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0($last, $rt_s(8), var$4.$orig, var$4.$curToc);
                        $rt_throw($last);
                    }
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
},
jur_Pattern_processRangeExpression = ($this, $alt) => {
    let $res, $buffer, $intersection, $notClosed, $firstInClass, $cs, $cur, $negative, $$je;
    $res = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    jur_AbstractCharClass_setNegative($res, $alt);
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if (jur_Lexer_isEmpty($this.$lexemes))
                    break a;
                $cs = $this.$lexemes;
                $alt = $cs.$ch;
                $notClosed = $alt == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($alt) {
                        case -536870874:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = jur_Lexer_next($this.$lexemes);
                            $cs = $this.$lexemes;
                            if ($cs.$ch != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($cs.$lookAhead == (-536870821)) {
                                jur_Lexer_next($cs);
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            jur_Lexer_next($cs);
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$ch == (-536870819))
                                break d;
                            jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass) {
                                $alt = $cs.$lookAhead;
                                if ($alt != (-536870819) && $alt != (-536870821) && $buffer >= 0) {
                                    jur_Lexer_next($cs);
                                    $cs = $this.$lexemes;
                                    $cur = $cs.$ch;
                                    if (jur_Lexer_isSpecial($cs))
                                        break c;
                                    if ($cur < 0) {
                                        $negative = $this.$lexemes.$lookAhead;
                                        if ($negative != (-536870819) && $negative != (-536870821) && $buffer >= 0)
                                            break c;
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter0($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        jur_CharClass_add($res, $buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    jur_Lexer_next($this.$lexemes);
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 45;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                jur_CharClass_add0($res, $buffer);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            $negative = 0;
                            $cs = $this.$lexemes;
                            if ($cs.$ch == (-536870818)) {
                                jur_Lexer_next($cs);
                                $negative = 1;
                            }
                            if (!$intersection)
                                jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                            else
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 93;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 94;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $cs = $this.$lexemes.$curST;
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                jur_CharClass_add1($res, $cs);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        jur_CharClass_add0($res, $buffer);
                    $buffer = jur_Lexer_next($this.$lexemes);
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            jur_CharClass_add0($res, $buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc - 1 | 0));
},
jur_Pattern_processCharSet = ($this, $ch) => {
    let $isSupplCodePoint, var$3, var$4;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint) {
                var$3 = new jur_UCISupplCharSet;
                jur_LeafSet__init_(var$3);
                var$3.$charCount0 = 2;
                var$3.$ch3 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
                return var$3;
            }
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if (!$isSupplCodePoint) {
        if (jur_Lexer_isLowSurrogate($ch))
            return jur_LowSurrogateCharSet__init_($ch & 65535);
        if (!jur_Lexer_isHighSurrogate($ch))
            return jur_CharSet__init_($ch & 65535);
        return jur_HighSurrogateCharSet__init_($ch & 65535);
    }
    var$3 = new jur_SupplCharSet;
    jur_LeafSet__init_(var$3);
    var$3.$charCount0 = 2;
    var$3.$ch1 = $ch;
    var$4 = (jl_Character_toChars($ch)).data;
    var$3.$high0 = var$4[0];
    var$3.$low0 = var$4[1];
    return var$3;
},
jur_Pattern_processRangeSet = ($this, $charClass) => {
    let $surrogates, $lowHighSurrRangeSet, var$4;
    if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
        if (!$charClass.$mayContainSupplCodepoints) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if (!$charClass.$hasUCI())
            return jur_SupplRangeSet__init_0($charClass);
        $surrogates = new jur_UCISupplRangeSet;
        jur_SupplRangeSet__init_($surrogates, $charClass);
        return $surrogates;
    }
    $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
    $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
    jur_AbstractSet__init_($lowHighSurrRangeSet);
    $lowHighSurrRangeSet.$surrChars = $surrogates;
    $lowHighSurrRangeSet.$alt1 = $surrogates.$alt;
    if (!$charClass.$mayContainSupplCodepoints) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    }
    if (!$charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_0(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    $surrogates = new jur_CompositeRangeSet;
    var$4 = new jur_UCISupplRangeSet;
    jur_SupplRangeSet__init_(var$4, jur_AbstractCharClass_getWithoutSurrogates($charClass));
    jur_CompositeRangeSet__init_0($surrogates, var$4, $lowHighSurrRangeSet);
    return $surrogates;
},
jur_Pattern_compile = $pattern => {
    let var$2, var$3, var$4, var$5;
    if ($pattern === null) {
        $pattern = new jl_NullPointerException;
        jl_RuntimeException__init_($pattern, $rt_s(158));
        $rt_throw($pattern);
    }
    jur_AbstractSet_counter = 1;
    var$2 = new jur_Pattern;
    var$2.$backRefs = $rt_createArray(jur_FSet, 10);
    var$2.$globalGroupIndex = (-1);
    var$2.$compCount = (-1);
    var$2.$consCount = (-1);
    var$3 = new jur_Lexer;
    var$3.$mode = 1;
    var$3.$orig = $pattern;
    var$3.$pattern0 = $rt_createCharArray($pattern.$nativeString.length + 2 | 0);
    jl_System_fastArraycopy(jl_String_toCharArray($pattern), 0, var$3.$pattern0, 0, $pattern.$nativeString.length);
    var$4 = var$3.$pattern0.data;
    var$5 = var$4.length;
    var$4[var$5 - 1 | 0] = 0;
    var$4[var$5 - 2 | 0] = 0;
    var$3.$patternFullLength = var$5;
    var$3.$flags0 = 0;
    jur_Lexer_movePointer(var$3);
    jur_Lexer_movePointer(var$3);
    var$2.$lexemes = var$3;
    var$2.$flags = 0;
    var$2.$start1 = jur_Pattern_processExpression(var$2, (-1), 0, null);
    if (jur_Lexer_isEmpty(var$2.$lexemes)) {
        if (var$2.$needsBackRefReplacement)
            var$2.$start1.$processSecondPass();
        return var$2;
    }
    $pattern = new jur_PatternSyntaxException;
    var$2 = var$2.$lexemes;
    jur_PatternSyntaxException__init_0($pattern, $rt_s(8), var$2.$orig, var$2.$curToc);
    $rt_throw($pattern);
},
jur_Pattern_getSupplement = $ch => {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
},
jur_Pattern_hasFlag = ($this, $flag) => {
    return ($this.$flags & $flag) != $flag ? 0 : 1;
},
jur_MatchResult = $rt_classWithoutFields(0);
function jur_Matcher() {
    let a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start4 = null;
    a.$string0 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$appendPos = 0;
    a.$replacement0 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
let jur_Matcher_processReplacement = ($this, $replacement) => {
    let $res, $sb, $i, $repl, $index, $replacementPos, $nextBackSlashed, var$9, $gr, $group, $$je;
    $res = $this.$replacement0;
    if ($res !== null && jl_String_equals($res, $replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        $i = 0;
        while (true) {
            $replacement = $this.$replacementParts;
            if ($i >= $replacement.$size3)
                break;
            jl_StringBuilder_append($sb, ju_ArrayList_get($replacement, $i));
            $i = $i + 1 | 0;
        }
        return jl_AbstractStringBuilder_toString($sb);
    }
    $this.$replacement0 = $replacement;
    $repl = jl_String_toCharArray($replacement);
    $res = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($res);
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            var$9 = $repl.data;
            $i = var$9.length;
            if ($index >= $i) {
                $replacement = $this.$replacementParts;
                if ($replacement !== null) {
                    $gr = $res.$length2;
                    if ($replacementPos != $gr)
                        ju_ArrayList_add($replacement, jl_StringBuilder_subSequence($res, $replacementPos, $gr));
                }
                return jl_AbstractStringBuilder_toString($res);
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= $i)
                        break b;
                    jl_AbstractStringBuilder_append0($res, var$9[$index]);
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36)
                    jl_AbstractStringBuilder_append0($res, var$9[$index]);
                else {
                    if ($this.$replacementParts === null)
                        $this.$replacementParts = ju_ArrayList__init_();
                    d: {
                        try {
                            $replacement = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_4($replacement, $repl, $index, 1);
                            $gr = jl_Integer_parseInt0($replacement);
                            if ($replacementPos == jl_StringBuilder_length($res))
                                break d;
                            ju_ArrayList_add($this.$replacementParts, jl_StringBuilder_subSequence($res, $replacementPos, jl_StringBuilder_length($res)));
                            $replacementPos = jl_StringBuilder_length($res);
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        ju_ArrayList_add($this.$replacementParts, jur_Matcher$1__init_0($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + jl_String_length($group) | 0;
                        jl_StringBuilder_append1($res, $group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $replacement = new jl_IndexOutOfBoundsException;
        jl_Exception__init_($replacement);
        $rt_throw($replacement);
    }
    $replacement = new jl_IllegalArgumentException;
    jl_RuntimeException__init_($replacement, $rt_s(8));
    $rt_throw($replacement);
},
jur_Matcher_group = ($this, $group) => {
    let var$2, var$3, var$4;
    var$2 = $this.$matchResult;
    if (jur_MatchResultImpl_start(var$2, $group) < 0)
        var$2 = null;
    else {
        var$3 = var$2.$string3;
        var$4 = jur_MatchResultImpl_start(var$2, $group);
        $group = jur_MatchResultImpl_end0(var$2, $group);
        var$2 = jl_String_substring(var$3, var$4, $group);
    }
    return var$2;
},
jur_Matcher_find0 = ($this, $start) => {
    let $stringLength, var$3, var$4;
    $stringLength = $this.$string0.$nativeString.length;
    if ($start >= 0 && $start <= $stringLength) {
        jur_MatchResultImpl_reset($this.$matchResult, null, (-1), (-1));
        var$3 = $this.$matchResult;
        var$3.$mode0 = 1;
        var$3.$startIndex = $start;
        $stringLength = var$3.$previousMatch;
        if ($stringLength < 0)
            $stringLength = $start;
        var$3.$previousMatch = $stringLength;
        $start = $this.$start4.$find0($start, $this.$string0, var$3);
        if ($start == (-1))
            $this.$matchResult.$hitEnd = 1;
        if ($start >= 0) {
            var$3 = $this.$matchResult;
            if (var$3.$valid1) {
                var$4 = var$3.$groupBounds.data;
                if (var$4[0] == (-1)) {
                    $stringLength = var$3.$startIndex;
                    var$4[0] = $stringLength;
                    var$4[1] = $stringLength;
                }
                var$3.$previousMatch = jur_MatchResultImpl_end(var$3);
                return 1;
            }
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_RuntimeException__init_(var$3, jl_String_valueOf1($start));
    $rt_throw(var$3);
},
jur_Matcher_find = $this => {
    let $length, var$2, var$3;
    $length = $this.$string0.$nativeString.length;
    var$2 = $this.$matchResult;
    if (!var$2.$transparentBounds)
        $length = $this.$rightBound0;
    if (var$2.$startIndex >= 0 && var$2.$mode0 == 1) {
        var$2.$startIndex = jur_MatchResultImpl_end(var$2);
        if (jur_MatchResultImpl_end($this.$matchResult) == jur_MatchResultImpl_start($this.$matchResult, 0)) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        var$3 = $this.$matchResult.$startIndex;
        return var$3 <= $length && jur_Matcher_find0($this, var$3) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
},
jur_Matcher_start = $this => {
    return jur_MatchResultImpl_start($this.$matchResult, 0);
},
jur_Matcher_end = $this => {
    return jur_MatchResultImpl_end0($this.$matchResult, 0);
},
otji_IDBFactory = $rt_classWithoutFields();
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0() {
    jl_Object.call(this);
    this.$_05 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$2 = var$1.$_05.result;
    var$3 = otji_IDBObjectStoreParameters_create$js_body$_1();
    var$2.createObjectStore("FILE_DATA", var$3);
},
otji_EventHandler = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1() {
    let a = this; jl_Object.call(a);
    a.$_020 = null;
    a.$_17 = null;
    a.$_25 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4, var$5;
    var$1 = var$1;
    var$2 = var$1.$_020;
    var$3 = var$1.$_17;
    var$1 = var$1.$_25;
    var$3 = var$3.result;
    var$2.$dataBase = var$3;
    var$4 = var$3.transaction("FILE_DATA", "readonly");
    var$5 = var$4.objectStore("FILE_DATA").openCursor();
    var$3 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0;
    var$3.$_09 = var$2;
    var$3.$_13 = var$5;
    var$2 = otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent");
    var$5.onsuccess = var$2;
    var$2 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1;
    var$2.$_023 = var$1;
    var$3 = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
    var$4.oncomplete = var$3;
    var$2 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2;
    var$2.$_0 = var$1;
    var$1 = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
    var$5.onerror = var$1;
};
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2() {
    let a = this; jl_Object.call(a);
    a.$_018 = null;
    a.$_16 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_018;
    var$1 = var$1.$_16;
    var$3 = jl_System_err();
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(159)), var$2);
    var$4 = jl_AbstractStringBuilder_toString(var$4);
    otcic_JsConsolePrintStream_println(var$3, var$4);
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
},
jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException),
jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception),
jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jur_RandomGenerator = $rt_classWithoutFields(0),
ju_Random = $rt_classWithoutFields(),
ju_Random_nextInt0 = $this => {
    return 4.294967296E9 * ju_Random_nextDouble($this) + (-2.147483648E9) | 0;
},
ju_Random_nextInt = ($this, $n) => {
    let var$2;
    if ($n > 0)
        return ju_Random_nextDouble($this) * $n | 0;
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
ju_Random_nextDouble = $this => {
    return jl_Math_randomImpl();
};
function cbgm_RandomXS128() {
    let a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
let cbgm_RandomXS128_murmurHash3 = $x => {
    $x = Long_mul(Long_xor($x, Long_shru($x, 33)), Long_create(3981806797, 4283543511));
    $x = Long_mul(Long_xor($x, Long_shru($x, 33)), Long_create(444984403, 3301882366));
    return Long_xor($x, Long_shru($x, 33));
},
ju_Enumeration = $rt_classWithoutFields(0),
ju_Hashtable$1 = $rt_classWithoutFields(),
ju_Iterator = $rt_classWithoutFields(0),
ju_Hashtable$2 = $rt_classWithoutFields();
function jur_MatchResultImpl() {
    let a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string3 = null;
    a.$groupCount = 0;
    a.$valid1 = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode0 = 0;
}
let jur_MatchResultImpl_setConsumed = ($this, $counter, $value) => {
    $this.$consumers.data[$counter] = $value;
},
jur_MatchResultImpl_getConsumed = ($this, $counter) => {
    return $this.$consumers.data[$counter];
},
jur_MatchResultImpl_end = $this => {
    return jur_MatchResultImpl_end0($this, 0);
},
jur_MatchResultImpl_end0 = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_setStart = ($this, $group, $offset) => {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
},
jur_MatchResultImpl_setEnd = ($this, $group, $offset) => {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
},
jur_MatchResultImpl_getStart = ($this, $group) => {
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnd = ($this, $group) => {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_start = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnterCounter = ($this, $setCounter) => {
    return $this.$compQuantCounters.data[$setCounter];
},
jur_MatchResultImpl_setEnterCounter = ($this, $setCounter, $value) => {
    $this.$compQuantCounters.data[$setCounter] = $value;
},
jur_MatchResultImpl_checkGroup = ($this, $group) => {
    let var$2;
    if (!$this.$valid1) {
        var$2 = new jl_IllegalStateException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_RuntimeException__init_(var$2, jl_String_valueOf1($group));
    $rt_throw(var$2);
},
jur_MatchResultImpl_reset = ($this, $newSequence, $leftBound, $rightBound) => {
    $this.$valid1 = 0;
    $this.$mode0 = 2;
    ju_Arrays_fill($this.$groupBounds, (-1));
    ju_Arrays_fill($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string3 = $newSequence;
    if ($leftBound >= 0) {
        $this.$leftBound = $leftBound;
        $this.$rightBound = $rightBound;
    }
    $this.$startIndex = $this.$leftBound;
},
jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException),
jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalStateException__init_ = ($this, $message) => {
    jl_RuntimeException__init_($this, $message);
},
jl_IllegalStateException__init_0 = var_0 => {
    let var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_(var_1, var_0);
    return var_1;
},
jlr_Modifier = $rt_classWithoutFields(),
jlr_Modifier_modifierNames = null,
jlr_Modifier_canonicalOrder = null,
jlr_Modifier_isPublic = $mod => {
    return !($mod & 1) ? 0 : 1;
},
jlr_Modifier__clinit_ = () => {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
},
ju_Arrays = $rt_classWithoutFields(),
ju_Arrays_copyOf1 = ($array, $length) => {
    let $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createCharArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf0 = ($array, $length) => {
    let $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createByteArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf = ($original, $newLength) => {
    let var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_fill1 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6, var$7;
    if ($fromIndex > $toIndex) {
        var$5 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$5);
        $rt_throw(var$5);
    }
    while ($fromIndex < $toIndex) {
        var$6 = $a.data;
        var$7 = $fromIndex + 1 | 0;
        var$6[$fromIndex] = $val;
        $fromIndex = var$7;
    }
},
ju_Arrays_fill = ($a, $val) => {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
},
ju_Arrays_fill0 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex) {
        $val = new jl_IllegalArgumentException;
        jl_Exception__init_($val);
        $rt_throw($val);
    }
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill2 = ($a, $val) => {
    ju_Arrays_fill0($a, 0, $a.data.length, $val);
},
ju_Arrays_equals = ($a, $a2) => {
    let var$3, var$4, var$5, var$6, var$7;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        $a = $a.data;
        $a2 = $a2.data;
        var$3 = $a.length;
        if (var$3 == $a2.length) {
            var$4 = 0;
            a: {
                while (true) {
                    if (var$4 >= var$3) {
                        var$4 = (-1);
                        break a;
                    }
                    var$5 = var$4 + 0 | 0;
                    var$6 = $a[var$5];
                    var$7 = $a2[var$5];
                    if (!(var$6 === var$7 ? 1 : var$6 !== null ? jl_Object_equals(var$6, var$7) : var$7 !== null ? 0 : 1))
                        break;
                    var$4 = var$4 + 1 | 0;
                }
            }
            return var$4 >= 0 ? 0 : 1;
        }
    }
    return 0;
},
jlr_AccessibleObject = $rt_classWithoutFields(),
jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jur_AbstractSet() {
    let a = this; jl_Object.call(a);
    a.$next2 = null;
    a.$isSecondPassVisited = 0;
    a.$index2 = null;
    a.$type4 = 0;
}
let jur_AbstractSet_counter = 0,
jur_AbstractSet__init_ = $this => {
    let var$1;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    $this.$index2 = jl_Integer_toString(var$1);
},
jur_AbstractSet__init_0 = ($this, $n) => {
    let var$2;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    $this.$index2 = jl_Integer_toString(var$2);
    $this.$next2 = $n;
},
jur_AbstractSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $length;
    $length = $matchResult.$rightBound;
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_AbstractSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_AbstractSet_setType = ($this, $type) => {
    $this.$type4 = $type;
},
jur_AbstractSet_getType = $this => {
    return $this.$type4;
},
jur_AbstractSet_getQualifiedName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index2;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append0(var$3, 60);
    var$1 = jl_StringBuilder_append(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$1, 58);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$1, var$2), 62);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_AbstractSet_toString = $this => {
    return jur_AbstractSet_getQualifiedName($this);
},
jur_AbstractSet_getNext = $this => {
    return $this.$next2;
},
jur_AbstractSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_AbstractSet_first = ($this, $set) => {
    return 1;
},
jur_AbstractSet_processBackRefReplacement = $this => {
    return null;
},
jur_AbstractSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next2;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next2.$isSecondPassVisited = 1;
                $this.$next2 = $set;
            }
            $this.$next2.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$next2 = $set.$next2;
    }
},
jur_AbstractSet__clinit_ = () => {
    jur_AbstractSet_counter = 1;
},
jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    let a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name4 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$caller = null;
}
let jlr_Constructor_getModifiers = $this => {
    let var$1, var$2, var$3;
    a: {
        var$1 = $this.$modifiers;
        var$2 = $this.$accessLevel;
        var$3 = 0;
        switch (var$2) {
            case 1:
                var$3 = 2;
                break a;
            case 2:
                var$3 = 4;
                break a;
            case 3:
                var$3 = 1;
                break a;
            default:
        }
    }
    var$2 = var$1 >>> 6 | 0;
    return var$3 | var$2 & 8 | var$1 << 2 & 16 | var$2 & 32 | (var$1 >>> 8 | 0) & 64 | (var$1 >>> 5 | 0) & 128 | var$1 & 256 | var$1 << 8 & 512 | var$1 << 10 & 1024 | var$1 << 1 & 2048;
},
jlr_Constructor_getParameterTypes = $this => {
    return $this.$parameterTypes.$clone0();
},
jlr_Constructor_toString = $this => {
    let $sb, $i, var$3, $parameterTypes, var$5, var$6, var$7, var$8, var$9;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($sb);
    $i = jlr_Constructor_getModifiers($this);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    if (jlr_Modifier_modifierNames === null)
        jlr_Modifier_modifierNames = $rt_wrapArray(jl_String, [$rt_s(160), $rt_s(161), $rt_s(162), $rt_s(163), $rt_s(164), $rt_s(165), $rt_s(166), $rt_s(167), $rt_s(168), $rt_s(169), $rt_s(170), $rt_s(171)]);
    $parameterTypes = jlr_Modifier_modifierNames;
    var$5 = 0;
    var$6 = jlr_Modifier_canonicalOrder.data;
    var$7 = var$6.length;
    var$8 = 0;
    while (var$8 < var$7) {
        var$9 = var$6[var$8];
        if ($i & var$9) {
            if (var$3.$length2 > 0)
                jl_AbstractStringBuilder_append0(var$3, 32);
            jl_AbstractStringBuilder_append(var$3, $parameterTypes.data[var$5]);
        }
        var$5 = var$5 + 1 | 0;
        var$8 = var$8 + 1 | 0;
    }
    jl_AbstractStringBuilder_append($sb, jl_AbstractStringBuilder_toString(var$3));
    if ($sb.$length2 > 0)
        jl_AbstractStringBuilder_append0($sb, 32);
    jl_AbstractStringBuilder_append($sb, jl_Class_getName($this.$declaringClass));
    jl_AbstractStringBuilder_append0($sb, 40);
    $parameterTypes = jlr_Constructor_getParameterTypes($this);
    $i = 0;
    while (true) {
        var$6 = $parameterTypes.data;
        if ($i >= var$6.length)
            break;
        if ($i > 0)
            jl_AbstractStringBuilder_append0($sb, 44);
        jl_AbstractStringBuilder_append($sb, jl_Class_getName(var$6[$i]));
        $i = $i + 1 | 0;
    }
    jl_AbstractStringBuilder_append0($sb, 41);
    return jl_AbstractStringBuilder_toString($sb);
},
jlr_Constructor_newInstance = ($this, $initargs) => {
    let $instance, var$3, var$4, $i, var$6, var$7;
    if ($this.$modifiers & 1) {
        $instance = new jl_InstantiationException;
        jl_Exception__init_($instance);
        $rt_throw($instance);
    }
    if ($this.$caller === null) {
        $instance = new jl_IllegalAccessException;
        jl_Exception__init_($instance);
        $rt_throw($instance);
    }
    var$3 = $initargs.data;
    var$4 = var$3.length;
    if (var$4 != $this.$parameterTypes.data.length) {
        $instance = new jl_IllegalArgumentException;
        jl_Exception__init_($instance);
        $rt_throw($instance);
    }
    $i = 0;
    while (true) {
        if ($i >= var$4) {
            $instance = new ($this.$declaringClass.$platformClass);
            var$6 = $this.$caller.$_02;
            var$7 = $initargs.data;
            var$6.call($instance, var$7);
            return $instance;
        }
        if (!jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$3[$i] !== null && !jl_Class_isInstance($this.$parameterTypes.data[$i], var$3[$i])) {
            $instance = new jl_IllegalArgumentException;
            jl_Exception__init_($instance);
            $rt_throw($instance);
        }
        if (jl_Class_isPrimitive($this.$parameterTypes.data[$i]) && var$3[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $instance = new jl_IllegalArgumentException;
    jl_Exception__init_($instance);
    $rt_throw($instance);
},
otcir_MethodCaller = $rt_classWithoutFields(0),
ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key = null;
    a.$value0 = null;
}
let ju_MapEntry__init_ = ($this, $theKey, $theValue) => {
    $this.$key = $theKey;
    $this.$value0 = $theValue;
},
ju_MapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_MapEntry();
    ju_MapEntry__init_(var_2, var_0, var_1);
    return var_2;
};
function ju_Hashtable$Entry() {
    let a = this; ju_MapEntry.call(a);
    a.$next4 = null;
    a.$hashcode = 0;
}
function jur_FSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
let jur_FSet_posFSet = null,
jur_FSet_$callClinit = () => {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
},
jur_FSet__init_ = ($this, $groupIndex) => {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex0 = $groupIndex;
},
jur_FSet__init_0 = var_0 => {
    let var_1 = new jur_FSet();
    jur_FSet__init_(var_1, var_0);
    return var_1;
},
jur_FSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $end, $shift;
    $end = jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex0, $stringIndex);
    $shift = $this.$next2.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex0, $end);
    return $shift;
},
jur_FSet_getGroupIndex = $this => {
    return $this.$groupIndex0;
},
jur_FSet_getName = $this => {
    return $rt_s(172);
},
jur_FSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FSet__clinit_ = () => {
    let var$1;
    var$1 = new jur_FSet$PossessiveFSet;
    jur_AbstractSet__init_(var$1);
    jur_FSet_posFSet = var$1;
};
function jur_Lexer() {
    let a = this; jl_Object.call(a);
    a.$pattern0 = null;
    a.$flags0 = 0;
    a.$mode = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
let jur_Lexer_decompTable = null,
jur_Lexer_singleDecompTable = null,
jur_Lexer_singleDecompTableSize = 0,
jur_Lexer_setMode = ($this, $mode) => {
    if ($mode > 0 && $mode < 3)
        $this.$mode = $mode;
    if ($mode == 1) {
        $this.$lookAhead = $this.$ch;
        $this.$lookAheadST = $this.$curST;
        $this.$index = $this.$lookAheadToc;
        $this.$lookAheadToc = $this.$curToc;
        jur_Lexer_movePointer($this);
    }
},
jur_Lexer_isSpecial = $this => {
    return $this.$curST === null ? 0 : 1;
},
jur_Lexer_isNextSpecial = $this => {
    return $this.$lookAheadST === null ? 0 : 1;
},
jur_Lexer_next = $this => {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
},
jur_Lexer_nextSpecial = $this => {
    let $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
},
jur_Lexer_movePointer = $this => {
    let $reread, $nonCap, var$3, $behind, $mod, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index;
    while (true) {
        $reread = 0;
        $nonCap = $this.$index >= $this.$pattern0.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAhead = $nonCap;
        $this.$lookAheadST = null;
        if ($this.$mode == 4) {
            if ($nonCap != 92)
                return;
            $nonCap = $this.$index;
            var$3 = $this.$pattern0.data;
            $nonCap = $nonCap >= var$3.length ? 0 : var$3[jur_Lexer_nextIndex($this)];
            $this.$lookAhead = $nonCap;
            switch ($nonCap) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index = $this.$prevNW;
                    return;
            }
            $this.$mode = $this.$savedMode;
            $this.$lookAhead = $this.$index > ($this.$pattern0.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            $nonCap = $this.$lookAhead;
            if ($nonCap != 92) {
                $behind = $this.$mode;
                if ($behind == 1)
                    switch ($nonCap) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern0.data[$this.$index] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern0.data[$this.$index];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern0.data[$this.$index];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $mod = jur_Lexer_readFlags($this);
                                                $this.$lookAhead = $mod;
                                                if ($mod < 256) {
                                                    $this.$flags0 = $mod;
                                                    $mod = $mod << 16;
                                                    $this.$lookAhead = $mod;
                                                    $this.$lookAhead = (-1073741784) | $mod;
                                                    break b;
                                                }
                                                $mod = $mod & 255;
                                                $this.$lookAhead = $mod;
                                                $this.$flags0 = $mod;
                                                $mod = $mod << 16;
                                                $this.$lookAhead = $mod;
                                                $this.$lookAhead = (-16777176) | $mod;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $behind = $this.$index;
                            var$3 = $this.$pattern0.data;
                            switch ($behind >= var$3.length ? 42 : var$3[$behind]) {
                                case 43:
                                    $this.$lookAhead = $nonCap | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $nonCap | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $nonCap | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            jur_Lexer_setMode($this, 2);
                            break a;
                        case 93:
                            if ($behind != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $nonCap);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($behind == 2)
                    switch ($nonCap) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                $nonCap = $this.$index >= ($this.$pattern0.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = $nonCap;
                    switch ($nonCap) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $nonCap;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_($this.$pattern0, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode;
                            $this.$mode = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            $nonCap = $this.$index;
                            var$3 = $this.$pattern0.data;
                            if ($nonCap >= (var$3.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index));
                            $this.$lookAhead = var$3[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
},
jur_Lexer_parseCharClassName = $this => {
    let $sb, $ch, var$3, var$4, $res, var$6;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($sb, 10);
    $ch = $this.$index;
    var$3 = $this.$pattern0;
    var$4 = var$3.data;
    if ($ch < (var$4.length - 2 | 0)) {
        if (var$4[$ch] != 123) {
            $sb = jl_String__init_(var$3, jur_Lexer_nextIndex($this), 1);
            $res = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($res);
            jl_StringBuilder_append(jl_StringBuilder_append($res, $rt_s(173)), $sb);
            return jl_AbstractStringBuilder_toString($res);
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while (true) {
                var$6 = $this.$index;
                var$3 = $this.$pattern0.data;
                if (var$6 >= (var$3.length - 2 | 0))
                    break;
                $ch = var$3[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                jl_AbstractStringBuilder_append0($sb, $ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    }
    if (!$sb.$length2)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    $res = jl_AbstractStringBuilder_toString($sb);
    if ($res.$nativeString.length == 1) {
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        jl_StringBuilder_append(jl_StringBuilder_append($sb, $rt_s(173)), $res);
        return jl_AbstractStringBuilder_toString($sb);
    }
    b: {
        c: {
            if ($res.$nativeString.length > 3) {
                if (jl_String_startsWith($res, $rt_s(173)))
                    break c;
                if (jl_String_startsWith($res, $rt_s(174)))
                    break c;
            }
            break b;
        }
        $res = jl_String_substring0($res, 2);
    }
    return $res;
},
jur_Lexer_processQuantifier = ($this, $ch) => {
    let $sb, $min, $max, $mod, var$6, $$je;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($sb, 4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            $mod = $this.$index;
            var$6 = $this.$pattern0.data;
            if ($mod >= var$6.length)
                break a;
            $ch = var$6[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                    jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            jl_AbstractStringBuilder_append0($sb, $ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    if ($sb.$length2 > 0)
        b: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
    $ch = $this.$index;
    var$6 = $this.$pattern0.data;
    $mod = $ch >= var$6.length ? 42 : var$6[$ch];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    $sb = new jur_Quantifier;
    $sb.$min0 = $min;
    $sb.$max1 = $max;
    return $sb;
},
jur_Lexer_toString = $this => {
    return $this.$orig;
},
jur_Lexer_isEmpty = $this => {
    return !$this.$ch && !$this.$lookAhead && $this.$index == $this.$patternFullLength && !jur_Lexer_isSpecial($this) ? 1 : 0;
},
jur_Lexer_isLetter0 = $ch => {
    return $ch < 0 ? 0 : 1;
},
jur_Lexer_isLetter = $this => {
    return !jur_Lexer_isEmpty($this) && !jur_Lexer_isSpecial($this) && jur_Lexer_isLetter0($this.$ch) ? 1 : 0;
},
jur_Lexer_isHighSurrogate0 = $this => {
    let var$1;
    var$1 = $this.$ch;
    return var$1 <= 56319 && var$1 >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate0 = $this => {
    let var$1;
    var$1 = $this.$ch;
    return var$1 <= 57343 && var$1 >= 56320 ? 1 : 0;
},
jur_Lexer_isHighSurrogate = $ch => {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate = $ch => {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
},
jur_Lexer_readHex = ($this, $max) => {
    let $st, $length, $i, var$5, $$je;
    $st = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($st, $max);
    $length = $this.$pattern0.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index >= $length)
            break;
        jl_AbstractStringBuilder_append0($st, $this.$pattern0.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($st), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $max;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
},
jur_Lexer_readOctals = $this => {
    let $max, $i, var$3, $length, $res, var$6;
    $max = 3;
    $i = 1;
    var$3 = $this.$pattern0.data;
    $length = var$3.length - 2 | 0;
    $res = jl_Character_digit(var$3[$this.$index], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    var$6 = $this.$index;
                    if (var$6 >= $length)
                        break a;
                    var$6 = jl_Character_digit($this.$pattern0.data[var$6], 8);
                    if (var$6 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$6 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index));
},
jur_Lexer_readFlags = $this => {
    let $pos, $res, var$3, var$4;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        var$3 = $this.$index;
        var$4 = $this.$pattern0.data;
        if (var$3 >= var$4.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, var$3));
        b: {
            c: {
                switch (var$4[var$3]) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, var$3));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
},
jur_Lexer_nextIndex = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$index;
    $this.$prevNW = var$1;
    if (!($this.$flags0 & 4))
        $this.$index = var$1 + 1 | 0;
    else {
        var$2 = $this.$pattern0.data.length - 2 | 0;
        $this.$index = var$1 + 1 | 0;
        a: while (true) {
            var$3 = $this.$index;
            if (var$3 < var$2 && jl_Character_isWhitespace($this.$pattern0.data[var$3])) {
                $this.$index = $this.$index + 1 | 0;
                continue;
            }
            var$3 = $this.$index;
            if (var$3 >= var$2)
                break;
            var$4 = $this.$pattern0.data;
            if (var$4[var$3] != 35)
                break;
            $this.$index = var$3 + 1 | 0;
            while (true) {
                var$5 = $this.$index;
                if (var$5 >= var$2)
                    continue a;
                var$1 = var$4[var$5];
                if (var$1 != 10 && var$1 != 13 && var$1 != 133 && (var$1 | 1) != 8233 ? 0 : 1)
                    continue a;
                $this.$index = var$5 + 1 | 0;
            }
        }
    }
    return $this.$prevNW;
},
jur_Lexer_getDecomposition = $ch => {
    return jur_Lexer_decompTable.$get6($ch);
},
jur_Lexer_nextCodePoint = $this => {
    let $high, $lowExpectedIndex, var$3, $low;
    $high = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        var$3 = $this.$pattern0.data;
        if ($lowExpectedIndex < var$3.length) {
            $low = var$3[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
},
jur_Lexer_getIndex = $this => {
    return $this.$curToc;
};
function jur_PatternSyntaxException() {
    let a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern1 = null;
    a.$index1 = 0;
}
let jur_PatternSyntaxException__init_0 = ($this, $description, $pattern, $index) => {
    jl_Exception__init_($this);
    $this.$index1 = (-1);
    $this.$desc = $description;
    $this.$pattern1 = $pattern;
    $this.$index1 = $index;
},
jur_PatternSyntaxException__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PatternSyntaxException_getMessage = $this => {
    let $filler, var$2, $temp, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $filler = $rt_s(8);
    var$2 = $this.$index1;
    if (var$2 >= 1) {
        $temp = $rt_createCharArray(var$2);
        var$4 = $temp.data;
        var$2 = 0;
        var$5 = var$4.length;
        if (var$2 > var$5) {
            $filler = new jl_IllegalArgumentException;
            jl_Exception__init_($filler);
            $rt_throw($filler);
        }
        while (var$2 < var$5) {
            var$6 = var$2 + 1 | 0;
            var$4[var$2] = 32;
            var$2 = var$6;
        }
        $filler = jl_String__init_0($temp);
    }
    var$7 = $this.$desc;
    var$8 = $this.$pattern1;
    if (var$8 !== null && var$8.$nativeString.length) {
        var$9 = $this.$index1;
        var$8 = $this.$pattern1;
        var$10 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$10);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(var$10, var$9), $rt_s(20)), var$8), $rt_s(20)), $filler);
        $filler = jl_AbstractStringBuilder_toString(var$10);
    } else
        $filler = $rt_s(8);
    var$8 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$8);
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, var$7), $filler);
    return jl_AbstractStringBuilder_toString(var$8);
},
jlr_Array = $rt_classWithoutFields(),
jlr_Array_getLength = var$1 => {
    if (var$1 === null || var$1.constructor.$meta.item === 'undefined') {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
},
jlr_Array_newInstance = (var$1, $length) => {
    if (var$1 === null) {
        var$1 = new jl_NullPointerException;
        jl_Exception__init_(var$1);
        $rt_throw(var$1);
    }
    if (var$1 === $rt_cls($rt_voidcls)) {
        var$1 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$1);
        $rt_throw(var$1);
    }
    if ($length >= 0)
        return jlr_Array_newInstanceImpl(var$1.$platformClass, $length);
    var$1 = new jl_NegativeArraySizeException;
    jl_Exception__init_(var$1);
    $rt_throw(var$1);
},
jlr_Array_newInstanceImpl = (var$1, var$2) => {
    if (var$1.$meta.primitive) {
        switch (var$1) {
        }
        ;
    }
    return $rt_createArray(var$1, var$2);
},
jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
function otcir_MethodCaller$forJs$lambda$_1_0() {
    jl_Object.call(this);
    this.$_02 = null;
}
let ju_SequencedCollection = $rt_classWithoutFields(0),
ju_List = $rt_classWithoutFields(0);
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
let ju_AbstractList_iterator = $this => {
    let var$1;
    var$1 = new ju_AbstractList$1;
    var$1.$this$08 = $this;
    var$1.$modCount1 = $this.$modCount;
    var$1.$size12 = $this.$size3;
    var$1.$removeIndex0 = (-1);
    return var$1;
},
ju_RandomAccess = $rt_classWithoutFields(0);
function ju_ArrayList() {
    let a = this; ju_AbstractList.call(a);
    a.$array2 = null;
    a.$size3 = 0;
}
let ju_ArrayList__init_0 = $this => {
    $this.$array2 = $rt_createArray(jl_Object, 10);
},
ju_ArrayList__init_ = () => {
    let var_0 = new ju_ArrayList();
    ju_ArrayList__init_0(var_0);
    return var_0;
},
ju_ArrayList_ensureCapacity = ($this, $minCapacity) => {
    let var$2, $newLength;
    var$2 = $this.$array2.data.length;
    if (var$2 < $minCapacity) {
        $newLength = var$2 >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max(var$2 * 2 | 0, 5));
        $this.$array2 = ju_Arrays_copyOf($this.$array2, $newLength);
    }
},
ju_ArrayList_get = ($this, $index) => {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array2.data[$index];
},
ju_ArrayList_add = ($this, $element) => {
    let var$2, var$3;
    ju_ArrayList_ensureCapacity($this, $this.$size3 + 1 | 0);
    var$2 = $this.$array2.data;
    var$3 = $this.$size3;
    $this.$size3 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
},
ju_ArrayList_remove = ($this, $i) => {
    let var$2, $old, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    var$2 = $this.$array2.data;
    $old = var$2[$i];
    var$4 = $this.$size3 - 1 | 0;
    $this.$size3 = var$4;
    while ($i < var$4) {
        $i_0 = $i + 1 | 0;
        var$2[$i] = var$2[$i_0];
        $i = $i_0;
    }
    var$2[var$4] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
},
ju_ArrayList_clear = $this => {
    ju_Arrays_fill0($this.$array2, 0, $this.$size3, null);
    $this.$size3 = 0;
    $this.$modCount = $this.$modCount + 1 | 0;
},
ju_ArrayList_checkIndex = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$size3)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
ju_ArrayList_forEach = ($this, $action) => {
    let $i;
    $i = 0;
    while ($i < $this.$size3) {
        $action.$accept($this.$array2.data[$i]);
        $i = $i + 1 | 0;
    }
},
jur_NonCapFSet = $rt_classWithoutFields(jur_FSet),
jur_NonCapFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$groupIndex0;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_NonCapFSet_getName = $this => {
    return $rt_s(175);
},
jur_NonCapFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_AheadFSet = $rt_classWithoutFields(jur_FSet),
jur_AheadFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_AheadFSet_getName = $this => {
    return $rt_s(176);
},
jur_BehindFSet = $rt_classWithoutFields(jur_FSet),
jur_BehindFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if (jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex0) != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
},
jur_BehindFSet_getName = $this => {
    return $rt_s(177);
};
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index5 = 0;
}
let jur_AtomicFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$groupIndex0;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    $this.$index5 = $stringIndex;
    return $stringIndex;
},
jur_AtomicFSet_getName = $this => {
    return $rt_s(178);
},
jur_AtomicFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FinalSet = $rt_classWithoutFields(jur_FSet),
jur_FinalSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($matchResult.$mode0 != 1 && $stringIndex != $matchResult.$rightBound)
        return (-1);
    $matchResult.$valid1 = 1;
    jur_MatchResultImpl_setEnd($matchResult, 0, $stringIndex);
    return $stringIndex;
},
jur_FinalSet_getName = $this => {
    return $rt_s(179);
};
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
let jur_LeafSet__init_ = $this => {
    jur_AbstractSet__init_($this);
    $this.$charCount0 = 1;
},
jur_LeafSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next2.$matches($stringIndex + $shift | 0, $testString, $matchResult);
},
jur_LeafSet_charCount = $this => {
    return $this.$charCount0;
},
jur_LeafSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_EmptySet = $rt_classWithoutFields(jur_LeafSet),
jur_EmptySet__init_0 = ($this, $next) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount0 = 1;
    $this.$type4 = 1;
    $this.$charCount0 = 0;
},
jur_EmptySet__init_ = var_0 => {
    let var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
},
jur_EmptySet_accepts = ($this, $stringIndex, $testString) => {
    return 0;
},
jur_EmptySet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startStr, var$6, $high;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$6 = $testString;
    while (true) {
        $high = $rt_compare($stringIndex, $strLength);
        if ($high > 0)
            return (-1);
        if ($high < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$6, $stringIndex)) && $stringIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt(var$6, $stringIndex - 1 | 0))) {
            $stringIndex = $stringIndex + 1 | 0;
            continue;
        }
        if ($this.$next2.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_EmptySet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $strLength, $startStr, var$7;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$7 = $testString;
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength && jl_Character_isLowSurrogate(jl_String_charAt(var$7, $startSearch)) && $startSearch > $startStr && jl_Character_isHighSurrogate(jl_String_charAt(var$7, $startSearch - 1 | 0))) {
            $startSearch = $startSearch + (-1) | 0;
            continue;
        }
        if ($this.$next2.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_EmptySet_getName = $this => {
    return $rt_s(180);
},
jur_EmptySet_hasConsumed = ($this, $mr) => {
    return 0;
};
function jur_JointSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
let jur_JointSet__init_ = ($this, $children, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$groupIndex0;
},
jur_JointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_JointSet();
    jur_JointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_JointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $shift;
    if ($this.$children === null)
        return (-1);
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $start);
            return (-1);
        }
        $shift = (ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_JointSet_setNext = ($this, $next) => {
    $this.$fSet.$next2 = $next;
},
jur_JointSet_getName = $this => {
    return $rt_s(181);
},
jur_JointSet_first = ($this, $set) => {
    let $i, var$3;
    a: {
        $i = $this.$children;
        if ($i !== null) {
            var$3 = ju_AbstractList_iterator($i);
            while (true) {
                if (!ju_AbstractList$1_hasNext(var$3))
                    break a;
                if (!(ju_AbstractList$1_next(var$3)).$first1($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
},
jur_JointSet_hasConsumed = ($this, $matchResult) => {
    return jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex) >= 0 && jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex) == jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex) ? 0 : 1;
},
jur_JointSet_processSecondPass = $this => {
    let $child, $childrenSize, $i, $set, var$5, var$6, var$7, var$8, var$9;
    $this.$isSecondPassVisited = 1;
    $child = $this.$fSet;
    if ($child !== null && !$child.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($child);
    a: {
        $child = $this.$children;
        if ($child !== null) {
            $childrenSize = $child.$size3;
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = ju_ArrayList_get($this.$children, $i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    ju_ArrayList_remove($this.$children, $i);
                    var$5 = $this.$children;
                    if ($i < 0)
                        break;
                    var$6 = var$5.$size3;
                    if ($i > var$6)
                        break;
                    ju_ArrayList_ensureCapacity(var$5, var$6 + 1 | 0);
                    var$7 = var$5.$size3;
                    var$8 = var$7;
                    while (var$8 > $i) {
                        var$9 = var$5.$array2.data;
                        var$9[var$8] = var$9[var$8 - 1 | 0];
                        var$8 = var$8 + (-1) | 0;
                    }
                    var$5.$array2.data[$i] = $set;
                    var$5.$size3 = var$7 + 1 | 0;
                    var$5.$modCount = var$5.$modCount + 1 | 0;
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
            $child = new jl_IndexOutOfBoundsException;
            jl_Exception__init_($child);
            $rt_throw($child);
        }
    }
    if ($this.$next2 !== null)
        jur_AbstractSet_processSecondPass($this);
},
jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet),
jur_NonCapJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $shift;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $start);
            return (-1);
        }
        $shift = (ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_NonCapJointSet_getName = $this => {
    return $rt_s(182);
},
jur_NonCapJointSet_hasConsumed = ($this, $matchResult) => {
    return !jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex) ? 0 : 1;
},
jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet),
jur_AtomicJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while ($i < $size) {
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next2.$matches($this.$fSet.$index5, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $start);
    return (-1);
},
jur_AtomicJointSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_AtomicJointSet_getName = $this => {
    return $rt_s(182);
},
jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    $i = 0;
    while ($i < $size) {
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next2.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_PositiveLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookAhead_getName = $this => {
    return $rt_s(183);
},
jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookAhead_getName = $this => {
    return $rt_s(184);
},
jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $leftBound, $shift, $i;
    $size = $this.$children.$size3;
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    a: {
        $shift = $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                if ((ju_ArrayList_get($this.$children, $i)).$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
},
jur_PositiveLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookBehind_getName = $this => {
    return $rt_s(185);
},
jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if ((ju_ArrayList_get($this.$children, $i)).$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookBehind_getName = $this => {
    return $rt_s(186);
};
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
let jur_SingleSet__init_ = ($this, $child, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$groupIndex0;
},
jur_SingleSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_SingleSet();
    jur_SingleSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_SingleSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $shift;
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $start);
    return (-1);
},
jur_SingleSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_findBack = ($this, $stringIndex, $lastIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_first = ($this, $set) => {
    return $this.$kid.$first1($set);
},
jur_SingleSet_processBackRefReplacement = $this => {
    let $set;
    $set = new jur_BackReferencedSingleSet;
    jur_SingleSet__init_($set, $this.$kid, $this.$fSet);
    $this.$next2 = $set;
    return $set;
},
jur_SingleSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$fSet;
    if ($set !== null && !$set.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($set);
    $set = $this.$kid;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
},
jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException),
jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException),
jur_SpecialToken = $rt_classWithoutFields();
function jur_AbstractCharClass() {
    let a = this; jur_SpecialToken.call(a);
    a.$alt = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
let jur_AbstractCharClass_charClasses = null,
jur_AbstractCharClass__init_ = $this => {
    let var$1;
    var$1 = new ju_BitSet;
    var$1.$data = $rt_createIntArray(64);
    $this.$lowHighSurrogates = var$1;
},
jur_AbstractCharClass_getBits = $this => {
    return null;
},
jur_AbstractCharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_AbstractCharClass_hasLowHighSurrogates = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    if (!$this.$altSurrogates)
        var$1 = ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
    else {
        a: {
            var$2 = $this.$lowHighSurrogates;
            var$1 = 0;
            var$3 = var$2.$length3;
            if (var$1 < var$3) {
                var$4 = var$2.$data.data;
                var$5 = (var$4[0] ^ (-1)) >>> 0 | 0;
                if (var$5)
                    var$1 = jl_Integer_numberOfTrailingZeros(var$5) + var$1 | 0;
                else {
                    var$1 = (var$3 + 31 | 0) / 32 | 0;
                    var$5 = 1;
                    while (var$5 < var$1) {
                        if (var$4[var$5] != (-1)) {
                            var$1 = (var$5 * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$4[var$5] ^ (-1)) | 0;
                            break a;
                        }
                        var$5 = var$5 + 1 | 0;
                    }
                    var$1 = var$3;
                }
            }
        }
        var$1 = var$1 >= 2048 ? 0 : 1;
    }
    return var$1;
},
jur_AbstractCharClass_mayContainSupplCodepoints = $this => {
    return $this.$mayContainSupplCodepoints;
},
jur_AbstractCharClass_getInstance = $this => {
    return $this;
},
jur_AbstractCharClass_getSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$1;
        var$2.$this$044 = $this;
        var$2.$val$lHS = $lHS;
        jur_AbstractCharClass__init_(var$2);
        $this.$charClassWithSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
},
jur_AbstractCharClass_getWithoutSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$2;
        var$2.$this$041 = $this;
        var$2.$val$lHS0 = $lHS;
        var$2.$val$thisClass = $this;
        jur_AbstractCharClass__init_(var$2);
        $this.$charClassWithoutSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$alt);
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
},
jur_AbstractCharClass_hasUCI = $this => {
    return 0;
},
jur_AbstractCharClass_setNegative = ($this, $value) => {
    let var$2;
    var$2 = $this.$alt;
    if (var$2 ^ $value) {
        $this.$alt = var$2 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_AbstractCharClass_isNegative = $this => {
    return $this.$alt;
},
jur_AbstractCharClass_intersects = ($cc1, $cc2) => {
    let var$3, var$4;
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null) {
        $cc1 = $cc1.$getBits();
        $cc2 = $cc2.$getBits();
        var$3 = jl_Math_min($cc1.$data.data.length, $cc2.$data.data.length);
        var$4 = 0;
        a: {
            while (var$4 < var$3) {
                if ($cc1.$data.data[var$4] & $cc2.$data.data[var$4]) {
                    var$3 = 1;
                    break a;
                }
                var$4 = var$4 + 1 | 0;
            }
            var$3 = 0;
        }
        return var$3;
    }
    return 1;
},
jur_AbstractCharClass_getPredefinedClass = ($name, $negative) => {
    let var$3, var$4, var$5;
    var$3 = 0;
    while (true) {
        var$4 = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data;
        if (var$3 >= var$4.length) {
            var$5 = new ju_MissingResourceException;
            jl_RuntimeException__init_(var$5, $rt_s(8));
            var$5.$className = $rt_s(8);
            var$5.$key0 = $name;
            $rt_throw(var$5);
        }
        var$4 = var$4[var$3].data;
        if (jl_String_equals($name, var$4[0]))
            break;
        var$3 = var$3 + 1 | 0;
    }
    return jur_AbstractCharClass$LazyCharClass_getValue(var$4[1], $negative);
},
jur_AbstractCharClass__clinit_ = () => {
    jur_AbstractCharClass_charClasses = new jur_AbstractCharClass$PredefinedCharacterClasses;
};
function ju_MissingResourceException() {
    let a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
function jur_CharClass() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
let jur_CharClass__init_2 = $this => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_();
},
jur_CharClass__init_ = () => {
    let var_0 = new jur_CharClass();
    jur_CharClass__init_2(var_0);
    return var_0;
},
jur_CharClass__init_1 = ($this, $ci, $uci) => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_();
    $this.$ci = $ci;
    $this.$uci = $uci;
},
jur_CharClass__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass();
    jur_CharClass__init_1(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass_add0 = ($this, $ch) => {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                ju_BitSet_set0($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
        else
            ju_BitSet_set0($this.$lowHighSurrogates, $ch - 55296 | 0);
    }
    if ($this.$inverted)
        ju_BitSet_clear($this.$bits, $ch);
    else
        ju_BitSet_set0($this.$bits, $ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_CharClass_add1 = ($this, $cc) => {
    let $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$alt)
                ju_BitSet_andNot($this.$bits, $cc.$getBits());
            else
                ju_BitSet_and($this.$bits, $cc.$getBits());
        } else if (!$cc.$alt)
            ju_BitSet_or($this.$bits, $cc.$getBits());
        else {
            ju_BitSet_xor($this.$bits, $cc.$getBits());
            ju_BitSet_and($this.$bits, $cc.$getBits());
            $this.$alt = $this.$alt ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$4 = new jur_CharClass$5;
                var$4.$this$024 = $this;
                var$4.$val$curAlt10 = $curAlt;
                var$4.$val$nb4 = $nb;
                var$4.$val$cc2 = $cc;
                jur_AbstractCharClass__init_(var$4);
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$4;
                var$4.$this$049 = $this;
                var$4.$val$curAlt2 = $curAlt;
                var$4.$val$nb2 = $nb;
                var$4.$val$cc0 = $cc;
                jur_AbstractCharClass__init_(var$4);
                $this.$nonBitSet = var$4;
            }
        } else {
            if ($curAlt && !$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                $nb = new jur_CharClass$1;
                $nb.$this$035 = $this;
                $nb.$val$cc1 = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else if (!$curAlt) {
                $nb = new jur_CharClass$3;
                $nb.$this$04 = $this;
                $nb.$val$curAlt = $curAlt;
                $nb.$val$cc = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$2;
                $nb.$this$05 = $this;
                $nb.$val$curAlt0 = $curAlt;
                $nb.$val$cc3 = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
    return $this;
},
jur_CharClass_add = ($this, $i, $end) => {
    let var$3, var$4, var$5, var$6, var$7;
    if ($i > $end) {
        var$3 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$3);
        $rt_throw(var$3);
    }
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            $end = $end + 1 | 0;
            while (true) {
                if ($i >= $end)
                    break a;
                jur_CharClass_add0($this, $i);
                $i = $i + 1 | 0;
            }
        }
        if (!$this.$inverted)
            ju_BitSet_set($this.$bits, $i, $end + 1 | 0);
        else {
            var$3 = $this.$bits;
            $end = $end + 1 | 0;
            if ($i >= 0 && $i <= $end) {
                var$4 = var$3.$length3;
                if ($i < var$4) {
                    var$5 = jl_Math_min(var$4, $end);
                    if ($i != var$5) {
                        var$6 = $i / 32 | 0;
                        $end = var$5 / 32 | 0;
                        if (var$6 == $end) {
                            var$7 = var$3.$data.data;
                            var$7[var$6] = var$7[var$6] & (ju_BitSet_trailingOneBits(var$3, $i) | ju_BitSet_trailingZeroBits(var$3, var$5));
                        } else {
                            var$7 = var$3.$data.data;
                            var$7[var$6] = var$7[var$6] & ju_BitSet_trailingOneBits(var$3, $i);
                            var$4 = var$6 + 1 | 0;
                            while (var$4 < $end) {
                                var$3.$data.data[var$4] = 0;
                                var$4 = var$4 + 1 | 0;
                            }
                            if (var$5 & 31) {
                                var$7 = var$3.$data.data;
                                var$7[$end] = var$7[$end] & ju_BitSet_trailingZeroBits(var$3, var$5);
                            }
                        }
                        ju_BitSet_recalculateLength(var$3);
                    }
                }
            } else {
                var$3 = new jl_IndexOutOfBoundsException;
                jl_Exception__init_(var$3);
                $rt_throw(var$3);
            }
        }
    }
    return $this;
},
jur_CharClass_union = ($this, $clazz) => {
    let var$2, $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if ($curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && jur_CharClass_getBits(var$2) !== null) {
        $curAlt = $this.$alt;
        if (!($curAlt ^ $clazz.$alt)) {
            if (!$curAlt)
                ju_BitSet_or($this.$bits, jur_CharClass_getBits(var$2));
            else
                ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
        } else if ($curAlt)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits(var$2));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits(var$2));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            $this.$alt = 1;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$11;
                var$2.$this$021 = $this;
                var$2.$val$curAlt7 = $curAlt;
                var$2.$val$nb3 = $nb;
                var$2.$val$clazz9 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$10;
                var$2.$this$025 = $this;
                var$2.$val$curAlt9 = $curAlt;
                var$2.$val$nb0 = $nb;
                var$2.$val$clazz = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$7;
                    $nb.$this$052 = $this;
                    $nb.$val$clazz2 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$6;
                    $nb.$this$026 = $this;
                    $nb.$val$clazz8 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$9;
                $nb.$this$014 = $this;
                $nb.$val$clazz4 = $clazz;
                $nb.$val$curAlt1 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$8;
                $nb.$this$011 = $this;
                $nb.$val$clazz5 = $clazz;
                $nb.$val$curAlt5 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_intersection = ($this, $clazz) => {
    let var$2, $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if (!$curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && jur_CharClass_getBits(var$2) !== null) {
        $curAlt = $this.$alt;
        if (!($curAlt ^ $clazz.$alt)) {
            if (!$curAlt)
                ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            else
                ju_BitSet_or($this.$bits, jur_CharClass_getBits(var$2));
        } else if (!$curAlt)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits(var$2));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits(var$2));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            $this.$alt = 0;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$17;
                var$2.$this$023 = $this;
                var$2.$val$curAlt8 = $curAlt;
                var$2.$val$nb1 = $nb;
                var$2.$val$clazz3 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$16;
                var$2.$this$030 = $this;
                var$2.$val$curAlt6 = $curAlt;
                var$2.$val$nb = $nb;
                var$2.$val$clazz7 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$13;
                    $nb.$this$027 = $this;
                    $nb.$val$clazz0 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$12;
                    $nb.$this$048 = $this;
                    $nb.$val$clazz1 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$15;
                $nb.$this$017 = $this;
                $nb.$val$clazz10 = $clazz;
                $nb.$val$curAlt4 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$14;
                $nb.$this$012 = $this;
                $nb.$val$clazz6 = $clazz;
                $nb.$val$curAlt3 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_contains = ($this, $ch) => {
    let var$2;
    var$2 = $this.$nonBitSet;
    if (var$2 !== null)
        return $this.$alt ^ var$2.$contains($ch);
    return $this.$alt ^ ju_BitSet_get($this.$bits, $ch);
},
jur_CharClass_getBits = $this => {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
},
jur_CharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_CharClass_getInstance = $this => {
    let $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = jur_CharClass_getBits($this);
    $res = new jur_CharClass$18;
    $res.$this$020 = $this;
    $res.$val$bs = $bs;
    jur_AbstractCharClass__init_($res);
    return jur_AbstractCharClass_setNegative($res, $this.$alt);
},
jur_CharClass_toString = $this => {
    let $temp, $i, var$3;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$bits, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append1($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append0($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
    }
    var$3 = $temp.$length2;
    if (var$3 > 0)
        jl_StringBuilder_deleteCharAt($temp, var$3 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
},
jur_CharClass_hasUCI = $this => {
    return $this.$hasUCI0;
};
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
let jur_QuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$type4 = $type;
},
jur_QuantifierSet_getInnerSet = $this => {
    return $this.$innerSet;
},
jur_QuantifierSet_first = ($this, $set) => {
    return !$this.$innerSet.$first1($set) && !$this.$next2.$first1($set) ? 0 : 1;
},
jur_QuantifierSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_QuantifierSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next2;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next2.$isSecondPassVisited = 1;
            $this.$next2 = $set;
        }
        $this.$next2.$processSecondPass();
    }
    $set = $this.$innerSet;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$innerSet = $set.$next2;
    }
};
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
let jur_LeafQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
},
jur_LeafQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_LeafQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
},
jur_LeafQuantifierSet_getName = $this => {
    return $rt_s(187);
};
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
let jur_CompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
},
jur_CompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next2.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CompositeQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier0);
},
jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_GroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_GroupQuantifierSet_getName = $this => {
    return $rt_s(188);
},
jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_AltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next2.$matches($stringIndex, $testString, $matchResult);
    return $shift;
},
jur_AltQuantifierSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
    $this.$innerSet.$setNext($next);
},
jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_UnifiedQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_UnifiedQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next2.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
},
jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields(),
jur_AbstractCharClass$PredefinedCharacterClasses_space = null,
jur_AbstractCharClass$PredefinedCharacterClasses_digit = null,
jur_AbstractCharClass$PredefinedCharacterClasses_contents = null,
jur_AbstractCharClass$PredefinedCharacterClasses__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_0();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_0();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_0();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_0();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_0();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_0();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_0();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_0();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_0();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_0();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_0();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_0();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(253);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(254);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(255);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(256);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(257);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(258);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(259);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(260);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(261);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(262);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(263);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(264);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(265);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(266);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(267);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(268);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(269);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(270);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(271);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(272);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(273);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(274);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(275);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(276);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(277);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(278);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(279);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(280);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(281);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(282);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(283);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(284);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(285);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(286);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(287);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(288);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(289);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(290);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(291);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(292);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(293);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(294);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(295);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(296);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(297);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(298);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(299);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(300);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(301);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(302);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(303);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(304);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(305);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(306);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(307);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(308);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(309);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(310);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(311);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(312);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(313);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(314);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(315);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(316);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(317);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(318);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(319);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(320);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(321);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(322);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(323);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(324);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(325);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(326);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(327);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(328);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(329);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(330);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(331);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(332);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(333);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(334);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(335);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(336);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(337);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(338);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(339);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(340);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(341);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(342);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(343);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(344);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(345);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(346);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(347);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(348);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(349);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(350);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(351);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(352);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(353);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(354);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(355);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(356);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(357);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(358);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(359);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(360);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(361);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(362);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(363);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(364);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(365);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_2(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(366);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(367);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(368);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(369);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(370);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(371);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(372);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(373);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(374);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(375);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(376);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(377);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(378);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(379);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(380);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(381);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(382);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
};
function jur_AbstractCharClass$LazyCharClass() {
    let a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
let jur_AbstractCharClass$LazyCharClass_getValue = ($this, $negative) => {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
};
function jur_Quantifier() {
    let a = this; jur_SpecialToken.call(a);
    a.$min0 = 0;
    a.$max1 = 0;
}
let jur_Quantifier_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$min0;
    var$2 = $this.$max1;
    var$3 = var$2 != 2147483647 ? jl_Integer_toString(var$2) : $rt_s(8);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(var$4, 123);
    var$5 = jl_StringBuilder_append0(var$4, var$1);
    jl_AbstractStringBuilder_append0(var$5, 44);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$5, var$3), 125);
    return jl_AbstractStringBuilder_toString(var$4);
},
jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet),
jur_FSet$PossessiveFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_FSet$PossessiveFSet_getName = $this => {
    return $rt_s(383);
},
jur_FSet$PossessiveFSet_hasConsumed = ($this, $mr) => {
    return 0;
};
function ju_BitSet() {
    let a = this; jl_Object.call(a);
    a.$data = null;
    a.$length3 = 0;
}
let ju_BitSet__init_0 = $this => {
    $this.$data = $rt_createIntArray(2);
},
ju_BitSet__init_ = () => {
    let var_0 = new ju_BitSet();
    ju_BitSet__init_0(var_0);
    return var_0;
},
ju_BitSet_set0 = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length3) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length3 = $bitIndex + 1 | 0;
    }
    var$4 = $this.$data.data;
    var$4[$index] = var$4[$index] | 1 << ($bitIndex % 32 | 0);
},
ju_BitSet_set = ($this, $fromIndex, $toIndex) => {
    let $fromDataIndex, $toDataIndex, var$5, $i, var$7;
    if ($fromIndex >= 0) {
        $fromDataIndex = $rt_compare($fromIndex, $toIndex);
        if ($fromDataIndex <= 0) {
            if (!$fromDataIndex)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($toIndex > $this.$length3) {
                ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                $this.$length3 = $toIndex;
            }
            if ($fromDataIndex == $toDataIndex) {
                var$5 = $this.$data.data;
                var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
            } else {
                var$5 = $this.$data.data;
                var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    $this.$data.data[$i] = (-1);
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31) {
                    var$5 = $this.$data.data;
                    var$5[$toDataIndex] = var$5[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
                }
            }
            return;
        }
    }
    var$7 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$7);
    $rt_throw(var$7);
},
ju_BitSet_trailingZeroBits = ($this, $num) => {
    return (-1) << ($num % 32 | 0);
},
ju_BitSet_trailingOneBits = ($this, $num) => {
    $num = $num % 32 | 0;
    return !$num ? 0 : (-1) >>> (32 - $num | 0) | 0;
},
ju_BitSet_clear = ($this, $bitIndex) => {
    let var$2, $index, var$4, var$5, var$6;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    if ($index < var$4.length) {
        var$5 = var$4[$index];
        var$6 = ($bitIndex % 32 | 0) & 31;
        var$4[$index] = var$5 & ((-2) << var$6 | ((-2) >>> (32 - var$6 | 0) | 0));
        if ($bitIndex == ($this.$length3 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
},
ju_BitSet_get = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    return $index < var$4.length && var$4[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
},
ju_BitSet_nextSetBit = ($this, $fromIndex) => {
    let var$2, $top, $index, var$5, $i;
    if ($fromIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    $top = $this.$length3;
    if ($fromIndex >= $top)
        return (-1);
    $index = $fromIndex / 32 | 0;
    var$5 = $this.$data.data;
    $i = var$5[$index] >>> ($fromIndex % 32 | 0) | 0;
    if ($i)
        return jl_Integer_numberOfTrailingZeros($i) + $fromIndex | 0;
    $top = ($top + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$5[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
ju_BitSet_ensureCapacity = ($this, $capacity) => {
    let $newArrayLength, var$3, var$4, var$5;
    $newArrayLength = $this.$data.data.length;
    if ($newArrayLength >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($newArrayLength * 2 | 0) + 1 | 0);
    var$3 = $this.$data.data;
    var$4 = $rt_createIntArray($newArrayLength);
    var$5 = var$4.data;
    $capacity = jl_Math_min($newArrayLength, var$3.length);
    $newArrayLength = 0;
    while ($newArrayLength < $capacity) {
        var$5[$newArrayLength] = var$3[$newArrayLength];
        $newArrayLength = $newArrayLength + 1 | 0;
    }
    $this.$data = var$4;
},
ju_BitSet_recalculateLength = $this => {
    let $top, $i, $sz;
    $top = ($this.$length3 + 31 | 0) / 32 | 0;
    $this.$length3 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length3 = $this.$length3 - 32 | 0;
        }
        $this.$length3 = $this.$length3 - $sz | 0;
    }
},
ju_BitSet_and = ($this, $set) => {
    let $i, $i_0, var$4, var$5;
    $i = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while (true) {
        var$5 = $this.$data.data;
        if ($i >= var$5.length)
            break;
        var$5[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length3 = jl_Math_min($this.$length3, $set.$length3);
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_andNot = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_or = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_max($this.$length3, $set.$length3);
    $this.$length3 = $sz;
    ju_BitSet_ensureCapacity($this, ($sz + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
},
ju_BitSet_xor = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_max($this.$length3, $set.$length3);
    $this.$length3 = $sz;
    ju_BitSet_ensureCapacity($this, ($sz + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_isEmpty = $this => {
    return $this.$length3 ? 0 : 1;
};
function jur_LowHighSurrogateRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt1 = 0;
}
let jur_LowHighSurrogateRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(384) : $rt_s(385);
    var$2 = $this.$surrChars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(386)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_CompositeRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
let jur_CompositeRangeSet__init_0 = ($this, $withoutSurrogates, $withSurrogates) => {
    jur_AbstractSet__init_($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
},
jur_CompositeRangeSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CompositeRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift, var$5, var$6, var$7, var$8, var$9;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        a: {
            var$5 = $this.$withSurrogates;
            var$6 = $matchResult.$leftBound;
            $shift = $matchResult.$rightBound;
            var$7 = $stringIndex + 1 | 0;
            $shift = $rt_compare(var$7, $shift);
            if ($shift > 0) {
                $matchResult.$hitEnd = 1;
                $shift = (-1);
            } else {
                var$8 = $testString;
                var$9 = jl_String_charAt(var$8, $stringIndex);
                if (!var$5.$surrChars.$contains(var$9))
                    $shift = (-1);
                else {
                    if (jl_Character_isHighSurrogate(var$9)) {
                        if ($shift < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$8, var$7))) {
                            $shift = (-1);
                            break a;
                        }
                    } else if (jl_Character_isLowSurrogate(var$9) && $stringIndex > var$6 && jl_Character_isHighSurrogate(jl_String_charAt(var$8, $stringIndex - 1 | 0))) {
                        $shift = (-1);
                        break a;
                    }
                    $shift = var$5.$next2.$matches(var$7, $testString, $matchResult);
                }
            }
        }
    if ($shift >= 0)
        return $shift;
    return (-1);
},
jur_CompositeRangeSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
    $this.$withSurrogates.$next2 = $next;
    $this.$withoutSurrogates.$setNext($next);
},
jur_CompositeRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$withoutSurrogates);
    var$2 = jl_String_valueOf($this.$withSurrogates);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(387)), var$1), $rt_s(388)), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_CompositeRangeSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_CompositeRangeSet_first = ($this, $set) => {
    return 1;
};
function jur_SupplRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt0 = 0;
}
let jur_SupplRangeSet__init_ = ($this, $cc) => {
    jur_AbstractSet__init_($this);
    $this.$chars = $cc.$getInstance0();
    $this.$alt0 = $cc.$alt;
},
jur_SupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $low, var$6, $high, $offset;
    $strLength = $matchResult.$rightBound;
    if ($stringIndex < $strLength) {
        $low = $stringIndex + 1 | 0;
        var$6 = $testString;
        $high = jl_String_charAt(var$6, $stringIndex);
        if ($this.$contains($high)) {
            $offset = $this.$next2.$matches($low, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if ($low < $strLength) {
            $stringIndex = $low + 1 | 0;
            $low = jl_String_charAt(var$6, $low);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains(jl_Character_toCodePoint($high, $low)))
                return $this.$next2.$matches($stringIndex, $testString, $matchResult);
        }
    }
    return (-1);
},
jur_SupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(384) : $rt_s(385);
    var$2 = $this.$chars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(386)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_SupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains($ch);
},
jur_SupplRangeSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $this.$chars.$contains($set.$ch1);
    if ($set instanceof jur_CharSet)
        return $this.$chars.$contains($set.$ch0);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects($this.$chars, $set.$chars1);
},
jur_SupplRangeSet_getChars = $this => {
    return $this.$chars;
},
jur_SupplRangeSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_SupplRangeSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet),
jur_UCISupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
},
jur_UCISupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(384) : $rt_s(385);
    var$2 = $this.$chars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(389)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_UCIRangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars2 = null;
    a.$alt2 = 0;
}
let jur_UCIRangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars2 = $cc.$getInstance0();
    $this.$alt2 = $cc.$alt;
},
jur_UCIRangeSet__init_ = var_0 => {
    let var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCIRangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars2.$contains(jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($testString, $strIndex)))) ? (-1) : 1;
},
jur_UCIRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt2 ? $rt_s(384) : $rt_s(385);
    var$2 = $this.$chars2.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(389)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_RangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt3 = 0;
}
let jur_RangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars1 = $cc.$getInstance0();
    $this.$alt3 = $cc.$alt;
},
jur_RangeSet__init_ = var_0 => {
    let var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_RangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars1.$contains(jl_String_charAt($testString, $strIndex)) ? (-1) : 1;
},
jur_RangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt3 ? $rt_s(384) : $rt_s(385);
    var$2 = $this.$chars1.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(386)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_RangeSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $this.$chars1.$contains($set.$ch0);
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$chars1);
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_AbstractCharClass_intersects($this.$chars1, $set.$chars);
};
function jur_HangulDecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength = 0;
}
let jur_HangulDecomposedCharSet__init_0 = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_AbstractSet__init_($this);
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
},
jur_HangulDecomposedCharSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_HangulDecomposedCharSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_HangulDecomposedCharSet_getDecomposedChar = $this => {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_0($this.$decomposedChar);
    return $this.$decomposedCharUTF160;
},
jur_HangulDecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_HangulDecomposedCharSet_getDecomposedChar($this);
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(390)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_HangulDecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, var$9, $curSymb, $i, var$12, $lIndex, $decompCurSymb, var$15, $syllIndex;
    $rightBound = $matchResult.$rightBound;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$8 = $strIndex + 1 | 0;
    var$9 = $testString;
    $curSymb = jl_String_charAt(var$9, $strIndex);
    $i = $curSymb - 44032 | 0;
    if ($i >= 0 && $i < 11172) {
        var$12 = 4352 + ($i / 588 | 0) | 0;
        $lIndex = 4449 + (($i % 588 | 0) / 28 | 0) | 0;
        $strIndex = $i % 28 | 0;
        $decompCurSymb = !$strIndex ? $rt_createIntArrayFromData([var$12, $lIndex]) : $rt_createIntArrayFromData([var$12, $lIndex, 4519 + $strIndex | 0]);
    } else
        $decompCurSymb = null;
    if ($decompCurSymb !== null) {
        var$15 = $decompCurSymb.data;
        $i = 0;
        $strIndex = var$15.length;
        $syllIndex = $this.$decomposedCharLength;
        if ($strIndex != $syllIndex)
            return (-1);
        while (true) {
            if ($i >= $syllIndex)
                return $this.$next2.$matches(var$8, $testString, $matchResult);
            if (var$15[$i] != $this.$decomposedChar.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $decompSyllable = $decompSyllable.data;
    $decompSyllable[0] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$8 < $rightBound) {
            $curSymb = jl_String_charAt(var$9, var$8);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            $lIndex = var$8 + 1 | 0;
            $decompSyllable[1] = $curSymb;
            if ($lIndex < $rightBound) {
                $curSymb = jl_String_charAt(var$9, $lIndex);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                a: {
                    $strIndex = $lIndex + 1 | 0;
                    $decompSyllable[2] = $curSymb;
                    if ($this.$decomposedCharLength == 3) {
                        $lIndex = $decompSyllable[0];
                        var$15 = $this.$decomposedChar.data;
                        if ($lIndex == var$15[0] && $decompSyllable[1] == var$15[1] && $decompSyllable[2] == var$15[2]) {
                            $strIndex = $this.$next2.$matches($strIndex, $testString, $matchResult);
                            break a;
                        }
                    }
                    $strIndex = (-1);
                }
                return $strIndex;
            }
            b: {
                if ($this.$decomposedCharLength == 2) {
                    $syllIndex = $decompSyllable[0];
                    var$15 = $this.$decomposedChar.data;
                    if ($syllIndex == var$15[0] && $decompSyllable[1] == var$15[1]) {
                        $strIndex = $this.$next2.$matches($lIndex, $testString, $matchResult);
                        break b;
                    }
                }
                $strIndex = (-1);
            }
            return $strIndex;
        }
        return (-1);
    }
    return (-1);
},
jur_HangulDecomposedCharSet_first = ($this, $set) => {
    return $set instanceof jur_HangulDecomposedCharSet && !jl_String_equals(jur_HangulDecomposedCharSet_getDecomposedChar($set), jur_HangulDecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
},
jur_HangulDecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
let jur_CharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch0 = $ch;
},
jur_CharSet__init_ = var_0 => {
    let var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CharSet_charCount = $this => {
    return 1;
},
jur_CharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch0 != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
},
jur_CharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$ch0, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next2;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_CharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = jl_String_lastIndexOf($testStr, $this.$ch0, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next2.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
},
jur_CharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch0;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_CharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_RangeSet_accepts($set, 0, jl_Character_toString($this.$ch0)) <= 0 ? 0 : 1;
};
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
let jur_UCICharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch2 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
},
jur_UCICharSet__init_ = var_0 => {
    let var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch2 != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($testString, $strIndex))) ? (-1) : 1;
},
jur_UCICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(391)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_CICharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$ch4 = 0;
    a.$supplement = 0;
}
let jur_CICharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch4 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
},
jur_CICharSet__init_ = var_0 => {
    let var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CICharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$ch4;
    $testString = $testString;
    return var$3 != jl_String_charAt($testString, $strIndex) && $this.$supplement != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
},
jur_CICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch4;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(392)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_DecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
let jur_DecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_AbstractSet__init_($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
},
jur_DecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_DecomposedCharSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_DecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10, $readCodePoints;
    $decCodePoint = $rt_createIntArray(4);
    $rightBound = $matchResult.$rightBound;
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
    var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        $decCurCodePoint = $decCodePoint.data;
        $strIndex = 1;
        $decCurCodePoint[0] = $curChar;
    } else {
        $strIndex = $decCurCodePoint.data.length;
        jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
        $strIndex = 0 + $strIndex | 0;
    }
    a: {
        if (var$7 < $rightBound) {
            var$9 = $decCodePoint.data;
            $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
            while ($strIndex < 4) {
                if (!(($curChar != 832 ? 0 : 1) | ($curChar != 833 ? 0 : 1) | ($curChar != 835 ? 0 : 1) | ($curChar != 836 ? 0 : 1))) {
                    var$10 = $strIndex + 1 | 0;
                    var$9[$strIndex] = $curChar;
                } else {
                    $decCurCodePoint = (jur_Lexer_getDecomposition($curChar)).data;
                    if ($decCurCodePoint.length != 2) {
                        var$10 = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                    } else {
                        $readCodePoints = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                        var$10 = $readCodePoints + 1 | 0;
                        var$9[$readCodePoints] = $decCurCodePoint[1];
                    }
                }
                var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                if (var$7 >= $rightBound) {
                    $strIndex = var$10;
                    break a;
                }
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                $strIndex = var$10;
            }
        }
    }
    if ($strIndex != $this.$decomposedCharLength0)
        return (-1);
    $decCurCodePoint = $decCodePoint.data;
    $curChar = 0;
    while (true) {
        if ($curChar >= $strIndex)
            return $this.$next2.$matches(var$7, $testString, $matchResult);
        if ($decCurCodePoint[$curChar] != $this.$decomposedChar0.data[$curChar])
            break;
        $curChar = $curChar + 1 | 0;
    }
    return (-1);
},
jur_DecomposedCharSet_getDecomposedChar = $this => {
    let $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($strBuff);
        $i = 0;
        while ($i < $this.$decomposedCharLength0) {
            jl_AbstractStringBuilder_append1($strBuff, jl_Character_toChars($this.$decomposedChar0.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = jl_AbstractStringBuilder_toString($strBuff);
    }
    return $this.$decomposedCharUTF16;
},
jur_DecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_DecomposedCharSet_getDecomposedChar($this);
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(393)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_DecomposedCharSet_codePointAt = ($this, $strIndex, $testString, $rightBound) => {
    let $curChar, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = jl_String_charAt($testString, $strIndex);
    else {
        $rightBound = $strIndex + 1 | 0;
        $testString = $testString;
        $curChar = jl_String_charAt($testString, $strIndex);
        $low = jl_String_charAt($testString, $rightBound);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArray(2).data;
            $curCodePointUTF16[0] = $curChar;
            $curCodePointUTF16[1] = $low;
            $rightBound = $curCodePointUTF16.length;
            if (0 < $rightBound && $rightBound <= $rightBound) {
                $curChar = 0 < ($rightBound - 1 | 0) && jl_Character_isHighSurrogate($curCodePointUTF16[0]) && jl_Character_isLowSurrogate($curCodePointUTF16[1]) ? jl_Character_toCodePoint($curCodePointUTF16[0], $curCodePointUTF16[1]) : $curCodePointUTF16[0];
                $this.$readCharsForCodePoint = 2;
            } else {
                $testString = new jl_IndexOutOfBoundsException;
                jl_Exception__init_($testString);
                $rt_throw($testString);
            }
        }
    }
    return $curChar;
},
jur_DecomposedCharSet_first = ($this, $set) => {
    return $set instanceof jur_DecomposedCharSet && !jl_String_equals(jur_DecomposedCharSet_getDecomposedChar($set), jur_DecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
},
jur_DecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PossessiveGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PosPlusGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            $stringIndex = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if ($stringIndex <= $nextIndex)
                break;
            $nextIndex = $stringIndex;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_AltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
    $this.$innerSet.$setNext($next);
},
jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_PosAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next2.$matches($nextIndex, $testString, $matchResult);
},
jur_PosAltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
};
function jur_CompositeGroupQuantifierSet() {
    let a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
let jur_CompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
},
jur_CompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_CompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max1)
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + 1 | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $nextIndex;
    }
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + (-1) | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    if ($enterCounter >= $this.$quantifier.$min0)
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
    return (-1);
},
jur_CompositeGroupQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier);
},
jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_PosCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max1;
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min0)
        return (-1);
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_ReluctantGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next2.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_RelAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next2.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
},
jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_RelCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, var$5, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$quantifier;
    if ($enterCounter >= var$5.$max1) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < var$5.$min0) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
            return $nextIndex;
        }
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
},
jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_DotAllQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($strLength > $stringIndex)
        return $this.$next2.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_DotAllQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($this.$next2.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
},
jur_DotAllQuantifierSet_getName = $this => {
    return $rt_s(394);
};
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
let jur_DotQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startSearch;
    $strLength = $matchResult.$rightBound;
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next2.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_DotQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $res, $nextSearch, $leftBound;
    $strLength = $matchResult.$rightBound;
    $res = $this.$next2.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    $strLength = jl_Math_max($res, $this.$next2.$findBack($res, $strLength, $testString, $matchResult));
    if ($strLength <= 0)
        $leftBound = $strLength ? (-1) : 0;
    else {
        $leftBound = $strLength - 1 | 0;
        $matchResult = $testString;
        a: {
            while (true) {
                if ($leftBound < $stringIndex) {
                    $leftBound = (-1);
                    break a;
                }
                if ($this.$lt.$isLineTerminator(jl_String_charAt($matchResult, $leftBound)))
                    break;
                $leftBound = $leftBound + (-1) | 0;
            }
        }
    }
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= $strLength ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
},
jur_DotQuantifierSet_findLineTerminator = ($this, $i, $to, $testString) => {
    let var$4;
    var$4 = $testString;
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator(jl_String_charAt(var$4, $i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jur_DotQuantifierSet_getName = $this => {
    return $rt_s(395);
},
jur_AbstractLineTerminator = $rt_classWithoutFields(),
jur_AbstractLineTerminator_unixLT = null,
jur_AbstractLineTerminator_unicodeLT = null,
jur_AbstractLineTerminator_getInstance = $flag => {
    let var$2;
    if (!($flag & 1)) {
        var$2 = jur_AbstractLineTerminator_unicodeLT;
        if (var$2 !== null)
            return var$2;
        var$2 = new jur_AbstractLineTerminator$2;
        jur_AbstractLineTerminator_unicodeLT = var$2;
        return var$2;
    }
    var$2 = jur_AbstractLineTerminator_unixLT;
    if (var$2 !== null)
        return var$2;
    var$2 = new jur_AbstractLineTerminator$1;
    jur_AbstractLineTerminator_unixLT = var$2;
    return var$2;
},
jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_PossessiveQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_PossessiveAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_PossessiveCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next2.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_ReluctantQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (true) {
        var$4 = $this.$next2.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
},
jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_ReluctantAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$next2.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_ReluctantCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, var$8, var$9;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max1;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$8 = $this.$next2.$matches($stringIndex, $testString, $matchResult);
                    if (var$8 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
                        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$8 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$8 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$8;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$9 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$9 < 1)
            break;
        $stringIndex = $stringIndex + var$9 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet),
jur_SOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound))
        return (-1);
    return $this.$next2.$matches($strIndex, $testString, $matchResult);
},
jur_SOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_SOLSet_getName = $this => {
    return $rt_s(396);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
let jur_WordBoundary__init_0 = ($this, $positive) => {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
},
jur_WordBoundary__init_ = var_0 => {
    let var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
},
jur_WordBoundary_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $ch1, $ch2, $left, $leftBound;
    $ch1 = $stringIndex >= $matchResult.$rightBound ? 32 : jl_String_charAt($testString, $stringIndex);
    if (!$stringIndex)
        $ch2 = 32;
    else {
        $left = $stringIndex - 1 | 0;
        $ch2 = jl_String_charAt($testString, $left);
    }
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_WordBoundary_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_WordBoundary_getName = $this => {
    return $rt_s(397);
},
jur_WordBoundary_isSpace = ($this, $ch, $index, $leftBound, $testString) => {
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType($ch) == 6) {
                $testString = $testString;
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    $ch = jl_String_charAt($testString, $index);
                    if (jl_Character_isLetterOrDigit($ch))
                        return 0;
                    if (jl_Character_getType($ch) != 6)
                        return 1;
                }
            }
        }
        return 1;
    }
    return 0;
},
jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet),
jur_PreviousMatch_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex != $matchResult.$previousMatch)
        return (-1);
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_PreviousMatch_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PreviousMatch_getName = $this => {
    return $rt_s(398);
};
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
let jur_EOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
},
jur_EOLSet__init_0 = var_0 => {
    let var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
},
jur_EOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, var$5, var$6, $ch;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
        return $this.$next2.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2) {
        var$6 = $testString;
        if (jl_String_charAt(var$6, $strIndex) == 13 && jl_String_charAt(var$6, $strIndex + 1 | 0) == 10) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
            return $this.$next2.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = jl_String_charAt($testString, $strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
    return $this.$next2.$matches($strIndex, $testString, $matchResult);
},
jur_EOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter0) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, (-1));
    return $res;
},
jur_EOLSet_getName = $this => {
    return $rt_s(399);
},
jur_EOISet = $rt_classWithoutFields(jur_AbstractSet),
jur_EOISet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex < (!$matchResult.$transparentBounds ? $matchResult.$rightBound : $testString.$nativeString.length))
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next2.$matches($stringIndex, $testString, $matchResult);
},
jur_EOISet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_EOISet_getName = $this => {
    return $rt_s(400);
};
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
let jur_MultiLineSOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, var$5, var$6;
    a: {
        if ($strIndex != $matchResult.$rightBound) {
            if (!$strIndex)
                break a;
            if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound)
                break a;
            var$4 = $this.$lt1;
            var$5 = $strIndex - 1 | 0;
            var$6 = $testString;
            if (var$4.$isAfterLineTerminator(jl_String_charAt(var$6, var$5), jl_String_charAt(var$6, $strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next2.$matches($strIndex, $testString, $matchResult);
},
jur_MultiLineSOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_MultiLineSOLSet_getName = $this => {
    return $rt_s(401);
},
jur_DotAllSet = $rt_classWithoutFields(jur_JointSet),
jur_DotAllSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_DotAllSet__init_0 = () => {
    let var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_(var_0);
    return var_0;
},
jur_DotAllSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    $high = jl_String_charAt(var$6, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        $stringIndex = $stringIndex + 2 | 0;
        if ($stringIndex <= $strLength && jl_Character_isSurrogatePair($high, jl_String_charAt(var$6, var$5)))
            return $this.$next2.$matches($stringIndex, $testString, $matchResult);
    }
    return $this.$next2.$matches(var$5, $testString, $matchResult);
},
jur_DotAllSet_getName = $this => {
    return $rt_s(402);
},
jur_DotAllSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_DotAllSet_getType = $this => {
    return (-2147483602);
},
jur_DotAllSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
let jur_DotSet__init_ = ($this, $lt) => {
    jur_AbstractSet__init_($this);
    $this.$lt0 = $lt;
},
jur_DotSet__init_0 = var_0 => {
    let var_1 = new jur_DotSet();
    jur_DotSet__init_(var_1, var_0);
    return var_1;
},
jur_DotSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    $high = jl_String_charAt(var$6, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        $stringIndex = $stringIndex + 2 | 0;
        if ($stringIndex <= $strLength) {
            $low = jl_String_charAt(var$6, var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt0.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next2.$matches($stringIndex, $testString, $matchResult);
        }
    }
    return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next2.$matches(var$5, $testString, $matchResult);
},
jur_DotSet_getName = $this => {
    return $rt_s(143);
},
jur_DotSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_DotSet_getType = $this => {
    return (-2147483602);
},
jur_DotSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
let jur_UEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
},
jur_UEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
        return $this.$next2.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && jl_String_charAt($testString, $strIndex) == 10) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 1);
        return $this.$next2.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_UEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter2) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, (-1));
    return $res;
},
jur_UEOLSet_getName = $this => {
    return $rt_s(399);
};
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
let jur_UMultiLineEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
},
jur_UMultiLineEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UMultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if (($matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0) <= 0) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, 0);
        return $this.$next2.$matches($strIndex, $testString, $matchResult);
    }
    if (jl_String_charAt($testString, $strIndex) != 10)
        return (-1);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, 1);
    return $this.$next2.$matches($strIndex + 1 | 0, $testString, $matchResult);
},
jur_UMultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter3) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, (-1));
    return $res;
},
jur_UMultiLineEOLSet_getName = $this => {
    return $rt_s(403);
};
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
let jur_MultiLineEOLSet__init_0 = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
},
jur_MultiLineEOLSet__init_ = var_0 => {
    let var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
},
jur_MultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, $ch1, $ch2, var$7;
    $strDif = $matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0;
    if (!$strDif) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
        return $this.$next2.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = jl_String_charAt($testString, $strIndex);
        $ch2 = 97;
    } else {
        var$7 = $testString;
        $ch1 = jl_String_charAt(var$7, $strIndex);
        $ch2 = jl_String_charAt(var$7, $strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
            return $this.$next2.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
                return $this.$next2.$matches($strIndex, $testString, $matchResult);
            }
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
            return $this.$next2.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
},
jur_MultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, (-1));
    return $res;
},
jur_MultiLineEOLSet_getName = $this => {
    return $rt_s(404);
};
function jur_CIBackReferenceSet() {
    let a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter1 = 0;
}
let jur_CIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_AbstractSet__init_($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter1 = $consCounter;
},
jur_CIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7, var$8;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$6 = $testString;
        while (true) {
            if ($i >= $group.$nativeString.length) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $group.$nativeString.length);
                return $this.$next2.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
            }
            var$7 = jl_String_charAt($group, $i);
            var$8 = $stringIndex + $i | 0;
            if (var$7 != jl_String_charAt(var$6, var$8) && jur_Pattern_getSupplement(jl_String_charAt($group, $i)) != jl_String_charAt(var$6, var$8))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_CIBackReferenceSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_CIBackReferenceSet_getString = ($this, $matchResult) => {
    let var$2, var$3;
    var$2 = $this.$referencedGroup;
    var$3 = jur_MatchResultImpl_getStart($matchResult, var$2);
    var$2 = jur_MatchResultImpl_getEnd($matchResult, var$2);
    return (var$2 | var$3 | (var$2 - var$3 | 0)) >= 0 && var$2 <= $matchResult.$string3.$nativeString.length ? jl_String_substring($matchResult.$string3, var$3, var$2) : null;
},
jur_CIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(405)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_CIBackReferenceSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter1) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, (-1));
    return $res;
},
jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet),
jur_BackReferenceSet__init_0 = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_BackReferenceSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_BackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $shift;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $shift = !jl_String_startsWith0($testString, $group, $stringIndex) ? (-1) : $group.$nativeString.length;
        if ($shift < 0)
            return (-1);
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $shift);
        return $this.$next2.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_BackReferenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $group, $strLength, $testStr;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    $strLength = $matchResult.$leftBound;
    if ($group !== null && ($strIndex + $group.$nativeString.length | 0) <= $strLength) {
        $testStr = $testString;
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            $strIndex = jl_String_indexOf0($testStr, $group, $strIndex);
            if ($strIndex < 0)
                return (-1);
            if ($this.$next2.$matches($strIndex + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = $strIndex + 1 | 0;
        }
        return $strIndex;
    }
    return (-1);
},
jur_BackReferenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $group, $testStr, var$7;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = jl_String_lastIndexOf1($testStr, $group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next2.$matches(var$7 + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_first = ($this, $set) => {
    return 1;
},
jur_BackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(406)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
let jur_UCIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_UCIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_UCIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$6 = $testString;
        while (true) {
            if ($i >= $group.$nativeString.length) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $group.$nativeString.length);
                return $this.$next2.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
            }
            if (jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($group, $i))) != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt(var$6, $stringIndex + $i | 0))))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_UCIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex1;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(407)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuffer_append = ($this, $s) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = 0;
    $s = $s;
    var$3 = $s.$nativeString.length;
    var$4 = $this;
    var$5 = var$4.$length2;
    var$4 = var$4;
    if (var$2 <= var$3 && var$3 <= $s.$nativeString.length) {
        jl_AbstractStringBuilder_insertSpace(var$4, var$5, (var$5 + var$3 | 0) - var$2 | 0);
        while (var$2 < var$3) {
            var$6 = var$4.$buffer.data;
            var$7 = var$5 + 1 | 0;
            var$6[var$5] = jl_String_charAt($s, var$2);
            var$2 = var$2 + 1 | 0;
            var$5 = var$7;
        }
        return $this;
    }
    $s = new jl_IndexOutOfBoundsException;
    jl_RuntimeException__init_0($s);
    $rt_throw($s);
},
jl_StringBuffer_insert0 = ($this, var$1, var$2, var$3, var$4) => {
    jl_AbstractStringBuilder_insert0($this, var$1, var$2, var$3, var$4);
    return $this;
},
jl_StringBuffer_append0 = ($this, var$1, var$2, var$3) => {
    jl_AbstractStringBuilder_append3($this, var$1, var$2, var$3);
    return $this;
},
jl_StringBuffer_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuffer_insert1 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert1($this, var$1, var$2);
    return $this;
},
jl_StringBuffer_insert = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
};
function jur_SequenceSet() {
    let a = this; jur_LeafSet.call(a);
    a.$string = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
let jur_SequenceSet_accepts = ($this, $strIndex, $testString) => {
    return !jur_SequenceSet_startsWith($this, $testString, $strIndex) ? (-1) : $this.$charCount0;
},
jur_SequenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, var$7;
    $strLength = $matchResult.$rightBound;
    var$5 = $testString;
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$6 = jl_String_charAt($this.$string, $this.$charCount0 - 1 | 0);
        a: {
            while (true) {
                var$7 = $this.$charCount0;
                if ($strIndex > ($strLength - var$7 | 0)) {
                    $strIndex = (-1);
                    break a;
                }
                var$7 = jl_String_charAt(var$5, ($strIndex + var$7 | 0) - 1 | 0);
                if (var$7 == var$6 && jur_SequenceSet_startsWith($this, $testString, $strIndex))
                    break;
                $strIndex = $strIndex + jur_SequenceSet$IntHash_get($this.$leftToRight, var$7) | 0;
            }
        }
        if ($strIndex < 0)
            return (-1);
        if ($this.$next2.$matches($strIndex + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = $strIndex + 1 | 0;
    }
    return $strIndex;
},
jur_SequenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5, var$6, var$7;
    var$5 = $testString;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$6 = jl_String_charAt($this.$string, 0);
        var$7 = (var$5.$nativeString.length - $lastIndex | 0) - $this.$charCount0 | 0;
        if (var$7 <= 0)
            $lastIndex = $lastIndex + var$7 | 0;
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                var$7 = jl_String_charAt(var$5, $lastIndex);
                if (var$7 == var$6 && jur_SequenceSet_startsWith($this, $testString, $lastIndex))
                    break;
                $lastIndex = $lastIndex - jur_SequenceSet$IntHash_get($this.$rightToLeft, var$7) | 0;
            }
        }
        if ($lastIndex < 0)
            return (-1);
        if ($this.$next2.$matches($lastIndex + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = $lastIndex + (-1) | 0;
    }
    return $lastIndex;
},
jur_SequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(408)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_SequenceSet_first = ($this, $set) => {
    let var$2;
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != jl_String_charAt($this.$string, 0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return jur_RangeSet_accepts($set, 0, jl_String_substring($this.$string, 0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return $this.$string.$nativeString.length > 1 && $set.$ch1 == jl_Character_toCodePoint(jl_String_charAt($this.$string, 0), jl_String_charAt($this.$string, 1)) ? 1 : 0;
    }
    a: {
        b: {
            $set = $set;
            if (!$set.$contains(jl_String_charAt($this.$string, 0))) {
                if ($this.$string.$nativeString.length <= 1)
                    break b;
                if (!$set.$contains(jl_Character_toCodePoint(jl_String_charAt($this.$string, 0), jl_String_charAt($this.$string, 1))))
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jur_SequenceSet_startsWith = ($this, $str, $from) => {
    let $i;
    $i = 0;
    $str = $str;
    while ($i < $this.$charCount0) {
        if (jl_String_charAt($str, $i + $from | 0) != jl_String_charAt($this.$string, $i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
};
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
let jur_UCISequenceSet__init_ = ($this, $substring) => {
    let $res, $i, var$4;
    jur_LeafSet__init_($this);
    $res = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($res);
    $i = 0;
    while (true) {
        var$4 = $rt_compare($i, $substring.$length2);
        if (var$4 >= 0) {
            $this.$string2 = jl_AbstractStringBuilder_toString($res);
            $this.$charCount0 = $res.$length2;
            return;
        }
        if ($i < 0)
            break;
        if (var$4 >= 0)
            break;
        jl_AbstractStringBuilder_append0($res, jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$buffer.data[$i])));
        $i = $i + 1 | 0;
    }
    $substring = new jl_IndexOutOfBoundsException;
    jl_Exception__init_($substring);
    $rt_throw($substring);
},
jur_UCISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4;
    $i = 0;
    var$4 = $testString;
    while (true) {
        if ($i >= $this.$string2.$nativeString.length)
            return $this.$string2.$nativeString.length;
        if (jl_String_charAt($this.$string2, $i) != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt(var$4, $strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_UCISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(409)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string1 = null;
}
let jur_CISequenceSet__init_ = ($this, $substring) => {
    jur_LeafSet__init_($this);
    $this.$string1 = jl_AbstractStringBuilder_toString($substring);
    $this.$charCount0 = $substring.$length2;
},
jur_CISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_CISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5;
    $i = 0;
    $testString = $testString;
    while (true) {
        if ($i >= $this.$string1.$nativeString.length)
            return $this.$string1.$nativeString.length;
        var$4 = jl_String_charAt($this.$string1, $i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != jl_String_charAt($testString, var$5) && jur_Pattern_getSupplement(jl_String_charAt($this.$string1, $i)) != jl_String_charAt($testString, var$5))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string1;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(410)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch3 = 0;
}
let jur_UCISupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$ch3 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
},
jur_UCISupplCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jl_String__init_0(jl_Character_toChars($this.$ch3));
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(391)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
let jur_LowSurrogateCharSet__init_0 = ($this, $low) => {
    jur_AbstractSet__init_($this);
    $this.$low = $low;
},
jur_LowSurrogateCharSet__init_ = var_0 => {
    let var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
},
jur_LowSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_LowSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, var$5, $low;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$5 = $testString;
    $low = jl_String_charAt(var$5, $stringIndex);
    if ($stringIndex > $matchResult.$leftBound && jl_Character_isHighSurrogate(jl_String_charAt(var$5, $stringIndex - 1 | 0)))
        return (-1);
    if ($this.$low != $low)
        return (-1);
    return $this.$next2.$matches(var$4, $testString, $matchResult);
},
jur_LowSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$leftBound;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = jl_String_indexOf($testStr, $this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next2;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
},
jur_LowSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $startStr, $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$leftBound;
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$low, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($lastIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, $lastIndex - 1 | 0))) {
                $lastIndex = $lastIndex + (-2) | 0;
                continue;
            }
            if ($this.$next2.$matches($lastIndex + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_LowSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$low;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_LowSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
},
jur_LowSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
let jur_HighSurrogateCharSet__init_0 = ($this, $high) => {
    jur_AbstractSet__init_($this);
    $this.$high = $high;
},
jur_HighSurrogateCharSet__init_ = var_0 => {
    let var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
},
jur_HighSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next2 = $next;
},
jur_HighSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $low, var$7, $high;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    $low = $rt_compare(var$5, $strLength);
    if ($low > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$7 = $testString;
    $high = jl_String_charAt(var$7, $stringIndex);
    if ($low < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$7, var$5)))
        return (-1);
    if ($this.$high != $high)
        return (-1);
    return $this.$next2.$matches(var$5, $testString, $matchResult);
},
jur_HighSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, $strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next2.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_HighSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$high, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            var$7 = $lastIndex + 1 | 0;
            if (var$7 < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, var$7))) {
                $lastIndex = $lastIndex + (-1) | 0;
                continue;
            }
            if ($this.$next2.$matches(var$7, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_HighSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$high;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_HighSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
},
jur_HighSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_SupplCharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
let jur_SupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
},
jur_SupplCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while ($strIndex < $strLength) {
        $strIndex = jl_String_indexOf($testStr, $this.$high0, $strIndex);
        if ($strIndex < 0)
            return (-1);
        $strIndex = $strIndex + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = jl_String_charAt($testStr, $strIndex);
        if ($this.$low0 == $ch && $this.$next2.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
},
jur_SupplCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$low0, $lastIndex) + (-1) | 0;
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($this.$high0 == jl_String_charAt($testStr, $lastIndex) && $this.$next2.$matches($lastIndex + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_SupplCharSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append0(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$3, var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_SupplCharSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $set.$ch1 != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
},
jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$1_isLineTerminator = ($this, $ch) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$1_isAfterLineTerminator = ($this, $ch, $ch2) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$2_isLineTerminator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_AbstractLineTerminator$2_isAfterLineTerminator = ($this, $ch, $ch2) => {
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_SequenceSet$IntHash() {
    let a = this; jl_Object.call(a);
    a.$table = null;
    a.$values3 = null;
    a.$mask = 0;
    a.$size13 = 0;
}
let jur_SequenceSet$IntHash__init_0 = ($this, $size) => {
    let var$2, var$3;
    while (true) {
        var$2 = $this.$mask;
        if ($size < var$2)
            break;
        $this.$mask = var$2 << 1 | 1;
    }
    var$3 = var$2 << 1 | 1;
    $this.$mask = var$3;
    var$3 = var$3 + 1 | 0;
    $this.$table = $rt_createIntArray(var$3);
    $this.$values3 = $rt_createIntArray(var$3);
    $this.$size13 = $size;
},
jur_SequenceSet$IntHash__init_ = var_0 => {
    let var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
},
jur_SequenceSet$IntHash_put = ($this, $key, $value) => {
    let $i, var$4, $hashCode, var$6;
    $i = 0;
    var$4 = $this.$mask;
    $hashCode = $key & var$4;
    while (true) {
        var$6 = $this.$table.data;
        if (!var$6[$hashCode])
            break;
        if (var$6[$hashCode] == $key)
            break;
        $i = ($i + 1 | 0) & var$4;
        $hashCode = ($hashCode + $i | 0) & var$4;
    }
    var$6[$hashCode] = $key;
    $this.$values3.data[$hashCode] = $value;
},
jur_SequenceSet$IntHash_get = ($this, $key) => {
    let var$2, $hashCode, $i, $storedKey;
    var$2 = $this.$mask;
    $hashCode = $key & var$2;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values3.data[$hashCode];
        $i = ($i + 1 | 0) & var$2;
        $hashCode = ($hashCode + $i | 0) & var$2;
    }
    return $this.$size13;
},
jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpace__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazySpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpace_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass__init_(), 9, 13), 32);
},
jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyDigit__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyDigit__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyDigit_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 48, 57);
},
jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyLower__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyLower__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyLower_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 97, 122);
},
jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyUpper__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyUpper__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyUpper_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 65, 90);
},
jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyASCII__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyASCII__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyASCII_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 0, 127);
},
jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyAlpha__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyAlpha__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlpha_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 97, 122), 65, 90);
},
jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha),
jur_AbstractCharClass$LazyAlnum__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyAlnum__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlnum_computeValue = $this => {
    return jur_CharClass_add(jur_AbstractCharClass$LazyAlpha_computeValue($this), 48, 57);
},
jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyPunct__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyPunct__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPunct_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum),
jur_AbstractCharClass$LazyGraph__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyGraph__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyGraph_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_AbstractCharClass$LazyAlnum_computeValue($this), 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph),
jur_AbstractCharClass$LazyPrint__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyPrint__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPrint_computeValue = $this => {
    return jur_CharClass_add0(jur_AbstractCharClass$LazyGraph_computeValue($this), 32);
},
jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyBlank__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyBlank__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyBlank_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_(), 32), 9);
},
jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyCntrl__init_0 = $this => {
    return;
};
let jur_AbstractCharClass$LazyCntrl__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyCntrl_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass__init_(), 0, 31), 127);
},
jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyXDigit__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyXDigit__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyXDigit_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 48, 57), 97, 102), 65, 70);
},
jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLowerCase__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLowerCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLowerCase_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
    $chCl.$this$033 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUpperCase__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUpperCase__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUpperCase_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
    $chCl.$this$036 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaWhitespace__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaWhitespace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaWhitespace_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
    var$1.$this$031 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaMirrored__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaMirrored__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaMirrored_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
    var$1.$this$028 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDefined__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaDefined__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDefined_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
    $chCl.$this$043 = $this;
    jur_AbstractCharClass__init_($chCl);
    ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDigit_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
    $chCl.$this$037 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
    $chCl.$this$047 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaISOControl__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaISOControl__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaISOControl_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
    var$1.$this$034 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
    $chCl.$this$018 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
    $chCl.$this$038 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetter__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLetter__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetter_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
    $chCl.$this$042 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
let jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
    $chCl.$this$045 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaSpaceChar__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaSpaceChar__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaSpaceChar_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
    var$1.$this$032 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaTitleCase__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaTitleCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaTitleCase_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
    var$1.$this$040 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
    $chCl.$this$019 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
    $chCl.$this$053 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyWord__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyWord_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 97, 122), 65, 90), 48, 57), 95);
},
jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord),
jur_AbstractCharClass$LazyNonWord__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonWord__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonWord_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyWord_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace),
jur_AbstractCharClass$LazyNonSpace__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonSpace__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonSpace_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazySpace_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit),
jur_AbstractCharClass$LazyNonDigit__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonDigit__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyDigit_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
function jur_AbstractCharClass$LazyRange() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start3 = 0;
    a.$end2 = 0;
}
let jur_AbstractCharClass$LazyRange__init_0 = ($this, $start, $end) => {
    $this.$start3 = $start;
    $this.$end2 = $end;
},
jur_AbstractCharClass$LazyRange__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyRange_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), $this.$start3, $this.$end2);
},
jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpecialsBlock__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazySpecialsBlock__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpecialsBlock_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 65279, 65279), 65520, 65533);
};
function jur_AbstractCharClass$LazyCategory() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates0 = 0;
}
let jur_AbstractCharClass$LazyCategory__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategory__init_2 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategory_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategory__init_0($this.$category1);
    if ($this.$containsAllSurrogates0)
        ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
};
function jur_AbstractCharClass$LazyCategoryScope() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates = 0;
}
let jur_AbstractCharClass$LazyCategoryScope__init_1 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategoryScope__init_0 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategoryScope_computeValue = $this => {
    let $chCl;
    $chCl = new jur_UnicodeCategoryScope;
    jur_UnicodeCategory__init_($chCl, $this.$category0);
    if ($this.$containsAllSurrogates)
        ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
},
jur_IntHash = $rt_classWithoutFields(),
otpp_ResourceAccessor = $rt_classWithoutFields(),
otciu_UnicodeHelper = $rt_classWithoutFields(),
otciu_UnicodeHelper_decodeCaseMapping = $text => {
    let $flow, $sz, $data, var$5, $last, $i, var$8;
    $flow = otci_CharFlow__init_(jl_String_toCharArray($text));
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    var$5 = $data.data;
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$8 = $i * 2 | 0;
        var$5[var$8] = $last;
        var$5[var$8 + 1 | 0] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_createCharMapping = $data => {
    let $result, var$3, $last, $lastValue, $i, var$7, $key, $value, var$10, var$11;
    $result = $rt_createIntArray(65536);
    var$3 = $result.data;
    $last = 0;
    $lastValue = 0;
    $i = 0;
    a: {
        while (true) {
            var$7 = $data.data;
            if ($i >= var$7.length)
                break a;
            $key = var$7[$i];
            $value = var$7[$i + 1 | 0];
            var$10 = var$3.length;
            if ($key < var$10)
                var$10 = $key;
            else if ($key == $last)
                break;
            ju_Arrays_fill1($result, $last, var$10, $lastValue);
            $i = $i + 2 | 0;
            $last = var$10;
            $lastValue = $value;
        }
    }
    var$11 = new otciu_CharMapping;
    var$11.$binarySearchTable = $data;
    var$11.$fastTable = $result;
    return var$11;
},
otciu_UnicodeHelper_decodeByte = $c => {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
};
function otciu_CharMapping() {
    let a = this; jl_Object.call(a);
    a.$binarySearchTable = null;
    a.$fastTable = null;
}
function otciu_UnicodeHelper$Range() {
    let a = this; jl_Object.call(a);
    a.$start2 = 0;
    a.$end3 = 0;
    a.$data16 = null;
}
let otciu_UnicodeHelper$Range__init_0 = ($this, $start, $end, $data) => {
    $this.$start2 = $start;
    $this.$end3 = $end;
    $this.$data16 = $data;
},
otciu_UnicodeHelper$Range__init_ = (var_0, var_1, var_2) => {
    let var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function otci_CharFlow() {
    let a = this; jl_Object.call(a);
    a.$characters = null;
    a.$pointer = 0;
}
let otci_CharFlow__init_0 = ($this, $characters) => {
    $this.$characters = $characters;
},
otci_CharFlow__init_ = var_0 => {
    let var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
},
otci_Base46 = $rt_classWithoutFields(),
otci_Base46_decodeUnsigned = $seq => {
    let $number, $pos, var$4, $hasMore, $digit;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters.data;
        $hasMore = $seq.$pointer;
        $seq.$pointer = $hasMore + 1 | 0;
        $digit = var$4[$hasMore];
        $digit = $digit < 34 ? $digit - 32 | 0 : $digit >= 92 ? ($digit - 32 | 0) - 2 | 0 : ($digit - 32 | 0) - 1 | 0;
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
},
otci_Base46_decode = $seq => {
    let $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
},
otcir_Flags = $rt_classWithoutFields(),
cbgu_NumberUtils = $rt_classWithoutFields(),
cbgu_NumberUtils_floatToRawIntBits = $value => {
    return $rt_floatToRawIntBits($value);
},
cbgu_NumberUtils_intToFloatColor = $value => {
    return $rt_intBitsToFloat($value & (-16777217));
},
cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum),
cgxgbtd_StyleWrapper$Unit_PX = null,
cgxgbtd_StyleWrapper$Unit_PCT = null,
cgxgbtd_StyleWrapper$Unit_EM = null,
cgxgbtd_StyleWrapper$Unit_EX = null,
cgxgbtd_StyleWrapper$Unit_PT = null,
cgxgbtd_StyleWrapper$Unit_PC = null,
cgxgbtd_StyleWrapper$Unit_IN = null,
cgxgbtd_StyleWrapper$Unit_CM = null,
cgxgbtd_StyleWrapper$Unit_MM = null,
cgxgbtd_StyleWrapper$Unit_$VALUES = null,
cgxgbtd_StyleWrapper$Unit_$callClinit = () => {
    cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
    cgxgbtd_StyleWrapper$Unit__clinit_();
},
cgxgbtd_StyleWrapper$Unit__init_ = ($this, var$1, var$2) => {
    cgxgbtd_StyleWrapper$Unit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cgxgbtd_StyleWrapper$Unit__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cgxgbtd_StyleWrapper$Unit$1;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(411), 0);
    cgxgbtd_StyleWrapper$Unit_PX = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$2;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(412), 1);
    cgxgbtd_StyleWrapper$Unit_PCT = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$3;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(413), 2);
    cgxgbtd_StyleWrapper$Unit_EM = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$4;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(414), 3);
    cgxgbtd_StyleWrapper$Unit_EX = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$5;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(415), 4);
    cgxgbtd_StyleWrapper$Unit_PT = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$6;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(416), 5);
    cgxgbtd_StyleWrapper$Unit_PC = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$7;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(417), 6);
    cgxgbtd_StyleWrapper$Unit_IN = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$8;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(418), 7);
    cgxgbtd_StyleWrapper$Unit_CM = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$9;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(419), 8);
    cgxgbtd_StyleWrapper$Unit_MM = var$1;
    var$2 = $rt_createArray(cgxgbtd_StyleWrapper$Unit, 9);
    var$3 = var$2.data;
    var$3[0] = cgxgbtd_StyleWrapper$Unit_PX;
    var$3[1] = cgxgbtd_StyleWrapper$Unit_PCT;
    var$3[2] = cgxgbtd_StyleWrapper$Unit_EM;
    var$3[3] = cgxgbtd_StyleWrapper$Unit_EX;
    var$3[4] = cgxgbtd_StyleWrapper$Unit_PT;
    var$3[5] = cgxgbtd_StyleWrapper$Unit_PC;
    var$3[6] = cgxgbtd_StyleWrapper$Unit_IN;
    var$3[7] = cgxgbtd_StyleWrapper$Unit_CM;
    var$3[8] = var$1;
    cgxgbtd_StyleWrapper$Unit_$VALUES = var$2;
};
function ju_HashMap$HashEntry() {
    let a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next3 = null;
}
let jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
function jur_AbstractCharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$044 = null;
}
let jur_AbstractCharClass$1_contains = ($this, $ch) => {
    let $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS, $index) : 0;
};
function jur_AbstractCharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$041 = null;
}
let jur_AbstractCharClass$2_contains = ($this, $ch) => {
    let $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS0, $index) : 0;
    return $this.$val$thisClass.$contains($ch) && !$containslHS ? 1 : 0;
};
function jur_CharClass$18() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$020 = null;
}
let jur_CharClass$18_contains = ($this, $ch) => {
    return $this.$alt ^ ju_BitSet_get($this.$val$bs, $ch);
},
jur_CharClass$18_toString = $this => {
    let $temp, $i, var$3;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append1($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append0($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
    }
    var$3 = $temp.$length2;
    if (var$3 > 0)
        jl_StringBuilder_deleteCharAt($temp, var$3 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
};
function jur_CharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$035 = null;
}
let jur_CharClass$1_contains = ($this, $ch) => {
    return $this.$val$cc1.$contains($ch);
};
function jur_CharClass$3() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc = null;
    a.$this$04 = null;
}
let jur_CharClass$3_contains = ($this, $ch) => {
    return !($this.$val$curAlt ^ ju_BitSet_get($this.$this$04.$bits, $ch)) && !($this.$val$curAlt ^ $this.$this$04.$inverted ^ $this.$val$cc.$contains($ch)) ? 0 : 1;
};
function jur_CharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$cc3 = null;
    a.$this$05 = null;
}
let jur_CharClass$2_contains = ($this, $ch) => {
    return !($this.$val$curAlt0 ^ ju_BitSet_get($this.$this$05.$bits, $ch)) && !($this.$val$curAlt0 ^ $this.$this$05.$inverted ^ $this.$val$cc3.$contains($ch)) ? 1 : 0;
};
function jur_CharClass$5() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt10 = 0;
    a.$val$nb4 = null;
    a.$val$cc2 = null;
    a.$this$024 = null;
}
let jur_CharClass$5_contains = ($this, $ch) => {
    return $this.$val$curAlt10 ^ (!$this.$val$nb4.$contains($ch) && !$this.$val$cc2.$contains($ch) ? 0 : 1);
};
function jur_CharClass$4() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt2 = 0;
    a.$val$nb2 = null;
    a.$val$cc0 = null;
    a.$this$049 = null;
}
let jur_CharClass$4_contains = ($this, $ch) => {
    return $this.$val$curAlt2 ^ (!$this.$val$nb2.$contains($ch) && !$this.$val$cc0.$contains($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$7() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$this$052 = null;
}
let jur_CharClass$7_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz2, $ch);
};
function jur_CharClass$6() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz8 = null;
    a.$this$026 = null;
}
let jur_CharClass$6_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz8, $ch) ? 0 : 1;
};
function jur_CharClass$9() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt1 = 0;
    a.$this$014 = null;
}
let jur_CharClass$9_contains = ($this, $ch) => {
    return !jur_CharClass_contains($this.$val$clazz4, $ch) && !($this.$val$curAlt1 ^ ju_BitSet_get($this.$this$014.$bits, $ch)) ? 0 : 1;
};
function jur_CharClass$8() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz5 = null;
    a.$val$curAlt5 = 0;
    a.$this$011 = null;
}
let jur_CharClass$8_contains = ($this, $ch) => {
    return !jur_CharClass_contains($this.$val$clazz5, $ch) && !($this.$val$curAlt5 ^ ju_BitSet_get($this.$this$011.$bits, $ch)) ? 1 : 0;
};
function jur_CharClass$11() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz9 = null;
    a.$this$021 = null;
}
let jur_CharClass$11_contains = ($this, $ch) => {
    return !($this.$val$curAlt7 ^ $this.$val$nb3.$contains($ch)) && !jur_CharClass_contains($this.$val$clazz9, $ch) ? 0 : 1;
};
function jur_CharClass$10() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb0 = null;
    a.$val$clazz = null;
    a.$this$025 = null;
}
let jur_CharClass$10_contains = ($this, $ch) => {
    return !($this.$val$curAlt9 ^ $this.$val$nb0.$contains($ch)) && !jur_CharClass_contains($this.$val$clazz, $ch) ? 1 : 0;
};
function jur_CharClass$13() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$027 = null;
}
let jur_CharClass$13_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz0, $ch);
};
function jur_CharClass$12() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$048 = null;
}
let jur_CharClass$12_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz1, $ch) ? 0 : 1;
};
function jur_CharClass$15() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt4 = 0;
    a.$this$017 = null;
}
let jur_CharClass$15_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz10, $ch) && $this.$val$curAlt4 ^ ju_BitSet_get($this.$this$017.$bits, $ch) ? 1 : 0;
};
function jur_CharClass$14() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$val$curAlt3 = 0;
    a.$this$012 = null;
}
let jur_CharClass$14_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz6, $ch) && $this.$val$curAlt3 ^ ju_BitSet_get($this.$this$012.$bits, $ch) ? 0 : 1;
};
function jur_CharClass$17() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb1 = null;
    a.$val$clazz3 = null;
    a.$this$023 = null;
}
let jur_CharClass$17_contains = ($this, $ch) => {
    return $this.$val$curAlt8 ^ $this.$val$nb1.$contains($ch) && jur_CharClass_contains($this.$val$clazz3, $ch) ? 1 : 0;
};
function jur_CharClass$16() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb = null;
    a.$val$clazz7 = null;
    a.$this$030 = null;
}
let jur_CharClass$16_contains = ($this, $ch) => {
    return $this.$val$curAlt6 ^ $this.$val$nb.$contains($ch) && jur_CharClass_contains($this.$val$clazz7, $ch) ? 0 : 1;
};
function jl_Thread() {
    let a = this; jl_Object.call(a);
    a.$id0 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name3 = null;
    a.$alive = 0;
    a.$target = null;
}
let jl_Thread_mainThread = null,
jl_Thread_currentThread = null,
jl_Thread_nextId = 0,
jl_Thread_activeCount = 0,
jl_Thread_defaultUncaughtExceptionHandler = null,
jl_Thread_setCurrentThread = $thread_0 => {
    if (jl_Thread_currentThread !== $thread_0)
        jl_Thread_currentThread = $thread_0;
    jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
},
jl_Thread_currentThread0 = () => {
    return jl_Thread_currentThread;
},
jl_Thread__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new jl_Thread;
    var$2 = null;
    var$1.$finishedLock = new jl_Object;
    var$1.$alive = 1;
    var$1.$name3 = $rt_s(420);
    var$1.$target = var$2;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    var$1.$id0 = Long_fromInt(var$3);
    jl_Thread_mainThread = var$1;
    jl_Thread_currentThread = var$1;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = new jl_DefaultUncaughtExceptionHandler;
};
function jl_Object$Monitor() {
    let a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
let jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException),
otjf_JSMapping = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_021 = null;
}
let cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6;
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1 = var$1;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1 = var$1.$_021;
    var$3 = var$2.length;
    var$4 = $rt_createArray(cgxgbtf_FileData, var$3);
    var$5 = var$4.data;
    var$6 = 0;
    while (var$6 < var$3) {
        var$5[var$6] = var$2[var$6];
        var$6 = var$6 + 1 | 0;
    }
    var$1.$windowListener.$filesDropped(var$4);
    return otji_JSWrapper_javaToJs($rt_s(421));
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0 = (var$1, var$2) => {
    otji_JSWrapper_jsToJava(var$2);
    var$1;
    return otji_JSWrapper_javaToJs($rt_s(422));
},
otjf_JSSupplier = $rt_classWithoutFields(0),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0 = var$1 => {
    var$1;
    return otji_JSWrapper_javaToJs(null);
};
function jl_Float() {
    jl_Number.call(this);
    this.$value3 = 0.0;
}
let jl_Float_TYPE = null,
jl_Float_floatValue = $this => {
    return $this.$value3;
},
jl_Float_floatToIntBits = $value => {
    if (isNaN($value) ? 1 : 0)
        return 2143289344;
    return $rt_floatToRawIntBits($value);
},
jl_Float__clinit_ = () => {
    jl_Float_TYPE = $rt_cls($rt_floatcls);
},
cgxgbtu_KeyCodes = $rt_classWithoutFields(),
cgxgbtu_KeyCodes_keyForCode = $keyCode => {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
},
cgxgbtu_KeyCodes_getButton = $button => {
    if (!$button)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 1)
        return 0;
    return 2;
},
cbgu_TimeUtils = $rt_classWithoutFields(),
cbgu_TimeUtils_nanoTime = () => {
    return Long_fromNumber(performance.now() * 1000000.0);
},
otp_PlatformQueue = $rt_classWithoutFields(),
otp_PlatformQueue_isEmpty$static = $this => {
    return $this.length ? 0 : 1;
},
otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_012 = null;
}
let cgxgbt_TeaWindowListener = $rt_classWithoutFields(0),
otjc_JSPromise$Executor = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$getFile$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_06 = null;
    a.$_11 = null;
    a.$_21 = null;
}
let cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0 = (var$1, var$2, var$3) => {
    let var$4, var$5;
    var$2 = otji_JS_functionAsObject(var$2, "accept");
    otji_JS_functionAsObject(var$3, "accept");
    var$1 = var$1;
    var$3 = var$1.$_06;
    var$4 = var$1.$_11;
    var$1 = var$1.$_21;
    var$5 = new FileReader();
    var$5.readAsArrayBuffer(var$4);
    var$4 = new cgxgbta_AssetLoadImpl$4;
    var$4.$this$051 = var$3;
    var$4.$val$name = var$1;
    var$4.$val$resolve = var$2;
    var$5.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$4), "handleEvent"));
},
otji_IDBObjectStoreParameters = $rt_classWithoutFields(),
otji_IDBObjectStoreParameters_create$js_body$_1 = () => {
    return {  };
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_09 = null;
    a.$_13 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_09;
    var$3 = var$1.$_13.result;
    if (var$3 !== null) {
        var$1 = cgxgbtf_MemoryFileStorage_fixPath(var$2, $rt_str(var$3.key));
        var$4 = var$3.value;
        if (var$4.type == 1)
            cgxgbtf_MemoryFileStorage_putFolderInternal0(var$2, var$1, 0);
        else
            cgxgbtf_MemoryFileStorage_putFileInternal(var$2, var$1, cgxgbtdt_TypedArrays_toByteArray(var$4.contents), 0);
        var$3.continue();
    }
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1() {
    jl_Object.call(this);
    this.$_023 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0 = var$1 => {
    var$1 = var$1.$_023;
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2() {
    jl_Object.call(this);
    this.$_0 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0 = var$1 => {
    var$1 = var$1.$_0;
    otcic_JsConsolePrintStream_println(jl_System_err(), $rt_s(423));
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
},
jl_AutoCloseable = $rt_classWithoutFields(0),
ji_Closeable = $rt_classWithoutFields(0),
ji_Flushable = $rt_classWithoutFields(0),
ji_OutputStream = $rt_classWithoutFields();
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out2 = null;
}
function ji_PrintStream() {
    let a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$sb = null;
    a.$buffer6 = null;
    a.$charset1 = null;
}
let otcic_JsConsolePrintStream = $rt_classWithoutFields(ji_PrintStream),
otcic_JsConsolePrintStream__init_ = $this => {
    let var$1, var$2;
    var$1 = null;
    var$2 = null;
    $this.$out2 = var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    $this.$sb = var$1;
    $this.$buffer6 = $rt_createCharArray(32);
    $this.$autoFlush = 0;
    $this.$charset1 = var$2;
},
otcic_JsConsolePrintStream_println = ($this, $s) => {
    $this.$print($s);
    $this.$print($rt_s(26));
},
otcic_JSStderrPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStderrPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(28);
    $rt_putStderr($rt_ustr($s));
},
cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0),
jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
function jnc_Charset() {
    let a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
let jnc_Charset_checkCanonicalName = $name => {
    let $i, $c;
    if (jl_String_isEmpty($name))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart(jl_String_charAt($name, 0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$nativeString.length) {
        a: {
            $c = jl_String_charAt($name, $i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
},
jnc_Charset_isValidCharsetStart = $c => {
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            $c = 1;
            break a;
        }
        $c = 0;
    }
    return $c;
},
oti_AsyncCallback = $rt_classWithoutFields(0);
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
let otpp_AsyncCallbackWrapper_create = $realAsyncCallback => {
    let var$2;
    var$2 = new otpp_AsyncCallbackWrapper;
    var$2.$realAsyncCallback = $realAsyncCallback;
    return var$2;
},
otpp_AsyncCallbackWrapper_complete = ($this, $result) => {
    $this.$realAsyncCallback.$complete($result);
},
otpp_AsyncCallbackWrapper_error = ($this, $e) => {
    $this.$realAsyncCallback.$error($e);
};
function jl_Object$monitorEnterWait$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_010 = null;
    a.$_14 = null;
    a.$_23 = 0;
    a.$_31 = null;
}
let otjc_JSObjects = $rt_classWithoutFields(),
otji_JSWrapper$Helper = $rt_classWithoutFields(),
otji_JSWrapper$Helper_hashCodes = null,
otji_JSWrapper$Helper_wrappers = null,
otji_JSWrapper$Helper_stringWrappers = null,
otji_JSWrapper$Helper_numberWrappers = null,
otji_JSWrapper$Helper_undefinedWrapper = null,
otji_JSWrapper$Helper_stringFinalizationRegistry = null,
otji_JSWrapper$Helper_numberFinalizationRegistry = null,
otji_JSWrapper$Helper_$callClinit = () => {
    otji_JSWrapper$Helper_$callClinit = $rt_eraseClinit(otji_JSWrapper$Helper);
    otji_JSWrapper$Helper__clinit_();
},
otji_JSWrapper$Helper__clinit_ = () => {
    let var$1;
    otji_JSWrapper$Helper_hashCodes = new WeakMap();
    otji_JSWrapper$Helper_wrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new WeakMap();
    otji_JSWrapper$Helper_stringWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_numberWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    if (otji_JSWrapper$Helper_stringWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_0;
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_stringFinalizationRegistry = var$1;
    if (otji_JSWrapper$Helper_numberWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_1;
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_numberFinalizationRegistry = var$1;
},
otjc_JSUndefined = $rt_classWithoutFields(),
otjc_JSWeakRef = $rt_classWithoutFields(),
otjc_JSFinalizationRegistryConsumer = $rt_classWithoutFields(0),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_stringWrappers;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1.delete(var$2);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_numberWrappers;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1.delete(var$2);
},
jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet),
jur_BackReferencedSingleSet_find = ($this, $startSearch, $testString, $matchResult) => {
    let $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$rightBound;
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_processBackRefReplacement = $this => {
    return null;
},
cgxgbt_TeaApplication$6 = $rt_classWithoutFields(),
cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null,
cgxgbt_TeaApplication$6_$callClinit = () => {
    cgxgbt_TeaApplication$6_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$6);
    cgxgbt_TeaApplication$6__clinit_();
},
cgxgbt_TeaApplication$6__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbt_TeaApplication$AppState_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = var$1;
    var$2[cgxgbt_TeaApplication$AppState_INIT.$ordinal0] = 1;
    var$2[cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS.$ordinal0] = 2;
    var$2[cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS.$ordinal0] = 3;
    var$2[cgxgbt_TeaApplication$AppState_APP_LOOP.$ordinal0] = 4;
};
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
let jur_AbstractCharClass$LazyJavaLowerCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 2 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$036 = null;
}
let jur_AbstractCharClass$LazyJavaUpperCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 1 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$031 = null;
}
let jur_AbstractCharClass$LazyJavaWhitespace$1_contains = ($this, $ch) => {
    return jl_Character_isWhitespace($ch);
};
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$028 = null;
}
let jur_AbstractCharClass$LazyJavaMirrored$1_contains = ($this, $ch) => {
    return 0;
};
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
let jur_AbstractCharClass$LazyJavaDefined$1_contains = ($this, $ch) => {
    return !jl_Character_getType($ch) ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$037 = null;
}
let jur_AbstractCharClass$LazyJavaDigit$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 9 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$047 = null;
}
let jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = ($this, $ch) => {
    return jl_Character_isIdentifierIgnorable($ch);
};
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$034 = null;
}
let jur_AbstractCharClass$LazyJavaISOControl$1_contains = ($this, $ch) => {
    a: {
        b: {
            if (!($ch >= 0 && $ch <= 31)) {
                if ($ch < 127)
                    break b;
                if ($ch > 159)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$018 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                case 26:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$038 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                case 23:
                case 26:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
let jur_AbstractCharClass$LazyJavaLetter$1_contains = ($this, $ch) => {
    a: {
        switch (jl_Character_getType($ch)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
let jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains = ($this, $ch) => {
    return jl_Character_isLetterOrDigit($ch);
};
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$032 = null;
}
let jur_AbstractCharClass$LazyJavaSpaceChar$1_contains = ($this, $ch) => {
    return jl_Character_isSpaceChar($ch);
};
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$040 = null;
}
let jur_AbstractCharClass$LazyJavaTitleCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 3 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$019 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$053 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category = 0;
}
let jur_UnicodeCategory__init_ = ($this, $category) => {
    jur_AbstractCharClass__init_($this);
    $this.$category = $category;
},
jur_UnicodeCategory__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategory_contains = ($this, $ch) => {
    return $this.$alt ^ ($this.$category != jl_Character_getType($ch & 65535) ? 0 : 1);
},
jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory),
jur_UnicodeCategoryScope_contains = ($this, $ch) => {
    return $this.$alt ^ (!($this.$category >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
};
function ju_AbstractList$1() {
    let a = this; jl_Object.call(a);
    a.$index4 = 0;
    a.$modCount1 = 0;
    a.$size12 = 0;
    a.$removeIndex0 = 0;
    a.$this$08 = null;
}
let ju_AbstractList$1_hasNext = $this => {
    return $this.$index4 >= $this.$size12 ? 0 : 1;
},
ju_AbstractList$1_next = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$modCount1;
    var$2 = $this.$this$08;
    if (var$1 < var$2.$modCount) {
        var$2 = new ju_ConcurrentModificationException;
        jl_Exception__init_(var$2);
        $rt_throw(var$2);
    }
    var$3 = $this.$index4;
    $this.$removeIndex0 = var$3;
    $this.$index4 = var$3 + 1 | 0;
    return ju_ArrayList_get(var$2, var$3);
};
function cgxgbta_AssetDownloadImpl$2() {
    let a = this; jl_Object.call(a);
    a.$val$url = null;
    a.$val$listener1 = null;
    a.$this$06 = null;
}
let cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_subtractQueue(var$1.$this$06);
    if (var$1.$this$06.$showLogs) {
        var$2 = jl_System_out();
        var$3 = var$1.$val$url;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(424)), var$3);
        var$3 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$2, var$3);
    }
};
function cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0() {
    let a = this; jl_Object.call(a);
    a.$_07 = null;
    a.$_12 = null;
    a.$_22 = null;
}
let cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_07;
    var$3 = var$1.$_12;
    var$1 = var$1.$_22;
    cgxgbta_AssetDownloadImpl_subtractQueue(var$2);
    if (var$2.$showLogs) {
        var$2 = jl_System_err();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(425)), var$3);
        var$3 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$2, var$3);
    }
},
cbgu_Collections = $rt_classWithoutFields(),
cbgu_Collections_allocateIterators = 0;
function cbgu_Array$ArrayIterator() {
    let a = this; jl_Object.call(a);
    a.$array5 = null;
    a.$allowRemove0 = 0;
    a.$index0 = 0;
    a.$valid = 0;
}
let cbgu_Array$ArrayIterator__init_0 = ($this, $array, $allowRemove) => {
    $this.$valid = 1;
    $this.$array5 = $array;
    $this.$allowRemove0 = $allowRemove;
},
cbgu_Array$ArrayIterator__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_Array$ArrayIterator();
    cbgu_Array$ArrayIterator__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array$ArrayIterator_hasNext = $this => {
    let var$1;
    if (!$this.$valid) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$1, $rt_s(426));
        $rt_throw(var$1);
    }
    return $this.$index0 >= $this.$array5.$size0 ? 0 : 1;
},
cbgu_Array$ArrayIterator_next = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index0;
    var$2 = $this.$array5;
    if (var$1 >= var$2.$size0) {
        var$2 = new ju_NoSuchElementException;
        jl_RuntimeException__init_(var$2, jl_String_valueOf1(var$1));
        $rt_throw(var$2);
    }
    if (!$this.$valid) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$2, $rt_s(426));
        $rt_throw(var$2);
    }
    var$3 = var$2.$items.data;
    $this.$index0 = var$1 + 1 | 0;
    return var$3[var$1];
};
function cbgu_Array$ArrayIterable() {
    let a = this; jl_Object.call(a);
    a.$array4 = null;
    a.$allowRemove = 0;
    a.$iterator10 = null;
    a.$iterator2 = null;
}
let otcic_JSStdoutPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStdoutPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(28);
    $rt_putStdout($rt_ustr($s));
},
cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0),
cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function cgxgbta_AssetLoadImpl$4() {
    let a = this; jl_Object.call(a);
    a.$val$name = null;
    a.$val$resolve = null;
    a.$this$051 = null;
}
let cgxgbta_AssetLoadImpl$4_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1;
    var$3 = cgxgbtdt_TypedArrays_toByteArray(new Int8Array(var$2.target.result));
    var$2 = cgxgbtf_FileData__init_0(var$1.$val$name, var$3);
    var$1.$val$resolve.accept(otji_JSWrapper_javaToJs(var$2));
},
cgxgbtdt_TypedArrays = $rt_classWithoutFields(),
cgxgbtdt_TypedArrays_toByteArray = $array => {
    return $rt_wrapArray($rt_bytecls, new Int8Array($array));
},
cgxgbtdt_TypedArrays_getTypedArray = $buffer => {
    let var$2, var$3;
    a: {
        if ($buffer instanceof jn_ByteBuffer)
            $buffer = cgxgbtdt_TypedArrays_getInt8Array($buffer);
        else if ($buffer instanceof jn_ShortBuffer) {
            $buffer = jn_JSBufferHelper_getArrayBufferView($buffer);
            $buffer = new Int16Array($buffer.buffer, $buffer.byteOffset, $buffer.byteLength / 2 | 0);
        } else {
            if (!($buffer instanceof jn_IntBuffer)) {
                if ($buffer instanceof jn_FloatBuffer) {
                    $buffer = cgxgbtdt_TypedArrays_getFloat32Array($buffer);
                    break a;
                }
                var$2 = new cbgu_GdxRuntimeException;
                $buffer = jl_String_valueOf(jl_Object_getClass($buffer));
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(427)), $buffer);
                jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
                $rt_throw(var$2);
            }
            $buffer = jn_JSBufferHelper_getArrayBufferView($buffer);
            $buffer = new Int32Array($buffer.buffer, $buffer.byteOffset, $buffer.byteLength / 4 | 0);
        }
    }
    return $buffer;
},
cgxgbtdt_TypedArrays_getInt8Array = $buff => {
    return jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getUint8Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Uint8Array($buff.buffer, $buff.byteOffset, $buff.byteLength);
},
cgxgbtdt_TypedArrays_getUint16Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Uint16Array($buff.buffer, $buff.byteOffset, $buff.byteLength / 2 | 0);
},
cgxgbtdt_TypedArrays_getFloat32Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Float32Array($buff.buffer, $buff.byteOffset, $buff.byteLength / 4 | 0);
},
cgxgbtdt_TypedArrays_getInt8Array0 = $buffer => {
    return $buffer.data;
},
jur_IntArrHash = $rt_classWithoutFields();
function cgxgbtf_FileData() {
    let a = this; jl_Object.call(a);
    a.$path = null;
    a.$bytes = null;
    a.$type6 = 0;
}
let cgxgbtf_FileData__init_2 = ($this, $path) => {
    cgxgbtf_FileData__init_($this, $path, 1, null);
},
cgxgbtf_FileData__init_1 = var_0 => {
    let var_1 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_2(var_1, var_0);
    return var_1;
},
cgxgbtf_FileData__init_3 = ($this, $path, $bytes) => {
    cgxgbtf_FileData__init_($this, $path, 2, $bytes);
},
cgxgbtf_FileData__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_3(var_2, var_0, var_1);
    return var_2;
},
cgxgbtf_FileData__init_ = ($this, $path, $type, $bytes) => {
    if ($bytes !== null && jl_String_endsWith($path, $rt_s(83)))
        $path = jl_String_substring($path, 0, $path.$nativeString.length - 1 | 0);
    $this.$path = $path;
    $this.$bytes = $bytes;
    $this.$type6 = $type;
},
cgxgbtf_FileData__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbtf_FileData_isDirectory = $this => {
    return $this.$type6 != 1 ? 0 : 1;
},
otjt_ArrayBufferView = $rt_classWithoutFields(),
otjt_TypedArray = $rt_classWithoutFields(otjt_ArrayBufferView),
otjt_Int8Array = $rt_classWithoutFields(otjt_TypedArray),
cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException),
cbgu_GdxRuntimeException__init_2 = ($this, $message) => {
    jl_RuntimeException__init_($this, $message);
},
cbgu_GdxRuntimeException__init_ = var_0 => {
    let var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_2(var_1, var_0);
    return var_1;
},
cbgu_GdxRuntimeException__init_1 = ($this, $t) => {
    jl_Throwable__init_0($this, $t);
},
cbgu_GdxRuntimeException__init_4 = var_0 => {
    let var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_1, var_0);
    return var_1;
},
cbgu_GdxRuntimeException__init_0 = ($this, $message, $t) => {
    jl_Throwable__init_($this, $message, $t);
},
cbgu_GdxRuntimeException__init_3 = (var_0, var_1) => {
    let var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_0(var_2, var_0, var_1);
    return var_2;
},
ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_AssetLoadImpl$5() {
    let a = this; jl_Object.call(a);
    a.$val$config = null;
    a.$val$assetFileUrl = null;
    a.$this$03 = null;
}
let cgxgbta_AssetLoadImpl$5_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $$je;
    var$3 = cgxgbtdt_TypedArrays_toByteArray(var$2.$data15);
    var$4 = var$3.data;
    var$1 = new jl_String;
    var$5 = var$4.length;
    jnci_UTF8Charset_$callClinit();
    var$2 = jnci_UTF8Charset_INSTANCE;
    var$6 = jn_ByteBuffer_wrap(var$3, 0, var$5);
    a: {
        try {
            var$2 = jnc_CharsetDecoder_decode0(jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder(var$2), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), var$6);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                var$2 = $$je;
            } else {
                throw $$e;
            }
        }
        var$6 = new jl_AssertionError;
        jl_Throwable__init_(var$6, $rt_s(428), var$2);
        $rt_throw(var$6);
    }
    var$7 = var$2.$array6 === null ? 0 : 1;
    if (var$7 && !var$2.$position0 && var$2.$limit0 == var$2.$capacityImpl())
        var$3 = jn_CharBuffer_array(var$2);
    else {
        var$3 = $rt_createCharArray(jn_Buffer_remaining(var$2));
        jn_CharBuffer_get(var$2, var$3, 0, var$3.data.length);
    }
    var$1.$nativeString = $rt_fullArrayToString(var$3.data);
    var$3 = (jl_String_split(var$1, $rt_s(26))).data;
    var$1 = $this.$this$03;
    var$5 = var$3.length;
    var$1.$assetTotal = var$5;
    var$8 = 0;
    while (var$8 < var$5) {
        var$1 = var$3[var$8];
        var$4 = (jl_String_split(var$1, $rt_s(85))).data;
        var$7 = var$4.length;
        if (var$7 != 5) {
            var$2 = new cbgu_GdxRuntimeException;
            var$6 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$6);
            var$9 = jl_StringBuilder_append0(jl_StringBuilder_append(var$6, $rt_s(429)), var$7);
            jl_AbstractStringBuilder_append0(var$9, 32);
            jl_StringBuilder_append(var$9, var$1);
            jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$6));
            $rt_throw(var$2);
        }
        var$1 = var$4[0];
        var$9 = var$4[1];
        var$2 = jl_String_trim(var$4[2]);
        var$10 = jl_String_equals(var$4[4], $rt_s(430));
        var$11 = jl_String_trim(var$2);
        if (!jl_String_isEmpty(var$11)) {
            var$2 = cbg_Files$FileType_Internal;
            if (jl_String_equals(var$1, $rt_s(431)))
                var$2 = cbg_Files$FileType_Classpath;
            else if (jl_String_equals(var$1, $rt_s(432)))
                var$2 = cbg_Files$FileType_Local;
            var$6 = cgxgbta_AssetType_Binary;
            if (jl_String_equals(var$9, $rt_s(222)))
                var$6 = cgxgbta_AssetType_Directory;
            if (!(!$this.$val$config.$preloadAssets && var$2 !== cbg_Files$FileType_Classpath)) {
                var$9 = $this.$this$03;
                var$1 = null;
                var$12 = jl_String_replace(jl_String_trim(var$11), $rt_s(433), $rt_s(83));
                if (jl_String_startsWith(var$12, $rt_s(83)))
                    var$12 = jl_String_substring0(var$12, 1);
                if (!jl_String_isEmpty(var$12) && !ju_HashMap_containsKey(var$9.$assetInQueue.$backingMap, var$12)) {
                    var$2 = cgxgbt_TeaFiles_getFileHandle(cbg_Gdx_files, var$12, var$2);
                    var$7 = cgxgbt_TeaFileHandle_exists(var$2);
                    if (!(!var$10 && var$7)) {
                        if (var$6 !== cgxgbta_AssetType_Directory) {
                            var$6 = var$9.$assetInQueue;
                            ju_HashMap_put(var$6.$backingMap, var$12, var$6);
                            var$6 = var$9.$assetDownloader;
                            var$11 = cgxgbta_AssetLoadImpl_getAssetUrl(var$9);
                            var$13 = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_(var$13);
                            jl_StringBuilder_append(jl_StringBuilder_append(var$13, var$11), var$12);
                            var$13 = jl_AbstractStringBuilder_toString(var$13);
                            var$11 = cgxgbta_AssetType_Binary;
                            var$14 = new cgxgbta_AssetLoadImpl$6;
                            var$14.$this$09 = var$9;
                            var$14.$val$listener0 = var$1;
                            var$14.$val$path1 = var$12;
                            var$14.$val$fileHandle = var$2;
                            cgxgbta_AssetDownloadImpl_load(var$6, 1, var$13, var$11, var$14);
                        } else if (!var$7)
                            cgxgbtf_MemoryFileStorage_mkdirs(cgxgbt_TeaFiles_getFileDB(var$2.$teaFiles, var$2.$type0), var$2);
                    }
                }
            }
        }
        var$8 = var$8 + 1 | 0;
    }
};
function cgxgbta_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
let cgxgbta_AssetType_Binary = null,
cgxgbta_AssetType_Directory = null,
cgxgbta_AssetType_$VALUES = null,
cgxgbta_AssetType__init_0 = ($this, var$1, var$2, $code) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$code = $code;
},
cgxgbta_AssetType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetType();
    cgxgbta_AssetType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetType__clinit_ = () => {
    let var$1, var$2, var$3;
    cgxgbta_AssetType_Binary = cgxgbta_AssetType__init_($rt_s(434), 0, $rt_s(435));
    var$1 = cgxgbta_AssetType__init_($rt_s(436), 1, $rt_s(222));
    cgxgbta_AssetType_Directory = var$1;
    var$2 = $rt_createArray(cgxgbta_AssetType, 2);
    var$3 = var$2.data;
    var$3[0] = cgxgbta_AssetType_Binary;
    var$3[1] = var$1;
    cgxgbta_AssetType_$VALUES = var$2;
},
cgxgbtfi_IndexedDBFileData = $rt_classWithoutFields(),
cgxgbtfi_IndexedDBFileData_create$js_body$_5 = (var$1, var$2) => {
    return { type : var$1, date : var$2 };
};
function cgxgbtft_LocalDBStorage$putFile$lambda$_2_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
let cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3;
    var$1 = var$1.$_01;
    var$2 = jl_System_err();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(437)), var$1);
    var$1 = jl_AbstractStringBuilder_toString(var$3);
    otcic_JsConsolePrintStream_println(var$2, var$1);
},
ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException),
dcgb_Manager = $rt_classWithoutFields(),
dcgb_ObjectManager = $rt_classWithoutFields(dcgb_Manager),
dcgb_ObjectManager_gameObjects = null,
dcgb_ObjectManager_add = $object => {
    let var$2, var$3;
    if ($object !== null) {
        var$2 = dcgb_ObjectManager_gameObjects;
        var$3 = ju_Arrays_copyOf(var$2.$array1, var$2.$array1.data.length + 1 | 0);
        var$3.data[var$2.$array1.data.length] = $object;
        var$2.$array1 = var$3;
        $object.$init();
        $object.$isInitialized = 1;
    }
    return $object;
},
dcgb_ObjectManager_remove = $object => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    if ($object === null)
        return 0;
    var$2 = dcgb_ObjectManager_gameObjects;
    while (true) {
        a: {
            var$3 = var$2.$array1;
            var$4 = 0;
            var$5 = var$2.$array1;
            var$6 = var$2.$array1.data.length - var$4 | 0;
            if (!var$6)
                var$4 = (-1);
            else {
                b: {
                    if ($object !== null) {
                        var$6 = 0 + var$6 | 0;
                        while (true) {
                            if (var$4 >= var$6)
                                break b;
                            if (jl_Object_equals($object, var$5.data[var$4]))
                                break;
                            var$4 = var$4 + 1 | 0;
                        }
                        break a;
                    }
                    var$6 = 0 + var$6 | 0;
                    while (true) {
                        if (var$4 >= var$6)
                            break b;
                        if (var$5.data[var$4] === null)
                            break;
                        var$4 = var$4 + 1 | 0;
                    }
                    break a;
                }
                var$4 = (-1);
            }
        }
        if (var$3 !== var$2.$array1)
            continue;
        else
            break;
    }
    c: {
        if (var$4 >= 0) {
            var$7 = juc_CopyOnWriteArrayList_size(var$2);
            if (var$4 >= 0 && var$4 < var$7) {
                var$8 = var$4 + 1 | 0;
                if (var$8 >= 0 && var$8 <= var$7) {
                    var$5 = $rt_createArray(jl_Object, var$7 - 1 | 0);
                    jl_System_fastArraycopy(var$2.$array1, 0, var$5, 0, var$4);
                    if (var$7 > var$8)
                        jl_System_fastArraycopy(var$2.$array1, var$8, var$5, var$4, var$7 - var$8 | 0);
                    var$2.$array1 = var$5;
                    break c;
                }
                $object = new jl_IndexOutOfBoundsException;
                jl_Exception__init_($object);
                $rt_throw($object);
            }
            $object = new jl_IndexOutOfBoundsException;
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(438)), var$4), $rt_s(439)), var$7);
            jl_RuntimeException__init_($object, jl_AbstractStringBuilder_toString(var$2));
            $rt_throw($object);
        }
    }
    $object.$dispose();
    $object.$isInitialized = 0;
    return 1;
},
dcgb_ObjectManager_get = $name => {
    let $a, var$3, var$4, var$5;
    $a = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($a);
    var$3 = dcgb_ObjectManager_gameObjects;
    var$4 = new dcgb_ObjectManager$get$lambda$_5_0;
    var$4.$_015 = $a;
    var$5 = juc_CopyOnWriteArrayList_iterator(var$3);
    var$3 = var$4;
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$5)) {
        $a = juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$5);
        jl_AbstractStringBuilder_append(var$3.$_015, $a.$name);
    }
    $a = ju_Collection_stream(dcgb_ObjectManager_gameObjects);
    var$3 = new dcgb_ObjectManager$get$lambda$_5_1;
    var$3.$_03 = $name;
    $name = jusi_SimpleStreamImpl_filter($a, var$3);
    $a = new jusi_FindFirstConsumer;
    var$3 = $name;
    while ($a.$result === null && jusi_WrappingStreamImpl_next(var$3, $a)) {
    }
    $name = $a.$result;
    if ($name !== null)
        $a = ju_Optional__init_(ju_Objects_requireNonNull($name));
    else {
        if (ju_Optional_emptyInstance === null)
            ju_Optional_emptyInstance = ju_Optional__init_(null);
        $a = ju_Optional_emptyInstance;
    }
    $name = null;
    $a = $a.$value1;
    if ($a !== null)
        $name = $a;
    return $name;
},
dcgb_ObjectManager_render = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19;
    cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 0.0);
    cbg_Gdx_gl.$glClear(16640);
    dcgb_Storage_$callClinit();
    var$1 = dcgb_Storage_batch;
    if (var$1.$drawing) {
        var$2 = new jl_IllegalStateException;
        jl_RuntimeException__init_(var$2, $rt_s(440));
        $rt_throw(var$2);
    }
    var$1.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    var$2 = var$1.$customShader;
    if (var$2 !== null)
        var$2.$bind();
    else {
        var$2 = var$1.$shader;
        var$3 = cbg_Gdx_gl20;
        cbggg_ShaderProgram_checkManaged(var$2);
        var$3.$glUseProgram(var$2.$program);
    }
    cbggg_SpriteBatch_setupMatrices(var$1);
    var$1.$drawing = 1;
    dcgbm_Camera2D_$callClinit();
    cbgg_OrthographicCamera_update(dcgbm_Camera2D_camera);
    var$1 = dcgb_Storage_batch;
    var$2 = dcgbm_Camera2D_camera.$combined;
    if (var$1.$drawing)
        cbggg_SpriteBatch_flush(var$1);
    cbgm_Matrix4_set(var$1.$projectionMatrix, var$2);
    if (var$1.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$1);
    var$1 = ju_Collection_stream(dcgb_ObjectManager_gameObjects);
    var$2 = new dcgb_ObjectManager$render$lambda$_9_0;
    var$1 = jusi_SimpleStreamImpl_filter(var$1, var$2);
    var$2 = new dcgb_ObjectManager$render$lambda$_9_1;
    var$3 = new ju_Comparator$comparingInt$lambda$_14_0;
    var$3.$_011 = var$2;
    var$1 = var$1;
    var$2 = new jusi_SortedStreamImpl;
    var$2.$sourceStream0 = var$1;
    var$4 = var$1;
    var$5 = Long_lo(Long_fromInt(juc_CopyOnWriteArrayList_size(var$4.$sourceStream.$spliterator.$collection)));
    if (var$5 < 0) {
        var$1 = ju_ArrayList__init_();
        while (true) {
            ju_Objects_requireNonNull(var$1);
            var$6 = new jusi_SimpleStreamImpl$toArray$lambda$_21_0;
            var$6.$_013 = var$1;
            if (!jusi_WrappingStreamImpl_next(var$4, var$6))
                break;
        }
        var$4 = var$1;
        var$7 = $rt_createArray(jl_Object, var$4.$size3);
        var$5 = 0;
        while (true) {
            var$8 = var$7.data;
            if (var$5 >= var$8.length)
                break;
            var$8[var$5] = ju_ArrayList_get(var$4, var$5);
            var$5 = var$5 + 1 | 0;
        }
    } else {
        var$7 = $rt_createArray(jl_Object, var$5);
        var$1 = new jusi_SimpleStreamImpl$ArrayFillingConsumer;
        var$1.$array7 = var$7;
        while (jusi_WrappingStreamImpl_next(var$4, var$1)) {
        }
        var$8 = var$7.data;
        var$5 = var$1.$index3;
        if (var$5 < var$8.length)
            var$7 = ju_Arrays_copyOf(var$7, var$5);
    }
    var$8 = var$7.data;
    var$2.$array8 = var$7;
    var$9 = var$8.length;
    if (var$9) {
        var$8 = $rt_createArray(jl_Object, var$9);
        var$10 = 1;
        var$11 = var$7;
        while (var$10 < var$9) {
            var$12 = 0;
            while (true) {
                var$13 = var$11.data;
                var$14 = var$13.length;
                if (var$12 >= var$14)
                    break;
                var$15 = jl_Math_min(var$14, var$12 + var$10 | 0);
                var$5 = var$12 + (2 * var$10 | 0) | 0;
                var$14 = jl_Math_min(var$14, var$5);
                var$16 = var$12;
                var$17 = var$15;
                a: {
                    b: {
                        while (var$12 != var$15) {
                            if (var$17 == var$14)
                                break b;
                            var$1 = var$13[var$12];
                            var$4 = var$13[var$17];
                            if (var$3.$compare(var$1, var$4) > 0) {
                                var$18 = var$8.data;
                                var$19 = var$16 + 1 | 0;
                                var$18[var$16] = var$4;
                                var$17 = var$17 + 1 | 0;
                            } else {
                                var$18 = var$8.data;
                                var$19 = var$16 + 1 | 0;
                                var$18[var$16] = var$1;
                                var$12 = var$12 + 1 | 0;
                            }
                            var$16 = var$19;
                        }
                        while (true) {
                            if (var$17 >= var$14)
                                break a;
                            var$18 = var$8.data;
                            var$12 = var$16 + 1 | 0;
                            var$15 = var$17 + 1 | 0;
                            var$18[var$16] = var$13[var$17];
                            var$16 = var$12;
                            var$17 = var$15;
                        }
                    }
                    while (true) {
                        if (var$12 >= var$15)
                            break a;
                        var$18 = var$8.data;
                        var$17 = var$16 + 1 | 0;
                        var$14 = var$12 + 1 | 0;
                        var$18[var$16] = var$13[var$12];
                        var$16 = var$17;
                        var$12 = var$14;
                    }
                }
                var$12 = var$5;
            }
            var$10 = var$10 * 2 | 0;
            var$13 = var$11;
            var$11 = var$8;
            var$8 = var$13;
        }
        c: {
            if (var$11 !== var$7) {
                var$5 = 0;
                while (true) {
                    var$7 = var$11.data;
                    if (var$5 >= var$7.length)
                        break c;
                    var$8.data[var$5] = var$7[var$5];
                    var$5 = var$5 + 1 | 0;
                }
            }
        }
    }
    var$1 = var$2;
    while (true) {
        while (true) {
            var$9 = var$1.$index6;
            var$7 = var$1.$array8.data;
            var$5 = $rt_compare(var$9, var$7.length);
            if (var$5 >= 0)
                break;
            var$1.$index6 = var$9 + 1 | 0;
            var$7[var$9].$render();
        }
        if (!(var$5 >= 0 ? 0 : 1))
            break;
    }
    cbggg_ModelBatch_end(dcgb_Storage_modelBatch);
    cbggg_SpriteBatch_end(dcgb_Storage_batch);
},
dcgb_ObjectManager_update = () => {
    let var$1, $e;
    var$1 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$1)) {
        $e = juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$1);
        if ($e.$isAutomaticShown)
            $e.$update();
    }
},
dcgb_ObjectManager_test = () => {
    let var$1;
    var$1 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$1)) {
        (juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$1)).$test();
    }
},
dcgb_ObjectManager_resize = ($w, $h) => {
    let var$3;
    var$3 = juc_CopyOnWriteArrayList_iterator(dcgb_ObjectManager_gameObjects);
    while (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$3)) {
        juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$3);
    }
},
dcgb_ObjectManager__clinit_ = () => {
    let var$1;
    var$1 = new juc_CopyOnWriteArrayList;
    var$1.$array1 = $rt_createArray(jl_Object, 0);
    dcgb_ObjectManager_gameObjects = var$1;
};
function cgxgbta_AssetDownloadImpl$1() {
    let a = this; jl_Object.call(a);
    a.$val$listener = null;
    a.$this$07 = null;
}
let cgxgbta_AssetDownloadImpl$1_onFailure = ($this, $url) => {
    let var$2, var$3;
    if ($this.$this$07.$showLogs) {
        var$2 = jl_System_err();
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(441)), $url);
        $url = jl_AbstractStringBuilder_toString(var$3);
        otcic_JsConsolePrintStream_println(var$2, $url);
    }
},
cgxgbta_AssetDownloadImpl$1_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4;
    var$2 = var$2;
    if ($this.$this$07.$showLogs) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(442)), var$1);
        var$4 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, var$4);
    }
    $this.$val$listener.$onSuccess(var$1, var$2);
},
cgxgbta_AssetDownloadImpl$3 = $rt_classWithoutFields(),
cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = null,
cgxgbta_AssetDownloadImpl$3_$callClinit = () => {
    cgxgbta_AssetDownloadImpl$3_$callClinit = $rt_eraseClinit(cgxgbta_AssetDownloadImpl$3);
    cgxgbta_AssetDownloadImpl$3__clinit_();
},
cgxgbta_AssetDownloadImpl$3__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbta_AssetType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = var$1;
    var$2[cgxgbta_AssetType_Binary.$ordinal0] = 1;
    var$2[cgxgbta_AssetType_Directory.$ordinal0] = 2;
},
dcgb_GameBase = $rt_classWithoutFields(0),
dcgb_GameLifeCycle = $rt_classWithoutFields(),
dcgb_GameLifeCycle_awake = $this => {
    return;
},
dcgb_GameLifeCycle_init = $this => {
    return;
},
dcgb_GameLifeCycle_update = $this => {
    return;
},
dcgb_GameLifeCycle_dispose = $this => {
    return;
},
dcgb_GameLifeCycle_end = $this => {
    return;
},
dcgb_GameLifeCycle_test = $this => {
    return;
},
dcgb_GameLifeCycle_render = $this => {
    return;
},
dcgb_GameLifeCycle_resize = ($this, $width, $height) => {
    return;
},
dcgb_GameLifeCycle_resume = $this => {
    return;
},
dcgb_GameLifeCycle_pause = $this => {
    return;
};
function dcgb_GameObject() {
    let a = this; dcgb_GameLifeCycle.call(a);
    a.$objID = Long_ZERO;
    a.$isAutomaticShown = 0;
    a.$isInitialized = 0;
    a.$isLoadingDone = 0;
    a.$functionalObject = 0;
    a.$isNecessary = 0;
    a.$name = null;
    a.$renderOrder = 0;
}
let dcgb_GameObject_id = Long_ZERO,
dcgb_GameObject__init_ = ($this, $name) => {
    let var$2;
    var$2 = Long_add(dcgb_GameObject_id, Long_fromInt(1));
    dcgb_GameObject_id = var$2;
    $this.$objID = var$2;
    $this.$isAutomaticShown = 1;
    $this.$isInitialized = 0;
    $this.$isLoadingDone = 0;
    $this.$functionalObject = 0;
    $this.$isNecessary = 0;
    $this.$renderOrder = 0;
    if ($name === null)
        $name = $rt_s(443);
    $this.$name = $name;
},
dcgb_GameObject_registerSound = ($this, $name, $path) => {
    let var$3;
    dcgb_SoundsManager_$callClinit();
    $path = dcgbs_Data_get($path);
    var$3 = new cgxgbtwh_HowlSound;
    var$3.$howl = cgxgbtwh_Howl_create$js_body$_1(cgxgbtdt_TypedArrays_getInt8Array0(cbgf_FileHandle_readBytes($path)));
    ju_HashMap_put(dcgb_SoundsManager_sounds, $name, var$3);
    return var$3;
},
dcgb_GameObject__clinit_ = () => {
    dcgb_GameObject_id = Long_ZERO;
},
dcgc_RootObject = $rt_classWithoutFields(dcgb_GameObject),
otjb_TimerHandler = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_04 = null;
    a.$_10 = null;
    a.$_20 = null;
    a.$_30 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0_onTimer$exported$0 = var$1 => {
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_loadBinaryInternally(var$1.$_04, 1, var$1.$_10, var$1.$_20, var$1.$_30);
},
jl_AbstractStringBuilder$Constants = $rt_classWithoutFields(),
jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null,
jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null,
jl_AbstractStringBuilder$Constants_floatAnalysisResult = null,
jl_AbstractStringBuilder$Constants__clinit_ = () => {
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
},
otcit_FloatAnalyzer = $rt_classWithoutFields(),
otcit_FloatAnalyzer_MAX_MANTISSA = 0,
otcit_FloatAnalyzer_mantissa10Table = null,
otcit_FloatAnalyzer_exp10Table = null,
otcit_FloatAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, $posCmp, $upperPos, $mantissaShift, $decMantissa, $decMantissaHi, $decMantissaLow, $lowerPos, $lowerPos_0, $upperPos_0;
    $bits = jl_Float_floatToIntBits($d);
    $result.$sign0 = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    if ($exponent)
        $bits = $mantissa | 8388608;
    else {
        $bits = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt($bits), Long_fromInt(8388608)), Long_ZERO)) {
            $bits = $bits << 1;
            $exponent = $exponent + (-1) | 0;
        }
    }
    var$6 = otcit_FloatAnalyzer_exp10Table.data;
    $mantissa = 0;
    $decExponent = var$6.length;
    if ($mantissa > $decExponent) {
        $result = new jl_IllegalArgumentException;
        jl_Exception__init_($result);
        $rt_throw($result);
    }
    $posCmp = $decExponent - 1 | 0;
    a: {
        while (true) {
            if ($mantissa > $posCmp) {
                $decExponent = ( -$mantissa | 0) - 1 | 0;
                break a;
            }
            $decExponent = ($mantissa + $posCmp | 0) / 2 | 0;
            $upperPos = var$6[$decExponent];
            if ($upperPos == $exponent)
                break;
            if ($exponent >= $upperPos)
                $mantissa = $decExponent + 1 | 0;
            else
                $posCmp = $decExponent - 1 | 0;
        }
    }
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    $mantissa = $decExponent + 1 | 0;
    $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
    $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight($bits, otcit_FloatAnalyzer_mantissa10Table.data[$mantissa], $mantissaShift);
    if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
        while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
        }
        var$6 = otcit_FloatAnalyzer_exp10Table.data;
        $mantissa = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
        $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight($bits, otcit_FloatAnalyzer_mantissa10Table.data[$mantissa], $mantissaShift);
    }
    $mantissa = $bits << 1;
    $bits = $mantissa + 1 | 0;
    var$6 = otcit_FloatAnalyzer_mantissa10Table.data;
    $exponent = $decExponent + 1 | 0;
    $posCmp = var$6[$exponent];
    $upperPos = $mantissaShift - 1 | 0;
    $decMantissaHi = otcit_FloatAnalyzer_mulAndShiftRight($bits, $posCmp, $upperPos);
    $decMantissaLow = otcit_FloatAnalyzer_mulAndShiftRight($mantissa - 1 | 0, otcit_FloatAnalyzer_mantissa10Table.data[$exponent], $upperPos);
    $lowerPos = 1;
    while (true) {
        $lowerPos_0 = $lowerPos * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $lowerPos_0), $rt_udiv($decMantissaLow, $lowerPos_0)) <= 0)
            break;
        $lowerPos = $lowerPos_0;
    }
    $upperPos = 1;
    while (true) {
        $upperPos_0 = $upperPos * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $upperPos_0), $rt_udiv($decMantissaHi, $upperPos_0)) >= 0)
            break;
        $upperPos = $upperPos_0;
    }
    $posCmp = $rt_ucmp($lowerPos, $upperPos);
    $mantissa = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos), $upperPos) + $upperPos | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos / 2 | 0) | 0), $upperPos), $upperPos);
    if (jl_Long_compareUnsigned(Long_fromInt($mantissa), Long_fromInt(1000000000)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            $mantissa = $rt_udiv($mantissa, 10);
            if ($rt_ucmp($mantissa, 1000000000) < 0)
                break;
        }
    else if ($rt_ucmp($mantissa, 100000000) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = $mantissa * 10 | 0;
    }
    $result.$mantissa = $mantissa;
    $result.$exponent = $decExponent - 50 | 0;
},
otcit_FloatAnalyzer_mulAndShiftRight = ($a, $b, $shift) => {
    return Long_lo(Long_shru(Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0))), 32 - $shift | 0));
},
otcit_FloatAnalyzer__clinit_ = () => {
    otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
    (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
    (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
    268, 271, 275, 278, 281, 285, 288, 291]);
};
function otcit_FloatAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign0 = 0;
}
let dcgbm_Camera2D = $rt_classWithoutFields(dcgb_GameObject),
dcgbm_Camera2D_camera = null,
dcgbm_Camera2D_originPosition = null,
dcgbm_Camera2D_$callClinit = () => {
    dcgbm_Camera2D_$callClinit = $rt_eraseClinit(dcgbm_Camera2D);
    dcgbm_Camera2D__clinit_();
},
dcgbm_Camera2D_test = $this => {
    return;
},
dcgbm_Camera2D_update = $this => {
    dcgbm_Camera2D_$callClinit();
    cbgg_OrthographicCamera_update(dcgbm_Camera2D_camera);
},
dcgbm_Camera2D__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = new cbgg_OrthographicCamera;
    var$1.$position1 = cbgm_Vector3__init_();
    var$1.$direction = cbgm_Vector3__init_0(0.0, 0.0, (-1.0));
    var$1.$up = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    var$1.$projection = cbgm_Matrix4__init_();
    var$1.$view = cbgm_Matrix4__init_();
    var$1.$combined = cbgm_Matrix4__init_();
    var$1.$invProjectionView = cbgm_Matrix4__init_();
    var$1.$near = 1.0;
    var$1.$far = 100.0;
    var$1.$viewportWidth = 0.0;
    var$1.$viewportHeight = 0.0;
    var$2 = new cbgm_Frustum;
    cbgm_Frustum_$callClinit();
    var$2.$planes = $rt_createArray(cbgm_Plane, 6);
    var$3 = $rt_createArray(cbgm_Vector3, 8);
    var$4 = var$3.data;
    var$4[0] = cbgm_Vector3__init_();
    var$4[1] = cbgm_Vector3__init_();
    var$4[2] = cbgm_Vector3__init_();
    var$4[3] = cbgm_Vector3__init_();
    var$4[4] = cbgm_Vector3__init_();
    var$4[5] = cbgm_Vector3__init_();
    var$4[6] = cbgm_Vector3__init_();
    var$4[7] = cbgm_Vector3__init_();
    var$2.$planePoints = var$3;
    var$2.$planePointsArray = $rt_createFloatArray(24);
    var$5 = 0;
    while (var$5 < 6) {
        var$3 = var$2.$planes.data;
        var$6 = new cbgm_Plane;
        var$7 = cbgm_Vector3__init_();
        var$8 = cbgm_Vector3__init_();
        var$6.$normal = var$8;
        var$6.$d = 0.0;
        cbgm_Vector3_nor(cbgm_Vector3_set0(var$8, var$7));
        var$6.$d = 0.0;
        var$3[var$5] = var$6;
        var$5 = var$5 + 1 | 0;
    }
    var$1.$frustum = var$2;
    var$1.$tmpVec = cbgm_Vector3__init_();
    var$2 = new cbgmc_Ray;
    var$6 = cbgm_Vector3__init_();
    var$7 = cbgm_Vector3__init_();
    cbgmc_Ray_$callClinit();
    var$2.$origin = cbgm_Vector3__init_();
    var$2.$direction0 = cbgm_Vector3__init_();
    cbgm_Vector3_set0(var$2.$origin, var$6);
    cbgm_Vector3_nor(cbgm_Vector3_set0(var$2.$direction0, var$7));
    var$1.$ray = var$2;
    var$1.$zoom = 1.0;
    var$1.$tmp0 = cbgm_Vector3__init_();
    var$1.$near = 0.0;
    dcgbm_Camera2D_camera = var$1;
    dcgbm_Camera2D_originPosition = var$1.$position1;
},
dcgbmc_GameComponent = $rt_classWithoutFields(dcgb_GameObject),
dcgbmc_SceneBase = $rt_classWithoutFields(0);
function dcgbmc_SceneComponent() {
    let a = this; dcgbmc_GameComponent.call(a);
    a.$isShowsScene = 0;
    a.$objectNames = null;
    a.$prepareToLoad = null;
}
let dcgbmc_SceneComponent_add = ($this, $object) => {
    if ($object !== null) {
        ju_ArrayList_add($this.$prepareToLoad, $object);
        ju_ArrayList_add($this.$objectNames, $object.$name);
    }
    return $this;
},
dcgbmc_Widget = $rt_classWithoutFields(0),
dcgbm_UserInterface = $rt_classWithoutFields(0),
dcgbmw_Scene = $rt_classWithoutFields(dcgbmc_SceneComponent),
dcgccs_StandardScene = $rt_classWithoutFields(dcgbmw_Scene),
dcgccs_StandardScene__init_ = ($this, $name) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    dcgb_GameObject__init_($this, $name);
    $this.$isShowsScene = 1;
    $this.$objectNames = ju_ArrayList__init_();
    $this.$prepareToLoad = ju_ArrayList__init_();
    var$2 = new dcgbmw_Background;
    dcgccss_TileColorManager_$callClinit();
    var$3 = dcgccss_TileColorManager_currentColor;
    dcgb_GameObject__init_(var$2, $rt_s(444));
    var$2.$color3 = var$3;
    var$4 = $this;
    dcgbmc_SceneComponent_add(var$4, var$2);
    var$5 = new dcgccso_TileBoard;
    dcgccso_TileBoard_$callClinit();
    dcgbmc_SizeComponent__init_(var$5, $rt_s(445), dcgccso_TileBoard_size);
    dcgbmc_SceneComponent_add(var$4, var$5);
    dcgbmc_SceneComponent_add(var$4, dcgccso_Tile__init_(dcgccsf_TileType_EMPTY, dcgccss_TileColorManager_currentColor, dcgccsf_TilePosition__init_(ju_Random_nextInt(dcgb_Constant_random, 8), ju_Random_nextInt(dcgb_Constant_random, 8))));
    var$5 = new dcgccso_ShapeSelectBar;
    dcgbmc_DrawableComponent__init_(var$5, $rt_s(446));
    var$3 = new dcgbmf_Size;
    var$2 = var$5;
    dcgbmf_Size__init_0(var$3, dcgbmc_DrawableComponent_getScreenWidth(var$2), dcgbmc_DrawableComponent_getScreenHeight(var$2) * 0.17499999701976776 | 0);
    var$5.$size5 = var$3;
    dcgbmc_SceneComponent_add(var$4, var$5);
    var$5 = new dcgccso_Controller;
    dcgb_GameObject__init_(var$5, $rt_s(447));
    var$5.$renderOrder = 10;
    dcgbmc_SceneComponent_add(var$4, var$5);
    var$3 = new dcgbmc_SurfaceComponent;
    var$6 = dcgbmf_Size_widthScale(0.10000000149011612);
    var$7 = dcgbmf_RenderPosition_TOP_RIGHT;
    var$5 = dcgbmf_Padding_top(dcgbmf_Padding_right(dcgbmf_Padding__init_(), (dcgbmf_Size_widthScale(0.07500000298023224)).$width0), (dcgbmf_Size_heightScale(0.07500000298023224)).$height1);
    var$8 = dcgbmf_RenderFormat_RGB_8;
    dcgbmc_SizeComponent__init_(var$3, $rt_s(448), var$6);
    var$3.$isDone = 0;
    var$3.$scale = 1.0;
    var$2 = dcgbu_TypeUtil_toPixmapFormat(var$8);
    var$3.$format1 = var$2;
    var$3.$pixmap = cbgg_Pixmap__init_(var$6.$width0, var$6.$height1, var$2);
    if (var$7 === null)
        var$7 = dcgbmf_RenderPosition_CENTER;
    var$3.$renderPosition = var$7;
    if (var$5 === null)
        var$5 = dcgbmf_Padding_zero();
    var$3.$padding = var$5;
    var$3.$scale = 1.0;
    dcgbc_Colors_$callClinit();
    var$5 = dcgbc_Colors_TRANSPARENT;
    dcgbmc_SurfaceComponent_checkNotDone(var$3);
    var$2 = var$3.$pixmap;
    if (var$2 === null) {
        var$5 = new dcgbmc_DrawingException;
        jl_RuntimeException__init_(var$5, $rt_s(449));
        $rt_throw(var$5);
    }
    cbgg_Pixmap_setColor(var$2, var$5);
    var$3.$currentColor = var$5;
    var$5 = cbgg_Color_BLACK;
    dcgbmc_SurfaceComponent_checkNotDone(var$3);
    var$9 = cbgg_Pixmap_getWidth(var$3.$pixmap);
    var$10 = cbgg_Pixmap_getHeight(var$3.$pixmap);
    cbgg_Pixmap_setColor(var$3.$pixmap, var$5);
    cbgg_Pixmap_fill(var$3.$pixmap);
    cbgg_Pixmap_setColor(var$3.$pixmap, var$3.$currentColor);
    cbgg_Pixmap_fillCircle(var$3.$pixmap, 10, 10, 10);
    var$5 = var$3.$pixmap;
    var$11 = (var$9 - 10 | 0) - 1 | 0;
    cbgg_Pixmap_fillCircle(var$5, var$11, 10, 10);
    var$5 = var$3.$pixmap;
    var$12 = (var$10 - 10 | 0) - 1 | 0;
    cbgg_Pixmap_fillCircle(var$5, 10, var$12, 10);
    cbgg_Pixmap_fillCircle(var$3.$pixmap, var$11, var$12, 10);
    cbgg_Pixmap_fillRectangle(var$3.$pixmap, 10, 0, var$9 - 20 | 0, var$10);
    cbgg_Pixmap_fillRectangle(var$3.$pixmap, 0, 10, var$9, var$10 - 20 | 0);
    var$2 = var$3.$pixmap;
    if (var$2 === null) {
        $name = new dcgbmc_DrawingException;
        jl_RuntimeException__init_($name, $rt_s(450));
        $rt_throw($name);
    }
    var$3.$texture = cbgg_Texture__init_(var$2);
    var$3.$isDone = 1;
    dcgbmc_SceneComponent_add(var$4, var$3);
    var$6 = new dcgbmw_ImageButton;
    var$2 = cbgg_Texture__init_(dcgbu_GraphicUtil_adjustTextureSize((dcgbmf_Size_widthScale(0.10000000149011612)).$width0, (dcgbmf_Size_widthScale(0.10000000149011612)).$height1, cbgg_Texture__init_3(dcgbs_Data_get($rt_s(451)), null, 0)));
    var$5 = dcgbmf_RenderPosition_TOP_RIGHT;
    var$3 = dcgbmf_Padding_top(dcgbmf_Padding_right(dcgbmf_Padding__init_(), (dcgbmf_Size_widthScale(0.07500000298023224)).$width0), (dcgbmf_Size_heightScale(0.07500000298023224)).$height1);
    dcgbmc_SizeComponent__init_(var$6, $rt_s(452), dcgbmf_Size__init_(cbgg_Texture_getWidth(var$2), cbgg_Texture_getHeight(var$2)));
    var$6.$isDone = 0;
    var$6.$scale = 1.0;
    var$6.$texture = var$2;
    var$6.$renderPosition = var$5;
    if (var$3 === null)
        var$3 = dcgbmf_Padding_zero();
    var$6.$padding = var$3;
    var$6.$pixmap = null;
    var$6.$format1 = dcgbu_TypeUtil_toPixmapFormat(dcgbmf_RenderFormat_NONE);
    var$6.$draggingEnd = 0;
    var$6.$wasDownLastFrame = 0;
    var$5 = new dcgccs_StandardScene$_init_$lambda$_0_0;
    var$3 = var$6;
    var$3.$onClickCallBack = var$5;
    dcgbmc_SceneComponent_add(var$4, var$3);
    var$5 = new dcgccso_Score;
    dcgbmw_Text__init_(var$5, $rt_s(453), dcgccso_Score_getScoreString(), 32, dcgbmf_RenderPosition_TOP_CENTER, dcgbmf_Padding_top(dcgbmf_Padding__init_(), dcgbmf_Size_height(dcgbmf_Size_heightScale(0.07500000298023224))));
    dcgbmc_TextComponent_setFontSize(dcgbmc_TextComponent_setText(dcgbmc_TextComponent_setColor(var$5, cbgg_Color_BLACK), dcgccso_Score_getScoreString()), cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) / 10 | 0);
    dcgbmc_SceneComponent_add(var$4, var$5);
    dcgbmc_SceneComponent_add(var$4, dcgbmc_ThreadComponent__init_($rt_s(454), $name, null));
    dcgb_GameObject_registerSound($this, $rt_s(454), $rt_s(455));
},
dcgccs_StandardScene__init_0 = var_0 => {
    let var_1 = new dcgccs_StandardScene();
    dcgccs_StandardScene__init_(var_1, var_0);
    return var_1;
},
dcgccs_StandardScene_init = $this => {
    return;
},
dcgb_SceneManager = $rt_classWithoutFields(dcgb_Manager),
dcgb_SceneManager_currentSceneName = null,
dcgb_SceneManager_scenesObjectsMap = null,
dcgb_SceneManager_$callClinit = () => {
    dcgb_SceneManager_$callClinit = $rt_eraseClinit(dcgb_SceneManager);
    dcgb_SceneManager__clinit_();
},
dcgb_SceneManager__clinit_ = () => {
    dcgb_SceneManager_currentSceneName = $rt_s(456);
    dcgb_SceneManager_scenesObjectsMap = ju_HashMap__init_();
},
dcgb_Storage = $rt_classWithoutFields(),
dcgb_Storage_modelBatch = null,
dcgb_Storage_modelBuilder = null,
dcgb_Storage_environment = null,
dcgb_Storage_batch = null,
dcgb_Storage_random = null,
dcgb_Storage_$callClinit = () => {
    dcgb_Storage_$callClinit = $rt_eraseClinit(dcgb_Storage);
    dcgb_Storage__clinit_();
},
dcgb_Storage__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new cbggg_ModelBatch;
    var$2 = new cbggg_ModelBatch$RenderablePool;
    cbgu_Pool__init_(var$2, 16, 2147483647);
    var$2.$obtained = cbgu_Array__init_();
    var$1.$renderablesPool = var$2;
    var$1.$renderables = cbgu_Array__init_();
    var$2 = new cbgggu_DefaultRenderableSorter;
    var$2.$tmpV1 = cbgm_Vector3__init_();
    var$2.$tmpV2 = cbgm_Vector3__init_();
    var$1.$sorter = var$2;
    var$1.$ownContext = 1;
    var$3 = new cbgggu_RenderContext;
    var$2 = new cbgggu_DefaultTextureBinder;
    var$2.$reuseCount = 0;
    var$2.$bindCount = 0;
    var$4 = new cbgggu_TextureDescriptor;
    var$4.$texture2 = null;
    var$2.$tempDesc = var$4;
    var$2.$currentTexture = 0;
    var$5 = cbgu_BufferUtils_newIntBuffer(16);
    cbg_Gdx_gl.$glGetIntegerv(34930, var$5);
    var$6 = jl_Math_min(jn_IntBufferImpl_get(var$5, 0), 32);
    var$7 = var$6 - 1 | 0;
    if (var$7 >= 0 && (1 + var$7 | 0) <= var$6) {
        var$2.$method = 1;
        var$2.$offset0 = 1;
        var$2.$count2 = var$7;
        var$2.$textures0 = $rt_createArray(cbgg_GLTexture, var$7);
        var$2.$unitsLRU = $rt_createIntArray(var$7);
        var$3.$textureBinder = var$2;
        var$1.$context0 = var$3;
        var$2 = new cbgggu_DefaultShaderProvider;
        var$2.$shaders0 = cbgu_Array__init_();
        var$3 = new cbgggs_DefaultShader$Config;
        var$3.$vertexShader = null;
        var$3.$fragmentShader = null;
        var$3.$numDirectionalLights = 2;
        var$3.$numPointLights = 5;
        var$3.$numSpotLights = 0;
        var$3.$numBones = 12;
        var$3.$numBoneWeights = 4;
        var$3.$ignoreUnimplemented = 1;
        var$3.$defaultCullFace = (-1);
        var$3.$defaultDepthFunc = (-1);
        var$2.$config0 = var$3;
        var$1.$shaderProvider = var$2;
        dcgb_Storage_modelBatch = var$1;
        var$1 = new cbgggu_ModelBuilder;
        var$1.$builders = cbgu_Array__init_();
        var$1.$tmpTransform = cbgm_Matrix4__init_();
        dcgb_Storage_modelBuilder = var$1;
        var$1 = new cbggg_Environment;
        var$1.$attributes4 = cbgu_Array__init_();
        var$1.$sorted = 1;
        dcgb_Storage_environment = var$1;
        var$1 = new cbggg_SpriteBatch;
        cbggg_SpriteBatch_$callClinit();
        cbggg_SpriteBatch__init_(var$1, 1000, null);
        dcgb_Storage_batch = var$1;
        dcgb_Storage_random = new ju_Random;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$1, $rt_s(457));
    $rt_throw(var$1);
};
function cbgg_Camera() {
    let a = this; jl_Object.call(a);
    a.$position1 = null;
    a.$direction = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
let juf_Predicate = $rt_classWithoutFields(0),
dcgb_ObjectManager$render$lambda$_9_0 = $rt_classWithoutFields(),
dcgb_ObjectManager$render$lambda$_9_0_test = (var$0, var$1) => {
    return var$1.$isAutomaticShown;
},
juf_ToIntFunction = $rt_classWithoutFields(0),
dcgb_ObjectManager$render$lambda$_9_1 = $rt_classWithoutFields(),
dcgb_ObjectManager$render$lambda$_9_1_applyAsInt = (var$0, var$1) => {
    return var$1.$renderOrder;
},
juf_Consumer = $rt_classWithoutFields(0),
dcgb_ObjectManager$render$lambda$_9_2 = $rt_classWithoutFields();
function juc_CopyOnWriteArrayList() {
    jl_Object.call(this);
    this.$array1 = null;
}
let juc_CopyOnWriteArrayList_iterator = $this => {
    let var$1, var$2, var$3;
    var$1 = new juc_CopyOnWriteArrayList$ListIteratorImpl;
    var$2 = $this.$array1;
    var$3 = var$2.data;
    var$1.$current = 0;
    var$1.$arr = var$2;
    var$1.$size11 = var$3.length;
    return var$1;
},
juc_CopyOnWriteArrayList_size = $this => {
    return $this.$array1.data.length;
};
function cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_017 = null;
    a.$_15 = null;
    a.$_24 = null;
    a.$_32 = null;
    a.$_40 = 0;
    a.$_5 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    var$1 = var$1;
    var$2 = var$1.$_017;
    var$3 = var$1.$_15;
    var$4 = var$1.$_24;
    var$5 = var$1.$_32;
    var$6 = var$1.$_40;
    var$7 = var$1.$_5;
    if (var$3.readyState == 4) {
        var$8 = var$3.status;
        if (!var$8) {
            if (var$4 !== null)
                cgxgbta_AssetDownloadImpl$1_onFailure(var$4, var$5);
        } else if (var$8 != 200) {
            if (var$8 != 404 && var$8 != 403) {
                var$8 = var$6 + 1 | 0;
                var$1 = new cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0;
                var$1.$_00 = var$2;
                var$1.$_1 = var$7;
                var$1.$_2 = var$5;
                var$1.$_3 = var$4;
                var$1.$_4 = var$8;
                setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$1), "onTimer"), 100);
            } else if (var$4 !== null)
                cgxgbta_AssetDownloadImpl$1_onFailure(var$4, var$5);
        } else {
            var$3 = var$3.response;
            if (!(typeof var$3 == 'string' ? 1 : 0))
                var$9 = new Int8Array(var$3);
            else {
                var$1 = $rt_str(var$3);
                jnci_UTF8Charset_$callClinit();
                var$3 = jnci_UTF8Charset_INSTANCE;
                var$1 = jn_CharBuffer_wrap($rt_fastStringToCharArray(var$1.$nativeString));
                a: {
                    try {
                        var$1 = jnc_CharsetEncoder_encode0(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder(var$3), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), var$1);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jnc_CharacterCodingException) {
                            var$2 = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$3 = new jl_AssertionError;
                    jl_Throwable__init_(var$3, $rt_s(428), var$2);
                    $rt_throw(var$3);
                }
                if (jn_ByteBuffer_hasArray(var$1) && !var$1.$position0 && var$1.$limit0 == var$1.$capacityImpl())
                    var$10 = jn_ByteBuffer_array(var$1);
                else {
                    var$10 = $rt_createByteArray(jn_Buffer_remaining(var$1));
                    jn_ByteBuffer_get(var$1, var$10);
                }
                var$9 = cgxgbtdt_TypedArrays_getInt8Array0(var$10);
                var$3 = var$9.buffer;
            }
            if (var$4 !== null) {
                var$11 = new cgxgbta_TeaBlob;
                var$11.$data15 = var$9;
                var$11.$response = var$3;
                cgxgbta_AssetDownloadImpl$1_onSuccess(var$4, var$5, var$11);
            }
        }
        cgxgbta_AssetDownloadImpl_subtractQueue(var$2);
    }
};
function dcgbmw_Background() {
    dcgbmc_GameComponent.call(this);
    this.$color3 = null;
}
let dcgbmw_Background_render = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$color3;
    var$2 = var$1.$r;
    var$3 = var$1.$g;
    var$4 = var$1.$b;
    var$5 = var$1.$a;
    cbg_Gdx_gl.$glClearColor(var$2, var$3, var$4, var$5);
    cbg_Gdx_gl.$glClear(16384);
},
dcgccss_TileColorManager = $rt_classWithoutFields(dcgb_Manager),
dcgccss_TileColorManager_originPixmap = null,
dcgccss_TileColorManager_pixmaps = null,
dcgccss_TileColorManager_currentColor = null,
dcgccss_TileColorManager_$callClinit = () => {
    dcgccss_TileColorManager_$callClinit = $rt_eraseClinit(dcgccss_TileColorManager);
    dcgccss_TileColorManager__clinit_();
},
dcgccss_TileColorManager_getColorPixmap = $color => {
    let var$2, $converted, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    dcgccss_TileColorManager_$callClinit();
    if ($color === null) {
        $color = new jl_NullPointerException;
        jl_Exception__init_($color);
        $rt_throw($color);
    }
    if (ju_HashMap_containsKey(dcgccss_TileColorManager_pixmaps, $color))
        return ju_HashMap_get(dcgccss_TileColorManager_pixmaps, $color);
    var$2 = dcgccss_TileColorManager_originPixmap;
    if (var$2 === null)
        $converted = null;
    else {
        $converted = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth(var$2), cbgg_Pixmap_getHeight(var$2), cbgg_Pixmap_getFormat(var$2));
        var$4 = new cbgg_Color;
        var$5 = new cbgg_Color;
        var$6 = 0;
        while (var$6 < cbgg_Pixmap_getHeight(var$2)) {
            var$7 = 0;
            while (var$7 < cbgg_Pixmap_getWidth(var$2)) {
                cbgg_Color_rgba8888ToColor(var$4, cbgg_Pixmap_getPixel(var$2, var$7, var$6));
                var$8 = var$4.$a;
                if (var$8 > 0.0) {
                    var$9 = (var$4.$r * 0.29899999499320984 + var$4.$g * 0.5870000123977661 + var$4.$b * 0.11400000005960464) * 1.25;
                    var$10 = $color.$r * var$9;
                    var$11 = $color.$g * var$9;
                    var$9 = $color.$b * var$9;
                    var$5.$r = var$10;
                    var$5.$g = var$11;
                    var$5.$b = var$9;
                    var$5.$a = var$8;
                    cbgg_Color_clamp(var$5);
                    cbgg_Pixmap_setColor($converted, var$5);
                    cbgg_Pixmap_drawPixel($converted, var$7, var$6);
                }
                var$7 = var$7 + 1 | 0;
            }
            var$6 = var$6 + 1 | 0;
        }
    }
    return $converted;
},
dcgccss_TileColorManager__clinit_ = () => {
    dcgccss_TileColorManager_originPixmap = cbgg_Pixmap__init_0(dcgbs_Data_get($rt_s(458)));
    dcgccss_TileColorManager_pixmaps = ju_HashMap__init_();
    dcgbc_Colors_$callClinit();
    dcgccss_TileColorManager_currentColor = dcgbc_Colors_LIGHT_CEMENT;
};
function dcgbmc_SizeComponent() {
    let a = this; dcgbmc_GameComponent.call(a);
    a.$size5 = null;
    a.$renderOffset = null;
    a.$padding = null;
}
let dcgbmc_SizeComponent__init_ = ($this, $name, $size) => {
    dcgb_GameObject__init_($this, $name);
    $this.$renderOffset = new cbgm_Vector2;
    $this.$padding = dcgbmf_Padding__init_();
    $this.$size5 = $size;
    $this.$renderOffset = new cbgm_Vector2;
},
dcgbmc_SizeComponent__init_0 = (var_0, var_1) => {
    let var_2 = new dcgbmc_SizeComponent();
    dcgbmc_SizeComponent__init_(var_2, var_0, var_1);
    return var_2;
};
function dcgbmc_DrawableComponent() {
    let a = this; dcgbmc_SizeComponent.call(a);
    a.$pixmap = null;
    a.$texture = null;
}
let dcgbmc_DrawableComponent__init_ = ($this, $name) => {
    dcgbmc_SizeComponent__init_($this, $name, dcgbmf_Size_zero());
},
dcgbmc_DrawableComponent__init_0 = var_0 => {
    let var_1 = new dcgbmc_DrawableComponent();
    dcgbmc_DrawableComponent__init_(var_1, var_0);
    return var_1;
},
dcgbmc_DrawableComponent_getScreenWidth = $this => {
    return cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
},
dcgbmc_DrawableComponent_getScreenHeight = $this => {
    return cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
},
dcgbmc_DrawableComponent_dispose = $this => {
    let $$je;
    a: {
        try {
            dcgb_GameLifeCycle_dispose($this);
            cbgg_Texture_dispose($this.$texture);
            cbgg_Pixmap_dispose($this.$pixmap);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
            } else {
                throw $$e;
            }
        }
    }
},
dcgccso_TileBoard = $rt_classWithoutFields(dcgbmc_DrawableComponent),
dcgccso_TileBoard_PADDING_SIDE = 0,
dcgccso_TileBoard_padding = null,
dcgccso_TileBoard_size = null,
dcgccso_TileBoard_SQUARE_TITLE_COLOR = null,
dcgccso_TileBoard_SQUARE_OUTLINE_COLOR = null,
dcgccso_TileBoard_renderX = 0.0,
dcgccso_TileBoard_renderY = 0.0,
dcgccso_TileBoard_$callClinit = () => {
    dcgccso_TileBoard_$callClinit = $rt_eraseClinit(dcgccso_TileBoard);
    dcgccso_TileBoard__clinit_();
},
dcgccso_TileBoard_init = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$1 = new cbgg_Pixmap;
    dcgccso_TileBoard_$callClinit();
    var$2 = dcgccso_TileBoard_size;
    cbgg_Pixmap__init_1(var$1, var$2.$width0, var$2.$height1, cbgg_Pixmap$Format_RGBA8888);
    $this.$pixmap = var$1;
    cbgg_Pixmap_setColor(var$1, dcgccso_TileBoard_SQUARE_TITLE_COLOR);
    cbgg_Pixmap_fill($this.$pixmap);
    var$2 = $this.$pixmap;
    dcgccss_TileColorManager_$callClinit();
    cbgg_Pixmap_setColor(var$2, dcgccss_TileColorManager_currentColor);
    var$3 = 0;
    while (var$3 <= dcgccso_TileBoard_size.$height1) {
        var$4 = 0;
        while (var$4 < 4) {
            var$1 = $this.$pixmap;
            var$5 = var$3 + var$4 | 0;
            cbgg_Pixmap_drawLine(var$1, 0, var$5, dcgccso_TileBoard_size.$width0, var$5);
            var$4 = var$4 + 1 | 0;
        }
        dcgccso_Tile_$callClinit();
        var$3 = var$3 + dcgccso_Tile_HEIGHT | 0;
    }
    var$3 = 0;
    while (true) {
        var$1 = dcgccso_TileBoard_size;
        var$6 = var$1.$width0;
        if (var$3 > var$6)
            break;
        var$5 = 0;
        while (var$5 < 4) {
            var$1 = $this.$pixmap;
            var$4 = var$3 + var$5 | 0;
            cbgg_Pixmap_drawLine(var$1, var$4, 0, var$4, dcgccso_TileBoard_size.$height1);
            var$5 = var$5 + 1 | 0;
        }
        dcgccso_Tile_$callClinit();
        var$3 = var$3 + dcgccso_Tile_WIDTH | 0;
    }
    var$7 = var$1.$height1;
    var$1 = dcgccso_TileBoard_SQUARE_OUTLINE_COLOR;
    cbgg_Pixmap_setColor($this.$pixmap, var$1);
    var$4 = jl_Math_min(15, jl_Math_min(var$6 / 2 | 0, var$7 / 2 | 0));
    var$8 = 0;
    var$9 = 0 + var$4 | 0;
    var$7 = 0 + var$7 | 0;
    var$10 = var$7 - 1 | 0;
    var$6 = 0 + var$6 | 0;
    var$11 = var$6 - var$4 | 0;
    var$12 = var$7 - var$4 | 0;
    var$7 = var$6 - 1 | 0;
    while (var$8 < 10) {
        var$1 = $this.$pixmap;
        var$6 = var$10 - var$8 | 0;
        cbgg_Pixmap_drawLine(var$1, var$9, var$6, var$11, var$6);
        var$1 = $this.$pixmap;
        var$6 = 0 + var$8 | 0;
        cbgg_Pixmap_drawLine(var$1, var$9, var$6, var$11, var$6);
        cbgg_Pixmap_drawLine($this.$pixmap, var$6, var$9, var$6, var$12);
        var$1 = $this.$pixmap;
        var$6 = var$7 - var$8 | 0;
        cbgg_Pixmap_drawLine(var$1, var$6, var$9, var$6, var$12);
        var$8 = var$8 + 1 | 0;
    }
    var$8 = 0;
    while (var$8 < 10) {
        var$7 = var$4 - var$8 | 0;
        dcgccso_TileBoard_drawQuarterCircle($this, $this.$pixmap, var$9, var$9, var$7, 180, 270);
        dcgccso_TileBoard_drawQuarterCircle($this, $this.$pixmap, var$11, var$9, var$7, 270, 360);
        dcgccso_TileBoard_drawQuarterCircle($this, $this.$pixmap, var$9, var$12, var$7, 90, 180);
        dcgccso_TileBoard_drawQuarterCircle($this, $this.$pixmap, var$11, var$12, var$7, 0, 90);
        var$8 = var$8 + 1 | 0;
    }
    $this.$texture = cbgg_Texture__init_($this.$pixmap);
    dcgccso_TileBoard_renderX = (dcgbmc_DrawableComponent_getScreenWidth($this) - dcgccso_TileBoard_size.$width0 | 0) / 2.0;
    dcgccso_TileBoard_renderY = (dcgbmc_DrawableComponent_getScreenHeight($this) - dcgccso_TileBoard_size.$height1 * 0.6000000238418579) / 2.0;
},
dcgccso_TileBoard_drawQuarterCircle = ($this, $pixmap, $cx, $cy, $radius, $deg, $endDeg) => {
    let var$7, $rad;
    var$7 = $radius;
    while ($deg < $endDeg) {
        $rad = $deg * 3.141592653589793 / 180.0;
        cbgg_Pixmap_drawPixel($pixmap, $cx + (jl_Math_cos($rad) * var$7 | 0) | 0, $cy + (jl_Math_sin($rad) * var$7 | 0) | 0);
        $deg = $deg + 1 | 0;
    }
},
dcgccso_TileBoard_render = $this => {
    let var$1, var$2;
    dcgb_Storage_$callClinit();
    var$1 = dcgb_Storage_batch;
    var$2 = $this.$texture;
    dcgccso_TileBoard_$callClinit();
    cbggg_SpriteBatch_draw(var$1, var$2, dcgccso_TileBoard_renderX, dcgccso_TileBoard_renderY);
},
dcgccso_TileBoard__clinit_ = () => {
    let var$1, var$2;
    var$1 = (dcgbmf_Size_widthScale(0.07500000298023224)).$width0;
    dcgccso_TileBoard_PADDING_SIDE = var$1;
    dcgccso_TileBoard_padding = dcgbmf_Padding__init_0(var$1, 0, var$1, 0);
    var$2 = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) - dcgccso_TileBoard_PADDING_SIDE | 0;
    dcgccso_TileBoard_size = dcgbmf_Size__init_(var$2, var$2);
    dcgccss_TileColorManager_$callClinit();
    dcgccso_TileBoard_SQUARE_TITLE_COLOR = dcgbu_ColorUtil_darkerColor(dcgccss_TileColorManager_currentColor, 1.75);
    dcgccso_TileBoard_SQUARE_OUTLINE_COLOR = dcgbu_ColorUtil_darkerColor(dcgccss_TileColorManager_currentColor, 1.5);
};
function dcgccso_Tile() {
    let a = this; dcgbmc_DrawableComponent.call(a);
    a.$state0 = null;
    a.$color4 = null;
    a.$position2 = null;
    a.$renderPosition1 = null;
}
let dcgccso_Tile_WIDTH = 0,
dcgccso_Tile_HEIGHT = 0,
dcgccso_Tile_$callClinit = () => {
    dcgccso_Tile_$callClinit = $rt_eraseClinit(dcgccso_Tile);
    dcgccso_Tile__clinit_();
},
dcgccso_Tile__init_0 = ($this, $state, $color, $position) => {
    let var$4, var$5, var$6, var$7, var$8;
    dcgccso_Tile_$callClinit();
    dcgccss_ItemManager_$callClinit();
    var$4 = $position.$x5;
    var$5 = $position.$y4;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append0(var$6, 91);
    var$7 = jl_StringBuilder_append0(var$6, var$4);
    jl_AbstractStringBuilder_append0(var$7, 37);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(var$7, var$5), 93);
    var$7 = jl_AbstractStringBuilder_toString(var$6);
    var$8 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$8);
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(459)), var$7);
    dcgbmc_DrawableComponent__init_($this, jl_AbstractStringBuilder_toString(var$8));
    $this.$renderOrder = 5;
    $this.$isAutomaticShown = 0;
    $this.$state0 = $state;
    $this.$color4 = $color;
    $this.$position2 = $position;
},
dcgccso_Tile__init_ = (var_0, var_1, var_2) => {
    let var_3 = new dcgccso_Tile();
    dcgccso_Tile__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
dcgccso_Tile_init = $this => {
    let var$1;
    var$1 = new dcgbmf_Size;
    dcgccso_Tile_$callClinit();
    dcgbmf_Size__init_0(var$1, dcgccso_Tile_WIDTH, dcgccso_Tile_HEIGHT);
    $this.$size5 = var$1;
    $this.$texture = cbgg_Texture__init_(dcgbu_GraphicUtil_adjustTextureSize0(dcgccso_Tile_WIDTH, dcgccso_Tile_HEIGHT, dcgccss_TileColorManager_getColorPixmap($this.$color4)));
    dcgccso_TileBoard_$callClinit();
    $this.$renderPosition1 = cbgm_Vector2__init_(jl_Math_round(dcgccso_TileBoard_renderX + $rt_imul($this.$position2.$x5, dcgccso_Tile_WIDTH)), jl_Math_round(dcgccso_TileBoard_renderY + $rt_imul($this.$position2.$y4, dcgccso_Tile_HEIGHT)));
},
dcgccso_Tile_render = $this => {
    let var$1, var$2, var$3;
    dcgb_SceneManager_$callClinit();
    if (jl_String_equals(dcgb_SceneManager_currentSceneName, $rt_s(59))) {
        dcgb_Storage_$callClinit();
        var$1 = dcgb_Storage_batch;
        var$2 = $this.$texture;
        var$3 = $this.$renderPosition1;
        cbggg_SpriteBatch_draw(var$1, var$2, var$3.$x2, var$3.$y2);
    }
},
dcgccso_Tile__clinit_ = () => {
    let var$1;
    dcgccso_TileBoard_$callClinit();
    var$1 = dcgccso_TileBoard_size;
    dcgccso_Tile_WIDTH = var$1.$width0 / 8 | 0;
    dcgccso_Tile_HEIGHT = var$1.$height1 / 8 | 0;
},
dcgccsf_TileType = $rt_classWithoutFields(jl_Enum),
dcgccsf_TileType_EMPTY = null,
dcgccsf_TileType_DISPLAYED = null,
dcgccsf_TileType_COUNT_DOWN = null,
dcgccsf_TileType_$VALUES = null,
dcgccsf_TileType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new dcgccsf_TileType;
    jl_Enum__init_(var$1, $rt_s(460), 0);
    dcgccsf_TileType_EMPTY = var$1;
    var$1 = new dcgccsf_TileType;
    jl_Enum__init_(var$1, $rt_s(461), 1);
    dcgccsf_TileType_DISPLAYED = var$1;
    var$1 = new dcgccsf_TileType;
    jl_Enum__init_(var$1, $rt_s(462), 2);
    dcgccsf_TileType_COUNT_DOWN = var$1;
    var$2 = $rt_createArray(dcgccsf_TileType, 3);
    var$3 = var$2.data;
    var$3[0] = dcgccsf_TileType_EMPTY;
    var$3[1] = dcgccsf_TileType_DISPLAYED;
    var$3[2] = var$1;
    dcgccsf_TileType_$VALUES = var$2;
},
jl_Record = $rt_classWithoutFields();
function dcgccsf_TilePosition() {
    let a = this; jl_Record.call(a);
    a.$x5 = 0;
    a.$y4 = 0;
}
let dcgccsf_TilePosition__init_0 = ($this, $x, $y) => {
    let var$3, var$4;
    dcgccss_ItemManager_$callClinit();
    if (!($x >= 0 && $x <= 7 && $y >= 0 && $y <= 7 ? 0 : 1)) {
        $this.$x5 = $x;
        $this.$y4 = $y;
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(463)), $x), $rt_s(464)), $y), $rt_s(465));
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
dcgccsf_TilePosition__init_ = (var_0, var_1) => {
    let var_2 = new dcgccsf_TilePosition();
    dcgccsf_TilePosition__init_0(var_2, var_0, var_1);
    return var_2;
},
dcgccsf_TilePosition_x = $this => {
    return $this.$x5;
},
dcgccsf_TilePosition_y = $this => {
    return $this.$y4;
},
dcgccso_ShapeSelectBar = $rt_classWithoutFields(dcgbmc_DrawableComponent),
dcgccso_ShapeSelectBar_shapePosition = null,
dcgccso_ShapeSelectBar_renderX = 0,
dcgccso_ShapeSelectBar_renderY = 0,
dcgccso_ShapeSelectBar_currentItemCount = 0,
dcgccso_ShapeSelectBar_init = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new cbgg_Pixmap;
    var$2 = $this.$size5;
    cbgg_Pixmap__init_1(var$1, var$2.$width0, var$2.$height1, cbgg_Pixmap$Format_RGBA8888);
    $this.$pixmap = var$1;
    dcgccss_TileColorManager_$callClinit();
    cbgg_Pixmap_setColor(var$1, dcgbu_ColorUtil_darkerColor(dcgccss_TileColorManager_currentColor, 1.8740999698638916));
    cbgg_Pixmap_fill($this.$pixmap);
    var$1 = $this;
    dcgccso_ShapeSelectBar_renderY = dcgbmc_DrawableComponent_getScreenHeight(var$1) * 0.125 | 0;
    var$3 = jl_Math_round(dcgbmc_DrawableComponent_getScreenWidth(var$1) * 0.800000011920929) / 3 | 0;
    var$4 = jl_Math_round(dcgbmc_DrawableComponent_getScreenWidth(var$1) * 0.10000000149011612);
    var$5 = cbgg_Pixmap_getHeight($this.$pixmap) / 2 | 0;
    var$6 = 0;
    while (true) {
        var$7 = dcgccso_ShapeSelectBar_shapePosition.data;
        if (var$6 >= var$7.length)
            break;
        var$7[var$6] = cbgm_Vector2__init_((var$4 + (var$3 / 2 | 0) | 0) + $rt_imul(var$6, var$3) | 0, dcgccso_ShapeSelectBar_renderY + var$5 | 0);
        var$6 = var$6 + 1 | 0;
    }
    $this.$texture = cbgg_Texture__init_($this.$pixmap);
},
dcgccso_ShapeSelectBar_render = $this => {
    dcgb_Storage_$callClinit();
    cbggg_SpriteBatch_draw(dcgb_Storage_batch, $this.$texture, dcgccso_ShapeSelectBar_renderX, dcgccso_ShapeSelectBar_renderY);
},
dcgccso_ShapeSelectBar_update = $this => {
    return;
},
dcgccso_ShapeSelectBar__clinit_ = () => {
    dcgccso_ShapeSelectBar_shapePosition = $rt_createArray(cbgm_Vector2, 3);
    dcgccso_ShapeSelectBar_currentItemCount = 3;
},
dcgccso_Controller = $rt_classWithoutFields(dcgbmc_GameComponent),
dcgccso_Controller_addShapeTimes = 0,
dcgccso_Controller_addTileTimes = 0,
dcgccso_Controller_removeTileTimes = 0,
dcgccso_Controller_colorCount = 0,
dcgccso_Controller_isGameOver = 0,
dcgccso_Controller_init = $this => {
    dcgccss_ItemManager_initShapes();
},
dcgccso_Controller_update = $this => {
    let var$1, var$2;
    dcgccss_ItemManager_$callClinit();
    var$1 = 0;
    while (var$1 < 3) {
        var$2 = dcgccss_ItemManager_shapes.data;
        if (var$2[var$1] !== null && var$2[var$1].$texture !== null)
            dcgbmc_DraggableComponent_onDrag(var$2[var$1]);
        var$1 = var$1 + 1 | 0;
    }
},
dcgccso_Controller_render = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    dcgccss_ItemManager_$callClinit();
    var$1 = 0;
    while (true) {
        var$2 = dcgccss_ItemManager_shapes.data;
        if (var$1 >= var$2.length)
            break;
        if (var$2[var$1].$texture !== null) {
            var$3 = var$2[var$1];
            dcgb_Storage_$callClinit();
            var$4 = dcgb_Storage_batch;
            var$5 = !var$3.$dragging ? var$3.$noDraggingTexture : var$3.$texture;
            var$3 = var$3.$renderOffset;
            cbggg_SpriteBatch_draw(var$4, var$5, var$3.$x2, var$3.$y2);
        }
        var$1 = var$1 + 1 | 0;
    }
    var$1 = 0;
    while (var$1 < dcgccss_ItemManager_tiles.data.length) {
        var$6 = 0;
        while (true) {
            var$2 = dcgccss_ItemManager_tiles.data;
            if (var$6 >= var$2[var$1].data.length)
                break;
            if (var$2[var$1].data[var$6] !== null)
                dcgccso_Tile_render(var$2[var$1].data[var$6]);
            var$6 = var$6 + 1 | 0;
        }
        var$1 = var$1 + 1 | 0;
    }
},
dcgccso_Controller_test = $this => {
    return;
},
dcgccso_Controller__clinit_ = () => {
    dcgccso_Controller_addShapeTimes = 0;
    dcgccso_Controller_addTileTimes = 0;
    dcgccso_Controller_removeTileTimes = 0;
    dcgccso_Controller_colorCount = 0;
    dcgccso_Controller_isGameOver = 0;
},
dcgbmc_RenderableWidget = $rt_classWithoutFields(0);
function dcgbmc_SurfaceComponent() {
    let a = this; dcgbmc_DrawableComponent.call(a);
    a.$format1 = null;
    a.$isDone = 0;
    a.$renderPosition = null;
    a.$scale = 0.0;
    a.$currentColor = null;
}
let dcgbmc_SurfaceComponent_checkNotDone = $this => {
    let var$1;
    if (!$this.$isDone)
        return;
    var$1 = new jl_IllegalStateException;
    jl_RuntimeException__init_(var$1, $rt_s(466));
    $rt_throw(var$1);
},
dcgbmc_SurfaceComponent_render = $this => {
    if ($this.$texture !== null)
        dcgbmc_SurfaceComponent_handleRenderPosition($this, $this.$renderPosition, $this.$padding);
},
dcgbmc_SurfaceComponent_handleRenderPosition = ($this, $renderPosition, $padding) => {
    let $rp;
    $rp = (dcgbmc_SurfaceComponent_getRenderPosition($this, $renderPosition, $padding)).data;
    dcgb_Storage_$callClinit();
    cbggg_SpriteBatch_draw0(dcgb_Storage_batch, $this.$texture, $rp[0], $rp[1], $rp[2], $rp[3]);
},
dcgbmc_SurfaceComponent_getRenderPosition = ($this, $renderPosition, $padding) => {
    let $w, $h, $availW, $availH, $rw, $rh, $renX, $renY, var$11, var$12, var$13, var$14, var$15, var$16;
    a: {
        $w = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
        $h = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
        $availW = ($w - $padding.$left | 0) - $padding.$right0 | 0;
        $availH = ($h - $padding.$top0 | 0) - $padding.$bottom | 0;
        $rw = jl_Math_round($this.$size5.$width0 * $this.$scale);
        $rh = jl_Math_round($this.$size5.$height1 * $this.$scale);
        dcgbmc_SurfaceComponent$1_$callClinit();
        switch (dcgbmc_SurfaceComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition.data[$renderPosition.$ordinal0]) {
            case 1:
                $renX = $padding.$left;
                $renY = ($h - $padding.$top0 | 0) - $rh | 0;
                break a;
            case 2:
                $renX = $padding.$left + (($availW - $rw | 0) / 2 | 0) | 0;
                $renY = ($h - $padding.$top0 | 0) - $rh | 0;
                break a;
            case 3:
                $renX = ($w - $padding.$right0 | 0) - $rw | 0;
                $renY = ($h - $padding.$top0 | 0) - $rh | 0;
                break a;
            case 4:
                $renX = $padding.$left;
                $renY = $padding.$bottom + (($availH - $rh | 0) / 2 | 0) | 0;
                break a;
            case 5:
                $renX = $padding.$left + (($availW - $rw | 0) / 2 | 0) | 0;
                $renY = $padding.$bottom + (($availH - $rh | 0) / 2 | 0) | 0;
                break a;
            case 6:
                $renX = ($w - $padding.$right0 | 0) - $rw | 0;
                $renY = $padding.$bottom + (($availH - $rh | 0) / 2 | 0) | 0;
                break a;
            case 7:
                $renX = $padding.$left;
                $renY = $padding.$bottom;
                break a;
            case 8:
                $renX = $padding.$left + (($availW - $rw | 0) / 2 | 0) | 0;
                $renY = $padding.$bottom;
                break a;
            case 9:
                $renX = ($w - $padding.$right0 | 0) - $rw | 0;
                $renY = $padding.$bottom;
                break a;
            default:
        }
        $padding = new jl_IllegalArgumentException;
        $renderPosition = jl_String_valueOf($renderPosition);
        var$11 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$11);
        jl_StringBuilder_append(jl_StringBuilder_append(var$11, $rt_s(467)), $renderPosition);
        jl_RuntimeException__init_($padding, jl_AbstractStringBuilder_toString(var$11));
        $rt_throw($padding);
    }
    var$12 = $rt_createFloatArray(4).data;
    var$13 = $renX;
    $renderPosition = $this.$renderOffset;
    var$12[0] = var$13 + $renderPosition.$x2;
    var$12[1] = $renY + $renderPosition.$y2;
    $renderPosition = $this.$size5;
    var$13 = $renderPosition.$width0;
    var$14 = $this.$scale;
    var$12[2] = var$13 * var$14;
    var$12[3] = $renderPosition.$height1 * var$14;
    $w = var$12.length;
    if (!$w)
        var$15 = $rt_createIntArray(0);
    else {
        var$15 = $rt_createIntArray($w);
        var$16 = var$15.data;
        $h = 0;
        while ($h < $w) {
            var$16[$h] = jl_Math_round(var$12[$h]);
            $h = $h + 1 | 0;
        }
    }
    return var$15;
},
dcgbmc_SurfaceComponent_dispose = $this => {
    let var$1;
    var$1 = $this.$pixmap;
    if (var$1 !== null) {
        cbgg_Pixmap_dispose(var$1);
        $this.$pixmap = null;
    }
    var$1 = $this.$texture;
    if (var$1 !== null) {
        cbgg_Texture_dispose(var$1);
        $this.$texture = null;
    }
};
function dcgbmf_Size() {
    let a = this; jl_Record.call(a);
    a.$width0 = 0;
    a.$height1 = 0;
}
let dcgbmf_Size__init_0 = ($this, $width, $height) => {
    $this.$width0 = $width;
    $this.$height1 = $height;
},
dcgbmf_Size__init_ = (var_0, var_1) => {
    let var_2 = new dcgbmf_Size();
    dcgbmf_Size__init_0(var_2, var_0, var_1);
    return var_2;
},
dcgbmf_Size_widthScale = $scale => {
    let $w;
    $w = jl_Math_round(cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) * $scale);
    return dcgbmf_Size__init_($w, $w);
},
dcgbmf_Size_heightScale = $scale => {
    let $h;
    $h = jl_Math_round(cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics) * $scale);
    return dcgbmf_Size__init_($h, $h);
},
dcgbmf_Size_zero = () => {
    return dcgbmf_Size__init_(0, 0);
},
dcgbmf_Size_height = $this => {
    return $this.$height1;
},
dcgbmf_RenderPosition = $rt_classWithoutFields(jl_Enum),
dcgbmf_RenderPosition_TOP_LEFT = null,
dcgbmf_RenderPosition_TOP_CENTER = null,
dcgbmf_RenderPosition_TOP_RIGHT = null,
dcgbmf_RenderPosition_CENTER_RIGHT = null,
dcgbmf_RenderPosition_CENTER = null,
dcgbmf_RenderPosition_CENTER_LEFT = null,
dcgbmf_RenderPosition_BOTTOM_LEFT = null,
dcgbmf_RenderPosition_BOTTOM_CENTER = null,
dcgbmf_RenderPosition_BOTTOM_RIGHT = null,
dcgbmf_RenderPosition_NONE = null,
dcgbmf_RenderPosition_CUSTOM = null,
dcgbmf_RenderPosition_$VALUES = null,
dcgbmf_RenderPosition_values = () => {
    return dcgbmf_RenderPosition_$VALUES.$clone0();
},
dcgbmf_RenderPosition__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(468), 0);
    dcgbmf_RenderPosition_TOP_LEFT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(469), 1);
    dcgbmf_RenderPosition_TOP_CENTER = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(470), 2);
    dcgbmf_RenderPosition_TOP_RIGHT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(471), 3);
    dcgbmf_RenderPosition_CENTER_RIGHT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(472), 4);
    dcgbmf_RenderPosition_CENTER = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(473), 5);
    dcgbmf_RenderPosition_CENTER_LEFT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(474), 6);
    dcgbmf_RenderPosition_BOTTOM_LEFT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(475), 7);
    dcgbmf_RenderPosition_BOTTOM_CENTER = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(476), 8);
    dcgbmf_RenderPosition_BOTTOM_RIGHT = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(157), 9);
    dcgbmf_RenderPosition_NONE = var$1;
    var$1 = new dcgbmf_RenderPosition;
    jl_Enum__init_(var$1, $rt_s(477), 10);
    dcgbmf_RenderPosition_CUSTOM = var$1;
    var$2 = $rt_createArray(dcgbmf_RenderPosition, 11);
    var$3 = var$2.data;
    var$3[0] = dcgbmf_RenderPosition_TOP_LEFT;
    var$3[1] = dcgbmf_RenderPosition_TOP_CENTER;
    var$3[2] = dcgbmf_RenderPosition_TOP_RIGHT;
    var$3[3] = dcgbmf_RenderPosition_CENTER_RIGHT;
    var$3[4] = dcgbmf_RenderPosition_CENTER;
    var$3[5] = dcgbmf_RenderPosition_CENTER_LEFT;
    var$3[6] = dcgbmf_RenderPosition_BOTTOM_LEFT;
    var$3[7] = dcgbmf_RenderPosition_BOTTOM_CENTER;
    var$3[8] = dcgbmf_RenderPosition_BOTTOM_RIGHT;
    var$3[9] = dcgbmf_RenderPosition_NONE;
    var$3[10] = var$1;
    dcgbmf_RenderPosition_$VALUES = var$2;
};
function dcgbmf_Padding() {
    let a = this; jl_Record.call(a);
    a.$left = 0;
    a.$top0 = 0;
    a.$right0 = 0;
    a.$bottom = 0;
}
let dcgbmf_Padding__init_2 = $this => {
    dcgbmf_Padding__init_1($this, 0, 0, 0, 0);
},
dcgbmf_Padding__init_ = () => {
    let var_0 = new dcgbmf_Padding();
    dcgbmf_Padding__init_2(var_0);
    return var_0;
},
dcgbmf_Padding__init_1 = ($this, $left, $top, $right, $bottom) => {
    $this.$left = $left;
    $this.$top0 = $top;
    $this.$right0 = $right;
    $this.$bottom = $bottom;
},
dcgbmf_Padding__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new dcgbmf_Padding();
    dcgbmf_Padding__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
dcgbmf_Padding_zero = () => {
    return dcgbmf_Padding__init_0(0, 0, 0, 0);
},
dcgbmf_Padding_top = ($this, $top) => {
    return dcgbmf_Padding__init_0($this.$left, $top, $this.$right0, $this.$bottom);
},
dcgbmf_Padding_right = ($this, $right) => {
    return dcgbmf_Padding__init_0($this.$left, $this.$top0, $right, $this.$bottom);
},
dcgbmf_RenderFormat = $rt_classWithoutFields(jl_Enum),
dcgbmf_RenderFormat_RGBA_8 = null,
dcgbmf_RenderFormat_RGBA_4 = null,
dcgbmf_RenderFormat_RGB_8 = null,
dcgbmf_RenderFormat_RGB_565 = null,
dcgbmf_RenderFormat_ALPHA = null,
dcgbmf_RenderFormat_INTENSITY = null,
dcgbmf_RenderFormat_LUMINANCE_ALPHA = null,
dcgbmf_RenderFormat_NONE = null,
dcgbmf_RenderFormat_$VALUES = null,
dcgbmf_RenderFormat__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(478), 0);
    dcgbmf_RenderFormat_RGBA_8 = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(479), 1);
    dcgbmf_RenderFormat_RGBA_4 = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(480), 2);
    dcgbmf_RenderFormat_RGB_8 = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(481), 3);
    dcgbmf_RenderFormat_RGB_565 = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(482), 4);
    dcgbmf_RenderFormat_ALPHA = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(483), 5);
    dcgbmf_RenderFormat_INTENSITY = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(484), 6);
    dcgbmf_RenderFormat_LUMINANCE_ALPHA = var$1;
    var$1 = new dcgbmf_RenderFormat;
    jl_Enum__init_(var$1, $rt_s(157), 7);
    dcgbmf_RenderFormat_NONE = var$1;
    var$2 = $rt_createArray(dcgbmf_RenderFormat, 8);
    var$3 = var$2.data;
    var$3[0] = dcgbmf_RenderFormat_RGBA_8;
    var$3[1] = dcgbmf_RenderFormat_RGBA_4;
    var$3[2] = dcgbmf_RenderFormat_RGB_8;
    var$3[3] = dcgbmf_RenderFormat_RGB_565;
    var$3[4] = dcgbmf_RenderFormat_ALPHA;
    var$3[5] = dcgbmf_RenderFormat_INTENSITY;
    var$3[6] = dcgbmf_RenderFormat_LUMINANCE_ALPHA;
    var$3[7] = var$1;
    dcgbmf_RenderFormat_$VALUES = var$2;
},
dcgbc_Colors = $rt_classWithoutFields(),
dcgbc_Colors_colors = null,
dcgbc_Colors_DAY_BREAK = null,
dcgbc_Colors_PALE_CREAM = null,
dcgbc_Colors_PASSIVE = null,
dcgbc_Colors_SOFT_PEACH = null,
dcgbc_Colors_BABY_PINK = null,
dcgbc_Colors_APRICOT = null,
dcgbc_Colors_LIGHT_APRICOT = null,
dcgbc_Colors_PINK_CHAMPAGNE = null,
dcgbc_Colors_ROSE_QUARTZ = null,
dcgbc_Colors_BLUSH_PINK = null,
dcgbc_Colors_BLUSH_CLAY = null,
dcgbc_Colors_CARNELIAN = null,
dcgbc_Colors_WARM_TAUPE = null,
dcgbc_Colors_TANBARK = null,
dcgbc_Colors_STONE_GRAY = null,
dcgbc_Colors_ALMOND_MILK = null,
dcgbc_Colors_SANDSTONE = null,
dcgbc_Colors_SUNDEW = null,
dcgbc_Colors_STRAW_HARVEST = null,
dcgbc_Colors_BURNT_SIENNA = null,
dcgbc_Colors_CLAY_BROWN = null,
dcgbc_Colors_MOCHA = null,
dcgbc_Colors_COFFEE_BEAN = null,
dcgbc_Colors_DARK_AUBURN = null,
dcgbc_Colors_HEARTTHROB = null,
dcgbc_Colors_MUTED_CORAL = null,
dcgbc_Colors_SKYLINE = null,
dcgbc_Colors_FRENCH_COAST = null,
dcgbc_Colors_POWDER_BLUE = null,
dcgbc_Colors_OCEAN_BREEZE = null;
let dcgbc_Colors_AQUA_TONE = null,
dcgbc_Colors_SEAFOAM = null,
dcgbc_Colors_BREEZE_GREEN = null,
dcgbc_Colors_ICE_MINT = null,
dcgbc_Colors_MIST_BLUE = null,
dcgbc_Colors_DUSTY_BLUE = null,
dcgbc_Colors_INDUSTRIAL_BLUE = null,
dcgbc_Colors_DUST_BLUE = null,
dcgbc_Colors_UPWARD = null,
dcgbc_Colors_DODGER_BLUE = null,
dcgbc_Colors_DEEP_SKY_BLUE = null,
dcgbc_Colors_LIGHT_CEMENT = null,
dcgbc_Colors_SILVER_MIST = null,
dcgbc_Colors_STUDIO_CLAY = null,
dcgbc_Colors_FOGGY_MORNING = null,
dcgbc_Colors_SAGE_GREEN = null,
dcgbc_Colors_MOSS_GRAY = null,
dcgbc_Colors_OLIVE_GREEN = null,
dcgbc_Colors_DEEP_MOSS = null,
dcgbc_Colors_FOREST_GREEN = null,
dcgbc_Colors_AQUAMARINE = null,
dcgbc_Colors_WATERY = null,
dcgbc_Colors_FROSTED_LEAF = null,
dcgbc_Colors_DAWN_MIST = null,
dcgbc_Colors_CELERY = null,
dcgbc_Colors_MIST_LAVENDER = null,
dcgbc_Colors_LILAC_LIGHT = null,
dcgbc_Colors_LITE_LAVENDER = null,
dcgbc_Colors_EUPHORIC_LILAC = null,
dcgbc_Colors_LILAC_HAZE = null,
dcgbc_Colors_DEEP_PLUM = null,
dcgbc_Colors_TWILIGHT_BLUE = null,
dcgbc_Colors_CHARCOAL = null,
dcgbc_Colors_TRANSPARENT = null,
dcgbc_Colors_$callClinit = () => {
    dcgbc_Colors_$callClinit = $rt_eraseClinit(dcgbc_Colors);
    dcgbc_Colors__clinit_();
},
dcgbc_Colors__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createArray(cbgg_Color, 63);
    var$2 = var$1.data;
    var$2[0] = dcgbu_ColorUtil_hex($rt_s(485));
    var$2[1] = dcgbu_ColorUtil_hex($rt_s(486));
    var$2[2] = dcgbu_ColorUtil_hex($rt_s(487));
    var$2[3] = dcgbu_ColorUtil_hex($rt_s(488));
    var$2[4] = dcgbu_ColorUtil_hex($rt_s(489));
    var$2[5] = dcgbu_ColorUtil_hex($rt_s(490));
    var$2[6] = dcgbu_ColorUtil_hex($rt_s(491));
    var$2[7] = dcgbu_ColorUtil_hex($rt_s(492));
    var$2[8] = dcgbu_ColorUtil_hex($rt_s(493));
    var$2[9] = dcgbu_ColorUtil_hex($rt_s(494));
    var$2[10] = dcgbu_ColorUtil_hex($rt_s(495));
    var$2[11] = dcgbu_ColorUtil_hex($rt_s(496));
    var$2[12] = dcgbu_ColorUtil_hex($rt_s(497));
    var$2[13] = dcgbu_ColorUtil_hex($rt_s(498));
    var$2[14] = dcgbu_ColorUtil_hex($rt_s(499));
    var$2[15] = dcgbu_ColorUtil_hex($rt_s(500));
    var$2[16] = dcgbu_ColorUtil_hex($rt_s(501));
    var$2[17] = dcgbu_ColorUtil_hex($rt_s(502));
    var$2[18] = dcgbu_ColorUtil_hex($rt_s(503));
    var$2[19] = dcgbu_ColorUtil_hex($rt_s(504));
    var$2[20] = dcgbu_ColorUtil_hex($rt_s(505));
    var$2[21] = dcgbu_ColorUtil_hex($rt_s(506));
    var$2[22] = dcgbu_ColorUtil_hex($rt_s(507));
    var$2[23] = dcgbu_ColorUtil_hex($rt_s(508));
    var$2[24] = dcgbu_ColorUtil_hex($rt_s(509));
    var$2[25] = dcgbu_ColorUtil_hex($rt_s(510));
    var$2[26] = dcgbu_ColorUtil_hex($rt_s(511));
    var$2[27] = dcgbu_ColorUtil_hex($rt_s(512));
    var$2[28] = dcgbu_ColorUtil_hex($rt_s(513));
    var$2[29] = dcgbu_ColorUtil_hex($rt_s(514));
    var$2[30] = dcgbu_ColorUtil_hex($rt_s(515));
    var$2[31] = dcgbu_ColorUtil_hex($rt_s(516));
    var$2[32] = dcgbu_ColorUtil_hex($rt_s(517));
    var$2[33] = dcgbu_ColorUtil_hex($rt_s(518));
    var$2[34] = dcgbu_ColorUtil_hex($rt_s(519));
    var$2[35] = dcgbu_ColorUtil_hex($rt_s(520));
    var$2[36] = dcgbu_ColorUtil_hex($rt_s(521));
    var$2[37] = dcgbu_ColorUtil_hex($rt_s(522));
    var$2[38] = dcgbu_ColorUtil_hex($rt_s(523));
    var$2[39] = dcgbu_ColorUtil_hex($rt_s(524));
    var$2[40] = dcgbu_ColorUtil_hex($rt_s(525));
    var$2[41] = dcgbu_ColorUtil_hex($rt_s(526));
    var$2[42] = dcgbu_ColorUtil_hex($rt_s(527));
    var$2[43] = dcgbu_ColorUtil_hex($rt_s(528));
    var$2[44] = dcgbu_ColorUtil_hex($rt_s(529));
    var$2[45] = dcgbu_ColorUtil_hex($rt_s(530));
    var$2[46] = dcgbu_ColorUtil_hex($rt_s(531));
    var$2[47] = dcgbu_ColorUtil_hex($rt_s(532));
    var$2[48] = dcgbu_ColorUtil_hex($rt_s(533));
    var$2[49] = dcgbu_ColorUtil_hex($rt_s(534));
    var$2[50] = dcgbu_ColorUtil_hex($rt_s(535));
    var$2[51] = dcgbu_ColorUtil_hex($rt_s(536));
    var$2[52] = dcgbu_ColorUtil_hex($rt_s(537));
    var$2[53] = dcgbu_ColorUtil_hex($rt_s(538));
    var$2[54] = dcgbu_ColorUtil_hex($rt_s(539));
    var$2[55] = dcgbu_ColorUtil_hex($rt_s(540));
    var$2[56] = dcgbu_ColorUtil_hex($rt_s(541));
    var$2[57] = dcgbu_ColorUtil_hex($rt_s(542));
    var$2[58] = dcgbu_ColorUtil_hex($rt_s(543));
    var$2[59] = dcgbu_ColorUtil_hex($rt_s(544));
    var$2[60] = dcgbu_ColorUtil_hex($rt_s(545));
    var$2[61] = dcgbu_ColorUtil_hex($rt_s(546));
    var$2[62] = dcgbu_ColorUtil_hex($rt_s(547));
    dcgbc_Colors_colors = var$1;
    dcgbc_Colors_DAY_BREAK = var$2[0];
    dcgbc_Colors_PALE_CREAM = var$2[1];
    dcgbc_Colors_PASSIVE = var$2[2];
    dcgbc_Colors_SOFT_PEACH = var$2[3];
    dcgbc_Colors_BABY_PINK = var$2[4];
    dcgbc_Colors_APRICOT = var$2[5];
    dcgbc_Colors_LIGHT_APRICOT = var$2[6];
    dcgbc_Colors_PINK_CHAMPAGNE = var$2[7];
    dcgbc_Colors_ROSE_QUARTZ = var$2[8];
    dcgbc_Colors_BLUSH_PINK = var$2[9];
    dcgbc_Colors_BLUSH_CLAY = var$2[10];
    dcgbc_Colors_CARNELIAN = var$2[11];
    dcgbc_Colors_WARM_TAUPE = var$2[12];
    dcgbc_Colors_TANBARK = var$2[13];
    dcgbc_Colors_STONE_GRAY = var$2[14];
    dcgbc_Colors_ALMOND_MILK = var$2[15];
    dcgbc_Colors_SANDSTONE = var$2[16];
    dcgbc_Colors_SUNDEW = var$2[17];
    dcgbc_Colors_STRAW_HARVEST = var$2[18];
    dcgbc_Colors_BURNT_SIENNA = var$2[19];
    dcgbc_Colors_CLAY_BROWN = var$2[20];
    dcgbc_Colors_MOCHA = var$2[21];
    dcgbc_Colors_COFFEE_BEAN = var$2[22];
    dcgbc_Colors_DARK_AUBURN = var$2[23];
    dcgbc_Colors_HEARTTHROB = var$2[24];
    dcgbc_Colors_MUTED_CORAL = var$2[25];
    dcgbc_Colors_SKYLINE = var$2[26];
    dcgbc_Colors_FRENCH_COAST = var$2[27];
    dcgbc_Colors_POWDER_BLUE = var$2[28];
    dcgbc_Colors_OCEAN_BREEZE = var$2[29];
    dcgbc_Colors_AQUA_TONE = var$2[30];
    dcgbc_Colors_SEAFOAM = var$2[31];
    dcgbc_Colors_BREEZE_GREEN = var$2[32];
    dcgbc_Colors_ICE_MINT = var$2[33];
    dcgbc_Colors_MIST_BLUE = var$2[34];
    dcgbc_Colors_DUSTY_BLUE = var$2[35];
    dcgbc_Colors_INDUSTRIAL_BLUE = var$2[36];
    dcgbc_Colors_DUST_BLUE = var$2[37];
    dcgbc_Colors_UPWARD = var$2[38];
    dcgbc_Colors_DODGER_BLUE = var$2[39];
    dcgbc_Colors_DEEP_SKY_BLUE = var$2[40];
    dcgbc_Colors_LIGHT_CEMENT = var$2[41];
    dcgbc_Colors_SILVER_MIST = var$2[42];
    dcgbc_Colors_STUDIO_CLAY = var$2[43];
    dcgbc_Colors_FOGGY_MORNING = var$2[44];
    dcgbc_Colors_SAGE_GREEN = var$2[45];
    dcgbc_Colors_MOSS_GRAY = var$2[46];
    dcgbc_Colors_OLIVE_GREEN = var$2[47];
    dcgbc_Colors_DEEP_MOSS = var$2[48];
    dcgbc_Colors_FOREST_GREEN = var$2[49];
    dcgbc_Colors_AQUAMARINE = var$2[50];
    dcgbc_Colors_WATERY = var$2[51];
    dcgbc_Colors_FROSTED_LEAF = var$2[52];
    dcgbc_Colors_DAWN_MIST = var$2[53];
    dcgbc_Colors_CELERY = var$2[54];
    dcgbc_Colors_MIST_LAVENDER = var$2[55];
    dcgbc_Colors_LILAC_LIGHT = var$2[56];
    dcgbc_Colors_LITE_LAVENDER = var$2[57];
    dcgbc_Colors_EUPHORIC_LILAC = var$2[58];
    dcgbc_Colors_LILAC_HAZE = var$2[59];
    dcgbc_Colors_DEEP_PLUM = var$2[60];
    dcgbc_Colors_TWILIGHT_BLUE = var$2[61];
    dcgbc_Colors_CHARCOAL = var$2[62];
    dcgbc_Colors_TRANSPARENT = cbgg_Color__init_0(1.0, 1.0, 1.0, 0.0);
};
function dcgbmc_InputComponent() {
    let a = this; dcgbmc_SurfaceComponent.call(a);
    a.$draggingEnd = 0;
    a.$gestureAction = null;
    a.$wasDownLastFrame = 0;
    a.$onClickCallBack = null;
}
let dcgbmc_InputComponent_update = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = (dcgbmc_SurfaceComponent_getRenderPosition($this, $this.$renderPosition, $this.$padding)).data;
    var$2 = var$1[0];
    var$3 = var$1[1];
    var$4 = var$1[2];
    var$5 = var$1[3];
    var$6 = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
    var$7 = $rt_createIntArrayFromData([var$2, var$6 - (var$3 + var$5 | 0) | 0, var$2 + var$4 | 0, var$6 - var$3 | 0]);
    var$3 = dcgbu_InputUtil_isTouched() && dcgbu_InputUtil_touchInRange(var$7) ? 1 : 0;
    if (!var$3 && $this.$wasDownLastFrame) {
        if ($this.$onClickCallBack !== null)
            dcgccss_StateUtil_resetGame();
    }
    $this.$wasDownLastFrame = var$3;
},
dcgbmc_ImageComponent = $rt_classWithoutFields(dcgbmc_InputComponent),
dcgbmw_Widget = $rt_classWithoutFields(0),
dcgbmw_ImageButton = $rt_classWithoutFields(dcgbmc_ImageComponent),
dcgbmw_ImageButton_init = $this => {
    return;
},
dcgbmw_ImageButton_render = $this => {
    dcgbmc_SurfaceComponent_render($this);
},
dcgbs_Data = $rt_classWithoutFields(),
dcgbs_Data_get = $path => {
    let var$2, var$3, $$je;
    if ($path === null)
        return null;
    a: {
        try {
            var$2 = cgxgbt_TeaFiles_internal(cbg_Gdx_files, $path);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    var$2 = new dcgbs_FileHandleException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(548)), $path);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw(var$2);
},
dcgbu_GraphicUtil = $rt_classWithoutFields(),
dcgbu_GraphicUtil_adjustTextureSize = ($width, $height, $texture) => {
    let $ori, $resizedPixmap, var$6;
    if ($texture === null)
        return null;
    if (!$texture.$data2.$isPrepared())
        $texture.$data2.$prepare();
    $ori = $texture.$data2.$consumePixmap();
    $resizedPixmap = cbgg_Pixmap__init_($width, $height, cbgg_Pixmap_getFormat($ori));
    $texture = cbgg_Pixmap$Filter_BiLinear;
    $resizedPixmap.$filter0 = $texture;
    var$6 = $resizedPixmap.$nativePixmap;
    $width = $texture !== cbgg_Pixmap$Filter_NearestNeighbour ? 1 : 0;
    $texture = var$6.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_set_scale($texture.$basePtr, $width);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($texture);
    cbgg_Pixmap_drawPixmap($resizedPixmap, $ori, 0, 0, cbgg_Pixmap_getWidth($ori), cbgg_Pixmap_getHeight($ori), 0, 0, cbgg_Pixmap_getWidth($resizedPixmap), cbgg_Pixmap_getHeight($resizedPixmap));
    cbgg_Pixmap_dispose($ori);
    return $resizedPixmap;
},
dcgbu_GraphicUtil_adjustTextureSize0 = ($width, $height, $pixmap) => {
    return dcgbu_GraphicUtil_adjustTextureSize($width, $height, cbgg_Texture__init_($pixmap));
},
dcgbma_Action = $rt_classWithoutFields(0),
dcgbma_VoidAction = $rt_classWithoutFields(0),
dcgccs_StandardScene$_init_$lambda$_0_0 = $rt_classWithoutFields();
function dcgbmc_TextComponent() {
    let a = this; dcgbmc_SizeComponent.call(a);
    a.$padding1 = null;
    a.$text = null;
    a.$renderPosition0 = null;
    a.$font = null;
    a.$offsetX = 0.0;
    a.$offsetY0 = 0.0;
    a.$isDone0 = 0;
}
let dcgbmc_TextComponent_setText = ($this, $value) => {
    dcgbmc_TextComponent_checkNotDone($this);
    $this.$text = $value;
    return $this;
},
dcgbmc_TextComponent_setColor = ($this, $color) => {
    dcgbmc_TextComponent_checkNotDone($this);
    cbgg_Color_set($this.$font.$cache.$color1, $color);
    return $this;
},
dcgbmc_TextComponent_setFontSize = ($this, $newSize) => {
    let var$2, var$3, var$4, var$5, var$6;
    dcgbmc_TextComponent_checkNotDone($this);
    var$2 = $this.$font.$data14;
    var$3 = $newSize;
    var$4 = var$2.$capHeight;
    var$3 = var$3 / var$4;
    $newSize = $rt_compare(var$3, 0.0);
    if (!$newSize) {
        var$2 = new jl_IllegalArgumentException;
        jl_RuntimeException__init_(var$2, $rt_s(549));
        $rt_throw(var$2);
    }
    if (!$newSize) {
        var$2 = new jl_IllegalArgumentException;
        jl_RuntimeException__init_(var$2, $rt_s(550));
        $rt_throw(var$2);
    }
    var$5 = var$3 / var$2.$scaleX;
    var$6 = var$3 / var$2.$scaleY;
    var$2.$lineHeight = var$2.$lineHeight * var$6;
    var$2.$spaceXadvance = var$2.$spaceXadvance * var$5;
    var$2.$xHeight = var$2.$xHeight * var$6;
    var$2.$capHeight = var$4 * var$6;
    var$2.$ascent = var$2.$ascent * var$6;
    var$2.$descent = var$2.$descent * var$6;
    var$2.$down = var$2.$down * var$6;
    var$2.$padLeft = var$2.$padLeft * var$5;
    var$2.$padRight = var$2.$padRight * var$5;
    var$2.$padTop0 = var$2.$padTop0 * var$6;
    var$2.$padBottom = var$2.$padBottom * var$6;
    var$2.$scaleX = var$3;
    var$2.$scaleY = var$3;
    return $this;
},
dcgbmc_TextComponent_checkNotDone = $this => {
    let var$1;
    if (!$this.$isDone0)
        return;
    var$1 = new jl_IllegalStateException;
    jl_RuntimeException__init_(var$1, $rt_s(551));
    $rt_throw(var$1);
},
dcgbmc_TextComponent_dispose = $this => {
    let var$1, var$2, var$3;
    a: {
        var$1 = $this.$font;
        if (var$1.$ownsTexture) {
            var$2 = 0;
            while (true) {
                var$3 = var$1.$regions;
                if (var$2 >= var$3.$size0)
                    break a;
                (cbgu_Array_get(var$3, var$2)).$texture0.$dispose();
                var$2 = var$2 + 1 | 0;
            }
        }
    }
},
dcgbmw_Text = $rt_classWithoutFields(dcgbmc_TextComponent),
dcgbmw_Text__init_ = ($this, $name, $text, $size, $renderPosition, $padding) => {
    let var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $$je;
    dcgbmc_SizeComponent__init_($this, $name, dcgbmf_Size_zero());
    $this.$renderPosition0 = dcgbmf_RenderPosition_CENTER;
    $this.$offsetX = 0.0;
    $this.$offsetY0 = 0.0;
    $this.$isDone0 = 0;
    $this.$text = $text;
    $this.$renderPosition0 = $renderPosition;
    $this.$padding1 = $padding;
    var$6 = new cbgggf_FreeTypeFontGenerator;
    $name = cgxgbt_TeaFiles_internal(cbg_Gdx_files, $rt_s(552));
    var$6.$bitmapped = 0;
    $name = $name;
    var$7 = jl_String_lastIndexOf0($name.$file, 47);
    $renderPosition = var$7 < 0 ? $name.$file : jl_String_substring0($name.$file, var$7 + 1 | 0);
    var$8 = jl_String_lastIndexOf0($renderPosition, 46);
    if (var$8 != (-1))
        $renderPosition = jl_String_substring($renderPosition, 0, var$8);
    var$6.$name2 = $renderPosition;
    var$8 = Module._c_FreeType_initFreeTypeJni();
    if (!var$8) {
        $name = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($name, $rt_s(553));
        $rt_throw($name);
    }
    var$9 = new cbgggf_FreeType$Library;
    cbgggf_FreeType$Pointer__init_(var$9, var$8);
    $renderPosition = new cbgu_LongMap;
    jl_Object__init_($renderPosition);
    $renderPosition.$loadFactor1 = 0.800000011920929;
    var$8 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $renderPosition.$threshold4 = var$8 * 0.800000011920929 | 0;
    var$7 = var$8 - 1 | 0;
    $renderPosition.$mask3 = var$7;
    $renderPosition.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt(var$7));
    $renderPosition.$keyTable0 = $rt_createLongArray(var$8);
    $renderPosition.$valueTable0 = $rt_createArray(jl_Object, var$8);
    var$9.$fontData = $renderPosition;
    var$6.$library = var$9;
    $renderPosition = cgxgbt_TeaFileHandle_read($name);
    a: {
        try {
            try {
                var$8 = Long_lo((cgxgbt_TeaFileHandle_length($name)));
                if (var$8) {
                    $name = cbgu_BufferUtils_newByteBuffer(var$8);
                    cbgu_StreamUtils_copyStream($renderPosition, $name);
                    break a;
                }
                var$10 = cbgu_StreamUtils_copyStreamToByteArray($renderPosition, 16384);
                var$8 = var$10.data.length;
                $name = cbgu_BufferUtils_newByteBuffer(var$8);
                cbgu_BufferUtils_copy0(var$10, 0, $name, var$8);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $name = $$je;
                } else {
                    throw $$e;
                }
            }
            $rt_throw(cbgu_GdxRuntimeException__init_4($name));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $name = $$je;

        }
        cbgu_StreamUtils_closeQuietly($renderPosition);
        $rt_throw($name);
    }
    cbgu_StreamUtils_closeQuietly($renderPosition);
    var$11 = cgxgbtdt_TypedArrays_getInt8Array($name);
    var$10 = $rt_createIntArray(1).data;
    var$10[0] = 0;
    var$8 = var$9.$address;
    var$7 = jn_Buffer_remaining($name);
    $name = var$8;
    $renderPosition = var$7;
    $padding = 0;
    var$8 = var$10.length;
    var$12 = new Int32Array(var$8);
    var$7 = 0;
    while (var$7 < var$8) {
        var$13 = var$10[var$7];
        var$12[var$7] = var$13;
        var$7 = var$7 + 1 | 0;
    }
    var$7 = cbgggf_FreeType$Library_newMemoryFace$js_body$_6($name, var$11, $renderPosition, $padding, var$12);
    if (!var$7) {
        if (var$10[0])
            cbgggf_FreeType_nativeFree(var$10[0]);
        $name = new cbgu_GdxRuntimeException;
        $size = Module._c_FreeType_getLastErrorCode();
        $text = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($text);
        jl_StringBuilder_append0(jl_StringBuilder_append($text, $rt_s(554)), $size);
        jl_RuntimeException__init_($name, jl_AbstractStringBuilder_toString($text));
        $rt_throw($name);
    }
    $name = var$9.$fontData;
    var$14 = Long_fromInt(var$7);
    $renderPosition = jl_Integer_valueOf(var$10[0]);
    if (Long_eq(var$14, Long_ZERO)) {
        $name.$zeroValue0 = $renderPosition;
        if (!$name.$hasZeroValue0) {
            $name.$hasZeroValue0 = 1;
            $name.$size6 = $name.$size6 + 1 | 0;
        }
    } else {
        var$8 = cbgu_LongMap_locateKey($name, var$14);
        if (var$8 >= 0)
            $name.$valueTable0.data[var$8] = $renderPosition;
        else {
            var$8 =  -(var$8 + 1 | 0) | 0;
            var$10 = $name.$keyTable0.data;
            var$10[var$8] = var$14;
            $name.$valueTable0.data[var$8] = $renderPosition;
            var$8 = $name.$size6 + 1 | 0;
            $name.$size6 = var$8;
            if (var$8 >= $name.$threshold4)
                cbgu_LongMap_resize($name, var$10.length << 1);
        }
    }
    $name = new cbgggf_FreeType$Face;
    cbgggf_FreeType$Pointer__init_($name, var$7);
    $name.$library0 = var$9;
    var$6.$face = $name;
    var$7 = cbgggf_FreeType$Face_getFaceFlags($name);
    var$8 = cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES;
    if ((var$7 & var$8) == var$8) {
        var$8 = cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL;
        if ((var$7 & var$8) == var$8 && cbgggf_FreeTypeFontGenerator_loadChar0(var$6, 32) && cbgggf_FreeType$GlyphSlot_getFormat(cbgggf_FreeType$Face_getGlyph(var$6.$face)) == 1651078259)
            var$6.$bitmapped = 1;
    }
    if (!var$6.$bitmapped)
        cbgggf_FreeTypeFontGenerator_setPixelSizes(var$6, 0, 15);
    $name = cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_();
    $name.$size9 = $size;
    $this.$font = cbgggf_FreeTypeFontGenerator_generateFont(var$6, $name);
    cbgggf_FreeTypeFontGenerator_dispose(var$6);
    $name = cbggg_GlyphLayout__init_0($this.$font, $text);
    $this.$size5 = dcgbmf_Size__init_($name.$width2 | 0, $name.$height5 | 0);
    $name = cbggg_TextureRegion_getTexture(cbggg_BitmapFont_getRegion($this.$font));
    $text = cbgg_Texture$TextureFilter_Linear;
    cbgg_GLTexture_setFilter($name, $text, $text);
},
dcgbmw_Text__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new dcgbmw_Text();
    dcgbmw_Text__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
dcgccso_Score = $rt_classWithoutFields(dcgbmw_Text),
dcgccso_Score_score = Long_ZERO,
dcgccso_Score_bufferScore = Long_ZERO,
dcgccso_Score_pointsPerSecond = 0.0,
dcgccso_Score_remainder = 0.0,
dcgccso_Score_getScoreString = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = dcgccso_Score_score;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    var$3 = var$2.$length2;
    var$4 = var$2;
    var$5 = 1;
    if (Long_lt(var$1, Long_ZERO)) {
        var$5 = 0;
        var$1 = Long_neg(var$1);
    }
    a: {
        if (jl_Long_compareUnsigned(var$1, Long_fromInt(10)) < 0) {
            if (var$5)
                jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 2 | 0);
                var$6 = var$4.$buffer.data;
                var$7 = var$3 + 1 | 0;
                var$6[var$3] = 45;
                var$3 = var$7;
            }
            var$4.$buffer.data[var$3] = jl_Character_forDigit(Long_lo(var$1), 10);
        } else {
            var$8 = 1;
            var$9 = Long_fromInt(1);
            var$10 = jl_Long_divideUnsigned(Long_fromInt(-1), Long_fromInt(10));
            b: {
                while (true) {
                    var$11 = Long_mul(var$9, Long_fromInt(10));
                    if (jl_Long_compareUnsigned(var$11, var$1) > 0) {
                        var$11 = var$9;
                        break b;
                    }
                    var$8 = var$8 + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, var$10) > 0)
                        break;
                    var$9 = var$11;
                }
            }
            if (!var$5)
                var$8 = var$8 + 1 | 0;
            jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + var$8 | 0);
            if (var$5)
                var$7 = var$3;
            else {
                var$6 = var$4.$buffer.data;
                var$7 = var$3 + 1 | 0;
                var$6[var$3] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = var$4.$buffer.data;
                var$3 = var$7 + 1 | 0;
                var$6[var$7] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned(var$1, var$11))), 10);
                var$1 = jl_Long_remainderUnsigned(var$1, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, Long_fromInt(10));
                var$7 = var$3;
            }
        }
    }
    return jl_AbstractStringBuilder_toString(var$2);
},
dcgccso_Score_update = $this => {
    let $delta, $addThisFrame, $toAdd, var$4;
    if (Long_le(dcgccso_Score_bufferScore, Long_ZERO)) {
        dcgccso_Score_remainder = 0.0;
        return;
    }
    $delta = cbg_Gdx_graphics.$deltaTime;
    $addThisFrame = dcgccso_Score_pointsPerSecond * $delta + dcgccso_Score_remainder;
    $toAdd = Long_fromNumber(jl_Math_floor($addThisFrame));
    dcgccso_Score_remainder = $addThisFrame - Long_toNumber($toAdd);
    if (Long_gt($toAdd, Long_ZERO)) {
        var$4 = dcgccso_Score_bufferScore;
        if (Long_gt($toAdd, var$4)) {
            dcgccso_Score_remainder = 0.0;
            $toAdd = var$4;
        }
        dcgccso_Score_bufferScore = Long_sub(var$4, $toAdd);
        dcgccso_Score_score = Long_add(dcgccso_Score_score, $toAdd);
        dcgbmc_TextComponent_setText($this, dcgccso_Score_getScoreString());
    }
},
dcgccso_Score_render = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21, var$22, var$23, var$24, var$25, var$26;
    a: {
        var$1 = $this.$renderPosition0;
        var$2 = $this.$padding1;
        var$3 = cbggg_GlyphLayout__init_0($this.$font, $this.$text);
        var$4 = var$3.$width2;
        var$5 = var$3.$height5;
        var$6 = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
        var$7 = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
        dcgbmc_TextComponent$1_$callClinit();
        switch (dcgbmc_TextComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition.data[var$1.$ordinal0]) {
            case 1:
                var$4 = var$2.$left;
                var$5 = var$7 - var$2.$top0;
                break a;
            case 2:
                var$4 = (var$6 - var$4) / 2.0;
                var$5 = var$7 - var$2.$top0;
                break a;
            case 3:
                var$4 = var$6 - var$4 - var$2.$right0;
                var$5 = var$7 - var$2.$top0;
                break a;
            case 4:
                var$4 = var$2.$left;
                var$5 = (var$7 + var$5) / 2.0;
                break a;
            case 5:
                var$4 = (var$6 - var$4) / 2.0;
                var$5 = (var$7 + var$5) / 2.0;
                break a;
            case 6:
                var$4 = var$6 - var$4 - var$2.$right0;
                var$5 = (var$7 + var$5) / 2.0;
                break a;
            case 7:
                var$4 = var$2.$left;
                var$5 = var$2.$bottom + var$5;
                break a;
            case 8:
                var$4 = (var$6 - var$4) / 2.0;
                var$5 = var$2.$bottom + var$5;
                break a;
            case 9:
                var$4 = var$6 - var$4 - var$2.$right0;
                var$5 = var$2.$bottom + var$5;
                break a;
            case 10:
                var$4 = 0.0;
                var$5 = 0.0;
                break a;
            case 11:
                var$4 = 0.0;
                var$5 = 0.0;
                break a;
            default:
        }
        var$2 = new jl_IllegalStateException;
        var$1 = jl_String_valueOf(var$1);
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(467)), var$1);
        jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
        $rt_throw(var$2);
    }
    var$1 = $this.$font;
    dcgb_Storage_$callClinit();
    var$2 = dcgb_Storage_batch;
    var$3 = $this.$text;
    var$4 = var$4 - $this.$offsetX / 2.0;
    var$8 = var$1.$cache;
    var$8.$x7 = 0.0;
    var$8.$y7 = 0.0;
    var$9 = var$8.$pooledLayouts;
    cbgu_Pools_$callClinit();
    if (var$9 === null) {
        var$2 = new jl_IllegalArgumentException;
        jl_RuntimeException__init_(var$2, $rt_s(120));
        $rt_throw(var$2);
    }
    var$10 = null;
    var$11 = 0;
    var$12 = var$9.$size0;
    while (var$11 < var$12) {
        b: {
            var$13 = cbgu_Array_get(var$9, var$11);
            if (var$13 !== null) {
                if (var$10 === null) {
                    var$10 = cbgu_ObjectMap_get(cbgu_Pools_typePools, jl_Object_getClass(var$13));
                    if (var$10 === null)
                        break b;
                }
                cbgu_Pool_free(var$10, var$13);
            }
        }
        var$11 = var$11 + 1 | 0;
    }
    cbgu_Array_clear(var$8.$pooledLayouts);
    cbgu_Array_clear(var$8.$layouts);
    var$12 = 0;
    var$14 = var$8.$idx0.data.length;
    while (var$12 < var$14) {
        var$15 = var$8.$pageGlyphIndices;
        if (var$15 !== null)
            cbgu_IntArray_clear(var$15.data[var$12]);
        var$8.$idx0.data[var$12] = 0;
        var$12 = var$12 + 1 | 0;
    }
    var$8 = var$1.$cache;
    var$16 = var$3.$nativeString.length;
    var$10 = null;
    var$9 = cbgu_Pool_obtain(cbgu_Pools_get($rt_cls(cbggg_GlyphLayout)));
    cbgu_Array_add(var$8.$pooledLayouts, var$9);
    cbggg_GlyphLayout_setText(var$9, var$8.$font0, var$3, 0, var$16, var$8.$color1, 0.0, 8, 0, var$10);
    var$3 = var$8.$font0;
    var$17 = var$5 + var$3.$data14.$ascent;
    var$18 = var$9.$runs.$size0;
    if (var$18) {
        var$11 = var$8.$pageVertices.data.length;
        var$12 = var$3.$regions.$size0;
        if (var$11 < var$12)
            cbggg_BitmapFontCache_setPageCount(var$8, var$12);
        cbgu_Array_add(var$8.$layouts, var$9);
        cbggg_BitmapFontCache_requireGlyphs(var$8, var$9);
        var$19 = var$9.$colors;
        var$20 = 0;
        var$21 = 0;
        var$16 = 0;
        var$22 = 0.0;
        var$23 = 0;
        while (var$23 < var$18) {
            var$3 = cbgu_Array_get(var$9.$runs, var$23);
            var$10 = var$3.$glyphs;
            var$15 = var$10.$items;
            var$24 = var$3.$xAdvances.$items0;
            var$5 = var$4 + var$3.$x3;
            var$6 = var$17 + var$3.$y5;
            var$11 = 0;
            var$12 = var$10.$size0;
            while (var$11 < var$12) {
                var$14 = var$16 + 1 | 0;
                if (var$16 == var$21) {
                    var$16 = var$20 + 1 | 0;
                    var$22 = cbgu_NumberUtils_intToFloatColor(cbgu_IntArray_get(var$19, var$16));
                    var$20 = var$16 + 1 | 0;
                    var$21 = var$20 >= var$19.$size1 ? (-1) : cbgu_IntArray_get(var$19, var$20);
                }
                var$25 = var$24.data;
                var$26 = var$15.data;
                var$5 = var$5 + var$25[var$11];
                cbggg_BitmapFontCache_addGlyph(var$8, var$26[var$11], var$5, var$6, var$22);
                var$11 = var$11 + 1 | 0;
                var$16 = var$14;
            }
            var$23 = var$23 + 1 | 0;
        }
        var$8.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
    }
    cbggg_BitmapFontCache_draw(var$1.$cache, var$2);
},
dcgccso_Score_increase = ($points, $pps) => {
    dcgccso_Score_pointsPerSecond = $pps;
    dcgccso_Score_bufferScore = Long_add(dcgccso_Score_bufferScore, Long_fromInt($points));
},
dcgccso_Score__clinit_ = () => {
    dcgccso_Score_score = Long_ZERO;
    dcgccso_Score_bufferScore = Long_ZERO;
    dcgccso_Score_pointsPerSecond = 20.0;
    dcgccso_Score_remainder = 0.0;
};
function dcgbmc_ThreadComponent() {
    let a = this; dcgbmc_GameComponent.call(a);
    a.$thread = null;
    a.$threadName = null;
}
let dcgbmc_ThreadComponent__init_0 = ($this, $name, $threadName, $thread_0) => {
    dcgb_GameObject__init_($this, $name);
    $this.$thread = $thread_0;
    $this.$threadName = $threadName;
},
dcgbmc_ThreadComponent__init_ = (var_0, var_1, var_2) => {
    let var_3 = new dcgbmc_ThreadComponent();
    dcgbmc_ThreadComponent__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
dcgb_TransferSceneException = $rt_classWithoutFields(jl_RuntimeException),
cbggg_Batch = $rt_classWithoutFields(0);
function cbggg_SpriteBatch() {
    let a = this; jl_Object.call(a);
    a.$currentDataType = null;
    a.$mesh = null;
    a.$vertices0 = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader = 0;
    a.$color5 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
let cbggg_SpriteBatch_defaultVertexDataType = null,
cbggg_SpriteBatch_overrideVertexType = null,
cbggg_SpriteBatch_$callClinit = () => {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
},
cbggg_SpriteBatch__init_ = ($this, $size, $defaultShader) => {
    let $vertexDataType, var$4, var$5, $i, var$7, $indices, $j, var$10, var$11, var$12, var$13, var$14;
    cbggg_SpriteBatch_$callClinit();
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $this.$color5 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191) {
        $defaultShader = new jl_IllegalArgumentException;
        $vertexDataType = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($vertexDataType);
        jl_AbstractStringBuilder_append($vertexDataType, $rt_s(555));
        jl_RuntimeException__init_($defaultShader, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($vertexDataType, $size)));
        $rt_throw($defaultShader);
    }
    $vertexDataType = cbg_Gdx_gl30 === null ? cbggg_SpriteBatch_defaultVertexDataType : cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    var$4 = cbggg_SpriteBatch_overrideVertexType;
    if (var$4 === null)
        var$4 = $vertexDataType;
    $this.$currentDataType = var$4;
    var$5 = new cbgg_Mesh;
    $i = $size * 4 | 0;
    var$7 = $size * 6 | 0;
    $indices = $rt_createArray(cbgg_VertexAttribute, 3).data;
    $indices[0] = cbgg_VertexAttribute__init_(1, 2, $rt_s(556));
    $indices[1] = cbgg_VertexAttribute__init_(4, 4, $rt_s(557));
    $indices[2] = cbgg_VertexAttribute__init_(16, 2, $rt_s(558));
    cbgg_Mesh_$callClinit();
    $vertexDataType = new cbgg_VertexAttributes;
    $vertexDataType.$mask6 = Long_fromInt(-1);
    $vertexDataType.$boneWeightUnits = (-1);
    $vertexDataType.$textureCoordinates = (-1);
    $j = $indices.length;
    if (!$j) {
        $defaultShader = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($defaultShader, $rt_s(559));
        $rt_throw($defaultShader);
    }
    var$10 = $rt_createArray(cbgg_VertexAttribute, $j);
    var$11 = var$10.data;
    var$12 = 0;
    while (var$12 < $j) {
        var$11[var$12] = $indices[var$12];
        var$12 = var$12 + 1 | 0;
    }
    $vertexDataType.$attributes3 = var$10;
    $j = 0;
    var$13 = 0;
    while (var$13 < var$11.length) {
        a: {
            b: {
                var$14 = var$11[var$13];
                var$14.$offset = $j;
                switch (var$14.$type3) {
                    case 5120:
                    case 5121:
                        break;
                    case 5122:
                    case 5123:
                        var$12 = 2 * var$14.$numComponents | 0;
                        break a;
                    case 5124:
                    case 5125:
                    case 5127:
                    case 5128:
                    case 5129:
                    case 5130:
                    case 5131:
                        break b;
                    case 5126:
                    case 5132:
                        var$12 = 4 * var$14.$numComponents | 0;
                        break a;
                    default:
                        break b;
                }
                var$12 = var$14.$numComponents;
                break a;
            }
            var$12 = 0;
        }
        $j = $j + var$12 | 0;
        var$13 = var$13 + 1 | 0;
    }
    c: {
        d: {
            $vertexDataType.$vertexSize = $j;
            var$5.$autoBind = 1;
            var$5.$isInstanced = 0;
            var$5.$tmpV = cbgm_Vector3__init_();
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[var$4.$ordinal0]) {
                case 1:
                    break;
                case 2:
                    var$5.$vertices = cbggg_VertexBufferObjectSubData__init_0(0, $i, $vertexDataType);
                    var$5.$indices = cbggg_IndexBufferObjectSubData__init_(0, var$7);
                    var$5.$isVertexArray = 0;
                    break c;
                case 3:
                    var$5.$vertices = cbggg_VertexBufferObjectWithVAO__init_0(0, $i, $vertexDataType);
                    var$5.$indices = cbggg_IndexBufferObjectSubData__init_(0, var$7);
                    var$5.$isVertexArray = 0;
                    break c;
                case 4:
                    break d;
                default:
                    break d;
            }
            var$5.$vertices = cbggg_VertexBufferObject__init_0(0, $i, $vertexDataType);
            var$5.$indices = cbggg_IndexBufferObject__init_1(0, var$7);
            var$5.$isVertexArray = 0;
            break c;
        }
        var$14 = new cbggg_VertexArray;
        cbggg_VertexBufferObject__init_(var$14, 0, $i, $vertexDataType);
        var$5.$vertices = var$14;
        $vertexDataType = new cbggg_IndexArray;
        cbggg_IndexBufferObject__init_($vertexDataType, var$7);
        var$5.$indices = $vertexDataType;
        var$5.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, var$5);
    $this.$mesh = var$5;
    cbgm_Matrix4_setToOrtho2D($this.$projectionMatrix, 0.0, 0.0, cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
    $this.$vertices0 = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$7);
    var$11 = $indices.data;
    $j = 0;
    $i = 0;
    while ($i < var$7) {
        var$11[$i] = $j;
        var$11[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        $size = $i + 2 | 0;
        var$13 = ($j + 2 | 0) << 16 >> 16;
        var$11[$size] = var$13;
        var$11[$i + 3 | 0] = var$13;
        var$11[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$11[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh.$indices.$setIndices($indices, 0, var$11.length);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        $this.$shader = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader = 1;
    }
    if (var$4 !== cbgg_Mesh$VertexDataType_VertexArray) {
        (cbgg_Mesh_getIndexData($this.$mesh)).$bind();
        (cbgg_Mesh_getIndexData($this.$mesh)).$unbind();
    }
},
cbggg_SpriteBatch__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_SpriteBatch_createDefaultShader = () => {
    let $vertexShader, $fragmentShader, $shader, var$4, var$5, var$6, var$7;
    cbggg_SpriteBatch_$callClinit();
    $vertexShader = $rt_s(560);
    $fragmentShader = $rt_s(561);
    $shader = new cbggg_ShaderProgram;
    cbggg_ShaderProgram_$callClinit();
    $shader.$log0 = $rt_s(8);
    $shader.$uniforms = cbgu_ObjectIntMap__init_();
    $shader.$uniformTypes = cbgu_ObjectIntMap__init_();
    $shader.$uniformSizes = cbgu_ObjectIntMap__init_();
    $shader.$attributes2 = cbgu_ObjectIntMap__init_();
    $shader.$attributeTypes = cbgu_ObjectIntMap__init_();
    $shader.$attributeSizes = cbgu_ObjectIntMap__init_();
    $shader.$refCount = 0;
    $shader.$params = cbgu_BufferUtils_newIntBuffer(1);
    $shader.$type2 = cbgu_BufferUtils_newIntBuffer(1);
    var$4 = cbggg_ShaderProgram_prependVertexCode;
    if (var$4 !== null && var$4.$nativeString.length > 0) {
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, cbggg_ShaderProgram_prependVertexCode);
        jl_AbstractStringBuilder_append(var$4, $vertexShader);
        $vertexShader = jl_AbstractStringBuilder_toString(var$4);
    }
    var$4 = cbggg_ShaderProgram_prependFragmentCode;
    if (var$4 !== null && var$4.$nativeString.length > 0) {
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, cbggg_ShaderProgram_prependFragmentCode);
        jl_AbstractStringBuilder_append(var$4, $fragmentShader);
        $fragmentShader = jl_AbstractStringBuilder_toString(var$4);
    }
    $shader.$vertexShaderSource = $vertexShader;
    $shader.$fragmentShaderSource = $fragmentShader;
    $shader.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($shader, $vertexShader, $fragmentShader);
    if ($shader.$isCompiled) {
        jn_Buffer_clear($shader.$params);
        cbg_Gdx_gl20.$glGetProgramiv($shader.$program, 35721, $shader.$params);
        var$5 = jn_IntBufferImpl_get($shader.$params, 0);
        $shader.$attributeNames = $rt_createArray(jl_String, var$5);
        var$6 = 0;
        while (var$6 < var$5) {
            jn_Buffer_clear($shader.$params);
            jn_IntBufferImpl_put($shader.$params, 0, 1);
            jn_Buffer_clear($shader.$type2);
            $vertexShader = cbg_Gdx_gl20.$glGetActiveAttrib($shader.$program, var$6, $shader.$params, $shader.$type2);
            var$7 = cbg_Gdx_gl20.$glGetAttribLocation($shader.$program, $vertexShader);
            cbgu_ObjectIntMap_put($shader.$attributes2, $vertexShader, var$7);
            cbgu_ObjectIntMap_put($shader.$attributeTypes, $vertexShader, jn_IntBufferImpl_get($shader.$type2, 0));
            cbgu_ObjectIntMap_put($shader.$attributeSizes, $vertexShader, jn_IntBufferImpl_get($shader.$params, 0));
            $shader.$attributeNames.data[var$6] = $vertexShader;
            var$6 = var$6 + 1 | 0;
        }
        jn_Buffer_clear($shader.$params);
        cbg_Gdx_gl20.$glGetProgramiv($shader.$program, 35718, $shader.$params);
        var$5 = jn_IntBufferImpl_get($shader.$params, 0);
        $shader.$uniformNames = $rt_createArray(jl_String, var$5);
        var$6 = 0;
        while (var$6 < var$5) {
            jn_Buffer_clear($shader.$params);
            jn_IntBufferImpl_put($shader.$params, 0, 1);
            jn_Buffer_clear($shader.$type2);
            $vertexShader = cbg_Gdx_gl20.$glGetActiveUniform($shader.$program, var$6, $shader.$params, $shader.$type2);
            var$7 = cbg_Gdx_gl20.$glGetUniformLocation($shader.$program, $vertexShader);
            cbgu_ObjectIntMap_put($shader.$uniforms, $vertexShader, var$7);
            cbgu_ObjectIntMap_put($shader.$uniformTypes, $vertexShader, jn_IntBufferImpl_get($shader.$type2, 0));
            cbgu_ObjectIntMap_put($shader.$uniformSizes, $vertexShader, jn_IntBufferImpl_get($shader.$params, 0));
            $shader.$uniformNames.data[var$6] = $vertexShader;
            var$6 = var$6 + 1 | 0;
        }
        $vertexShader = cbg_Gdx_app;
        $fragmentShader = cbgu_ObjectMap_get(cbggg_ShaderProgram_shaders, $vertexShader);
        if ($fragmentShader === null)
            $fragmentShader = cbgu_Array__init_();
        cbgu_Array_add($fragmentShader, $shader);
        cbgu_ObjectMap_put(cbggg_ShaderProgram_shaders, $vertexShader, $fragmentShader);
    }
    if ($shader.$isCompiled)
        return $shader;
    $vertexShader = new jl_IllegalArgumentException;
    $fragmentShader = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($fragmentShader);
    jl_AbstractStringBuilder_append($fragmentShader, $rt_s(562));
    jl_AbstractStringBuilder_append($fragmentShader, cbggg_ShaderProgram_getLog($shader));
    jl_RuntimeException__init_($vertexShader, jl_AbstractStringBuilder_toString($fragmentShader));
    $rt_throw($vertexShader);
},
cbggg_SpriteBatch_end = $this => {
    let var$1, $gl;
    if (!$this.$drawing) {
        var$1 = new jl_IllegalStateException;
        jl_RuntimeException__init_(var$1, $rt_s(563));
        $rt_throw(var$1);
    }
    if ($this.$idx > 0)
        cbggg_SpriteBatch_flush($this);
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$blendingDisabled ? 0 : 1)
        $gl.$glDisable(3042);
},
cbggg_SpriteBatch_draw = ($this, $texture, $x, $y) => {
    cbggg_SpriteBatch_draw0($this, $texture, $x, $y, cbgg_Texture_getWidth($texture), cbgg_Texture_getHeight($texture));
},
cbggg_SpriteBatch_draw0 = ($this, $texture, $x, $y, $width, $height) => {
    let $vertices, var$7, $fx2, $fy2, $color, $idx;
    if (!$this.$drawing) {
        $texture = new jl_IllegalStateException;
        jl_RuntimeException__init_($texture, $rt_s(564));
        $rt_throw($texture);
    }
    $vertices = $this.$vertices0;
    if ($texture !== $this.$lastTexture)
        cbggg_SpriteBatch_switchTexture($this, $texture);
    else {
        var$7 = $vertices.data;
        if ($this.$idx == var$7.length)
            cbggg_SpriteBatch_flush($this);
    }
    $vertices = $vertices.data;
    $fx2 = $x + $width;
    $fy2 = $y + $height;
    $color = $this.$colorPacked;
    $idx = $this.$idx;
    $vertices[$idx] = $x;
    $vertices[$idx + 1 | 0] = $y;
    $vertices[$idx + 2 | 0] = $color;
    $vertices[$idx + 3 | 0] = 0.0;
    $vertices[$idx + 4 | 0] = 1.0;
    $vertices[$idx + 5 | 0] = $x;
    $vertices[$idx + 6 | 0] = $fy2;
    $vertices[$idx + 7 | 0] = $color;
    $vertices[$idx + 8 | 0] = 0.0;
    $vertices[$idx + 9 | 0] = 0.0;
    $vertices[$idx + 10 | 0] = $fx2;
    $vertices[$idx + 11 | 0] = $fy2;
    $vertices[$idx + 12 | 0] = $color;
    $vertices[$idx + 13 | 0] = 1.0;
    $vertices[$idx + 14 | 0] = 0.0;
    $vertices[$idx + 15 | 0] = $fx2;
    $vertices[$idx + 16 | 0] = $y;
    $vertices[$idx + 17 | 0] = $color;
    $vertices[$idx + 18 | 0] = 1.0;
    $vertices[$idx + 19 | 0] = 1.0;
    $this.$idx = $idx + 20 | 0;
},
cbggg_SpriteBatch_flush = $this => {
    let $count, $spritesInBatch, $mesh, var$4, var$5, $indicesBuffer, var$7, var$8, var$9, var$10;
    $count = $this.$idx;
    if (!$count)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $count / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    cbgg_GLTexture_bind($this.$lastTexture);
    $mesh = $this.$mesh;
    var$4 = $this.$vertices0;
    var$5 = $this.$idx;
    $mesh.$vertices.$setVertices(var$4, 0, var$5);
    if ($this.$currentDataType === cbgg_Mesh$VertexDataType_VertexArray) {
        $indicesBuffer = $mesh.$indices.$getBuffer(1);
        jn_Buffer_position($indicesBuffer, 0);
        jn_Buffer_limit($indicesBuffer, $count);
    }
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        $spritesInBatch = $this.$blendSrcFunc;
        if ($spritesInBatch != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($spritesInBatch, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    var$7 = $this.$customShader;
    if (var$7 === null)
        var$7 = $this.$shader;
    var$8 = $mesh.$autoBind;
    if ($count) {
        if (var$8) {
            $indicesBuffer = null;
            var$9 = null;
            $mesh.$vertices.$bind0(var$7, $indicesBuffer);
            $indicesBuffer = $mesh.$instances;
            if ($indicesBuffer !== null && $indicesBuffer.$getNumInstances() > 0)
                $mesh.$instances.$bind0(var$7, var$9);
            if ($mesh.$indices.$getNumIndices() > 0)
                $mesh.$indices.$bind();
        }
        if ($mesh.$isVertexArray) {
            if ($mesh.$indices.$getNumIndices() <= 0)
                cbg_Gdx_gl20.$glDrawArrays(4, 0, $count);
            else {
                $indicesBuffer = $mesh.$indices.$getBuffer(0);
                var$5 = $indicesBuffer.$position0;
                var$10 = $indicesBuffer;
                jn_Buffer_position(var$10, 0);
                cbg_Gdx_gl20.$glDrawElements(4, $count, 5123, $indicesBuffer);
                jn_Buffer_position(var$10, var$5);
            }
        } else {
            $spritesInBatch = 0;
            if ($mesh.$isInstanced)
                $spritesInBatch = $mesh.$instances.$getNumInstances();
            if ($mesh.$indices.$getNumIndices() <= 0) {
                if ($mesh.$isInstanced && $spritesInBatch > 0)
                    cbg_Gdx_gl30.$glDrawArraysInstanced(4, 0, $count, $spritesInBatch);
                else
                    cbg_Gdx_gl20.$glDrawArrays(4, 0, $count);
            } else {
                if (($count + 0 | 0) > $mesh.$indices.$getNumMaxIndices()) {
                    var$9 = new cbgu_GdxRuntimeException;
                    $indicesBuffer = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_($indicesBuffer);
                    jl_AbstractStringBuilder_append($indicesBuffer, $rt_s(565));
                    $indicesBuffer = jl_StringBuilder_append0($indicesBuffer, $count);
                    jl_AbstractStringBuilder_append($indicesBuffer, $rt_s(566));
                    var$10 = jl_StringBuilder_append0($indicesBuffer, 0);
                    jl_AbstractStringBuilder_append(var$10, $rt_s(567));
                    $mesh = jl_StringBuilder_append0(var$10, $mesh.$indices.$getNumMaxIndices());
                    jl_AbstractStringBuilder_append($mesh, $rt_s(568));
                    jl_RuntimeException__init_(var$9, jl_AbstractStringBuilder_toString($mesh));
                    $rt_throw(var$9);
                }
                if ($mesh.$isInstanced && $spritesInBatch > 0)
                    cbg_Gdx_gl30.$glDrawElementsInstanced(4, $count, 5123, 0, $spritesInBatch);
                else
                    cbg_Gdx_gl20.$glDrawElements0(4, $count, 5123, 0);
            }
        }
        if (var$8) {
            $indicesBuffer = null;
            var$9 = null;
            $mesh.$vertices.$unbind0(var$7, $indicesBuffer);
            $indicesBuffer = $mesh.$instances;
            if ($indicesBuffer !== null && $indicesBuffer.$getNumInstances() > 0)
                $mesh.$instances.$unbind0(var$7, var$9);
            if ($mesh.$indices.$getNumIndices() > 0)
                $mesh.$indices.$unbind();
        }
    }
    $this.$idx = 0;
},
cbggg_SpriteBatch_setupMatrices = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    cbgm_Matrix4_mul0(cbgm_Matrix4_set($this.$combinedMatrix, $this.$projectionMatrix), $this.$transformMatrix);
    var$1 = $this.$customShader;
    if (var$1 !== null) {
        var$1.$setUniformMatrix($rt_s(569), $this.$combinedMatrix);
        $this.$customShader.$setUniformi($rt_s(570), 0);
    } else {
        var$1 = $this.$shader;
        var$2 = $this.$combinedMatrix;
        var$3 = cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(569));
        var$4 = cbg_Gdx_gl20;
        cbggg_ShaderProgram_checkManaged(var$1);
        var$5 = var$2.$val;
        cgxgbt_TeaGL20_glUniformMatrix4fv(var$4, var$3, 1, 0, var$5, 0);
        var$1 = $this.$shader;
        var$2 = cbg_Gdx_gl20;
        cbggg_ShaderProgram_checkManaged(var$1);
        var$2.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(570)), 0);
    }
},
cbggg_SpriteBatch_switchTexture = ($this, $texture) => {
    cbggg_SpriteBatch_flush($this);
    $this.$lastTexture = $texture;
    $this.$invTexWidth = 1.0 / cbgg_Texture_getWidth($texture);
    $this.$invTexHeight = 1.0 / cbgg_Texture_getHeight($texture);
},
cbggg_SpriteBatch__clinit_ = () => {
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObject;
    cbggg_SpriteBatch_overrideVertexType = null;
};
function cbgg_OrthographicCamera() {
    let a = this; cbgg_Camera.call(a);
    a.$zoom = 0.0;
    a.$tmp0 = null;
}
let cbgg_OrthographicCamera_update = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$projection;
    var$2 = $this.$zoom;
    var$3 = $this.$viewportWidth;
    var$4 = var$2 *  -var$3 / 2.0;
    var$3 = var$2 * var$3 / 2.0;
    var$5 = $this.$viewportHeight;
    cbgm_Matrix4_setToOrtho(var$1, var$4, var$3, var$2 *  -(var$5 / 2.0), var$2 * var$5 / 2.0, $this.$near, $this.$far);
    var$1 = $this.$view;
    var$6 = $this.$direction;
    var$7 = $this.$up;
    cbgm_Vector3_nor(cbgm_Vector3_set0(cbgm_Matrix4_l_vez, var$6));
    cbgm_Vector3_nor(cbgm_Vector3_set0(cbgm_Matrix4_l_vex, var$6));
    cbgm_Vector3_nor(cbgm_Vector3_crs(cbgm_Matrix4_l_vex, var$7));
    cbgm_Vector3_nor(cbgm_Vector3_crs(cbgm_Vector3_set0(cbgm_Matrix4_l_vey, cbgm_Matrix4_l_vex), cbgm_Matrix4_l_vez));
    cbgm_Matrix4_idt(var$1);
    var$8 = var$1.$val.data;
    var$1 = cbgm_Matrix4_l_vex;
    var$8[0] = var$1.$x0;
    var$8[4] = var$1.$y0;
    var$8[8] = var$1.$z;
    var$1 = cbgm_Matrix4_l_vey;
    var$8[1] = var$1.$x0;
    var$8[5] = var$1.$y0;
    var$8[9] = var$1.$z;
    var$1 = cbgm_Matrix4_l_vez;
    var$8[2] =  -var$1.$x0;
    var$8[6] =  -var$1.$y0;
    var$8[10] =  -var$1.$z;
    var$1 = $this.$view;
    var$6 = $this.$position1;
    var$9 =  -var$6.$x0;
    var$3 =  -var$6.$y0;
    var$4 =  -var$6.$z;
    var$8 = cbgm_Matrix4_tmp;
    var$10 = var$8.data;
    var$10[0] = 1.0;
    var$10[4] = 0.0;
    var$10[8] = 0.0;
    var$10[12] = var$9;
    var$10[1] = 0.0;
    var$10[5] = 1.0;
    var$10[9] = 0.0;
    var$10[13] = var$3;
    var$10[2] = 0.0;
    var$10[6] = 0.0;
    var$10[10] = 1.0;
    var$10[14] = var$4;
    var$10[3] = 0.0;
    var$10[7] = 0.0;
    var$10[11] = 0.0;
    var$10[15] = 1.0;
    cbgm_Matrix4_mul(var$1.$val, var$8);
    cbgm_Matrix4_set($this.$combined, $this.$projection);
    cbgm_Matrix4_mul($this.$combined.$val, $this.$view.$val);
    cbgm_Matrix4_set($this.$invProjectionView, $this.$combined);
    cbgm_Matrix4_matrix4_inv($this.$invProjectionView.$val);
    cbgm_Frustum_update($this.$frustum, $this.$invProjectionView);
};
function ju_Comparator$comparingInt$lambda$_14_0() {
    jl_Object.call(this);
    this.$_011 = null;
}
let ju_Comparator$comparingInt$lambda$_14_0_compare = (var$0, var$1, var$2) => {
    let var$3;
    var$3 = var$0.$_011;
    return $rt_compare(dcgb_ObjectManager$render$lambda$_9_1_applyAsInt(var$3, var$1), dcgb_ObjectManager$render$lambda$_9_1_applyAsInt(var$3, var$2));
};
function cbggg_ModelBatch() {
    let a = this; jl_Object.call(a);
    a.$camera = null;
    a.$renderablesPool = null;
    a.$renderables = null;
    a.$context0 = null;
    a.$ownContext = 0;
    a.$shaderProvider = null;
    a.$sorter = null;
}
let cbggg_ModelBatch_end = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    var$1 = $this.$sorter;
    var$2 = $this.$camera;
    var$3 = $this.$renderables;
    var$1 = var$1;
    var$1.$camera0 = var$2;
    if (cbgu_Sort_instance === null)
        cbgu_Sort_instance = new cbgu_Sort;
    var$4 = cbgu_Sort_instance;
    var$5 = var$3.$items;
    var$6 = 0;
    var$7 = var$3.$size0;
    if (var$4.$timSort === null) {
        var$2 = new cbgu_TimSort;
        var$2.$minGallop = 7;
        var$2.$stackSize = 0;
        var$2.$tmp = $rt_createArray(jl_Object, 256);
        var$2.$runBase = $rt_createIntArray(40);
        var$2.$runLen = $rt_createIntArray(40);
        var$4.$timSort = var$2;
    }
    var$8 = var$5.data;
    var$2 = var$4.$timSort;
    var$2.$stackSize = 0;
    var$9 = var$8.length;
    if (var$6 > var$7) {
        var$1 = new jl_IllegalArgumentException;
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, $rt_s(571));
        var$2 = jl_StringBuilder_append0(var$2, var$6);
        jl_AbstractStringBuilder_append(var$2, $rt_s(572));
        var$2 = jl_StringBuilder_append0(var$2, var$7);
        jl_AbstractStringBuilder_append(var$2, $rt_s(568));
        jl_RuntimeException__init_(var$1, jl_AbstractStringBuilder_toString(var$2));
        $rt_throw(var$1);
    }
    if (var$7 > var$9)
        $rt_throw(jl_ArrayIndexOutOfBoundsException__init_0(var$7));
    var$10 = var$7 - var$6 | 0;
    if (var$10 >= 2) {
        if (var$10 < 32)
            cbgu_TimSort_binarySort(var$5, var$6, var$7, var$6 + cbgu_TimSort_countRunAndMakeAscending(var$5, var$6, var$7, var$1) | 0, var$1);
        else {
            var$2.$a0 = var$5;
            var$2.$c = var$1;
            var$2.$tmpCount = 0;
            var$11 = 0;
            var$12 = var$10;
            while (var$12 >= 32) {
                var$11 = var$11 | var$12 & 1;
                var$12 = var$12 >> 1;
            }
            var$13 = var$12 + var$11 | 0;
            while (true) {
                var$11 = cbgu_TimSort_countRunAndMakeAscending(var$5, var$6, var$7, var$1);
                if (var$11 >= var$13)
                    var$14 = var$11;
                else {
                    var$14 = var$10 > var$13 ? var$13 : var$10;
                    cbgu_TimSort_binarySort(var$5, var$6, var$6 + var$14 | 0, var$6 + var$11 | 0, var$1);
                }
                var$8 = var$2.$runBase.data;
                var$11 = var$2.$stackSize;
                var$8[var$11] = var$6;
                var$2.$runLen.data[var$11] = var$14;
                var$2.$stackSize = var$11 + 1 | 0;
                a: {
                    b: while (true) {
                        var$9 = var$2.$stackSize;
                        if (var$9 <= 1)
                            break a;
                        c: {
                            d: {
                                e: {
                                    var$15 = var$9 - 2 | 0;
                                    if (var$15 >= 1) {
                                        var$8 = var$2.$runLen.data;
                                        if (var$8[var$15 - 1 | 0] <= (var$8[var$15] + var$8[var$15 + 1 | 0] | 0))
                                            break e;
                                    }
                                    if (var$15 < 2)
                                        break d;
                                    var$8 = var$2.$runLen.data;
                                    if (var$8[var$15 - 2 | 0] > (var$8[var$15] + var$8[var$15 - 1 | 0] | 0))
                                        break d;
                                }
                                var$8 = var$2.$runLen.data;
                                if (var$8[var$15 - 1 | 0] >= var$8[var$15 + 1 | 0])
                                    break c;
                                var$15 = var$15 + (-1) | 0;
                                break c;
                            }
                            var$8 = var$2.$runLen.data;
                            if (var$8[var$15] > var$8[var$15 + 1 | 0])
                                break b;
                        }
                        cbgu_TimSort_mergeAt(var$2, var$15);
                    }
                }
                var$6 = var$6 + var$14 | 0;
                var$10 = var$10 - var$14 | 0;
                if (!var$10)
                    break;
            }
            while (true) {
                var$11 = var$2.$stackSize;
                if (var$11 <= 1)
                    break;
                var$11 = var$11 - 2 | 0;
                if (var$11 > 0) {
                    var$8 = var$2.$runLen.data;
                    if (var$8[var$11 - 1 | 0] < var$8[var$11 + 1 | 0])
                        var$11 = var$11 + (-1) | 0;
                }
                cbgu_TimSort_mergeAt(var$2, var$11);
            }
            var$2.$a0 = null;
            var$2.$c = null;
            var$8 = var$2.$tmp;
            var$6 = 0;
            var$11 = var$2.$tmpCount;
            while (var$6 < var$11) {
                var$8.data[var$6] = null;
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    var$1 = null;
    var$6 = 0;
    while (true) {
        var$2 = $this.$renderables;
        if (var$6 >= var$2.$size0)
            break;
        var$2 = cbgu_Array_get(var$2, var$6);
        if (var$1 !== var$2.$shader0) {
            if (var$1 !== null)
                var$1.$end1();
            var$1 = var$2.$shader0;
            var$1.$begin($this.$camera, $this.$context0);
        }
        var$1.$render0(var$2);
        var$6 = var$6 + 1 | 0;
    }
    if (var$1 !== null)
        var$1.$end1();
    var$1 = $this.$renderablesPool;
    cbgu_Pool_freeAll(var$1, var$1.$obtained);
    cbgu_Array_clear(var$1.$obtained);
    cbgu_Array_clear($this.$renderables);
    if ($this.$ownContext)
        cbgggu_RenderContext_end($this.$context0);
    $this.$camera = null;
};
function cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0() {
    jl_Object.call(this);
    this.$_019 = null;
}
let cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1.$_019;
    var$3 = var$2.loaded;
    var$4 = var$2.total;
    if (var$1 !== null) {
        var$1 = var$1.$val$listener;
        if (var$1 !== null)
            var$1.$onProgress(var$4, var$3);
    }
},
otjde_EventTarget = $rt_classWithoutFields(0),
otja_XMLHttpRequest = $rt_classWithoutFields(),
otcit_DoubleAnalyzer$Result = $rt_classWithoutFields(),
dcgb_Constant = $rt_classWithoutFields(),
dcgb_Constant_isLoadingDone = 0,
dcgb_Constant_random = null,
dcgb_Constant__clinit_ = () => {
    dcgb_Constant_isLoadingDone = 0;
    dcgb_Constant_random = new ju_Random;
},
dcgccss_ItemManager = $rt_classWithoutFields(dcgb_Manager),
dcgccss_ItemManager_tiles = null,
dcgccss_ItemManager_shapes = null,
dcgccss_ItemManager_shapePosition = null,
dcgccss_ItemManager_shockAnimation = null,
dcgccss_ItemManager_$callClinit = () => {
    dcgccss_ItemManager_$callClinit = $rt_eraseClinit(dcgccss_ItemManager);
    dcgccss_ItemManager__clinit_();
},
dcgccss_ItemManager_removeTile = ($x, $y) => {
    let $tile;
    dcgccss_ItemManager_$callClinit();
    if ($x >= 0 && $y >= 0 && $x < 8 && $y < 8) {
        $tile = dcgccss_ItemManager_tiles.data[$x].data[$y];
        if ($tile !== null)
            dcgbmc_DrawableComponent_dispose($tile);
        dcgccss_ItemManager_tiles.data[$x].data[$y] = null;
        return;
    }
},
dcgccss_ItemManager_initShapes = () => {
    let $i, $shape, $center, var$4, $texH, var$6, var$7, var$8, $texW, var$10, var$11, $left, $bottom;
    dcgccss_ItemManager_$callClinit();
    $i = 0;
    while ($i < 3) {
        while (true) {
            $shape = new dcgccso_Shape;
            $center = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($center);
            jl_StringBuilder_append0(jl_StringBuilder_append($center, $rt_s(573)), $i);
            var$4 = jl_AbstractStringBuilder_toString($center);
            $texH = 0;
            var$6 = (dcgccsf_ShapeType_values()).data;
            var$7 = var$6.length;
            var$8 = 0;
            while (var$8 < var$7) {
                $texH = $texH + var$6[var$8].$chance | 0;
                var$8 = var$8 + 1 | 0;
            }
            $texW = ju_Random_nextInt(dcgb_Constant_random, $texH);
            var$6 = (dcgccsf_ShapeType_values()).data;
            $texH = var$6.length;
            var$7 = 0;
            a: {
                while (true) {
                    if (var$7 >= $texH) {
                        $center = dcgccsf_ShapeType_N_2x2;
                        break a;
                    }
                    $center = var$6[var$7];
                    $texW = $texW - $center.$chance | 0;
                    if ($texW < 0)
                        break;
                    var$7 = var$7 + 1 | 0;
                }
            }
            dcgccso_Shape_$callClinit();
            dcgbmc_DraggableComponent_$callClinit();
            dcgbmc_DrawableComponent__init_($shape, var$4);
            $shape.$dragging = 0;
            $shape.$grabOffset = new cbgm_Vector2;
            $shape.$dragStartX = 0.0;
            $shape.$lastExtraX = 0.0;
            $shape.$dragStartY = 0.0;
            $shape.$lastExtraY = 0.0;
            $shape.$placed = 0;
            $shape.$isAutomaticShown = 0;
            $shape.$renderOrder = 12;
            $shape.$type5 = $center;
            $shape.$selectBarIndex = 1;
            dcgbc_Colors_$callClinit();
            var$6 = dcgbc_Colors_colors.data;
            $shape.$color0 = var$6[ju_Random_nextInt(dcgb_Constant_random, var$6.length)];
            if (!dcgccss_StateUtil_checkShapeCanPut($shape))
                continue;
            else
                break;
        }
        var$6 = (dcgccsf_ShapeType_getData($shape.$type5)).data;
        $shape.$pixmap = cbgg_Pixmap__init_($rt_imul(var$6[0].data.length, dcgccso_Shape_unitWidth), $rt_imul(var$6.length, dcgccso_Shape_unitHeight), cbgg_Pixmap$Format_RGBA8888);
        var$6 = dcgccsf_ShapeType_getData($shape.$type5);
        $texH = 0;
        while (true) {
            var$10 = var$6.data;
            if ($texH >= var$10.length)
                break;
            var$7 = 0;
            while (var$7 < var$10[$texH].data.length) {
                $texW = var$10[$texH].data[var$7];
                if (!$texW) {
                    cbgg_Pixmap_setColor($shape.$pixmap, dcgbc_Colors_TRANSPARENT);
                    $center = $shape.$pixmap;
                    $texW = dcgccso_Shape_unitWidth;
                    var$8 = $rt_imul(var$7, $texW);
                    var$11 = dcgccso_Shape_unitHeight;
                    cbgg_Pixmap_fillRectangle($center, var$8, $rt_imul($texH, var$11), $texW, var$11);
                } else if ($texW == 1) {
                    cbgg_Pixmap_setColor($shape.$pixmap, $shape.$color0);
                    $center = $shape.$pixmap;
                    dcgccso_Tile_$callClinit();
                    cbgg_Pixmap_drawPixmap0($center, dcgbu_GraphicUtil_adjustTextureSize0(dcgccso_Tile_WIDTH, dcgccso_Tile_HEIGHT, dcgccss_TileColorManager_getColorPixmap($shape.$color0)), $rt_imul(var$7, dcgccso_Shape_unitWidth), $rt_imul($texH, dcgccso_Shape_unitHeight));
                }
                var$7 = var$7 + 1 | 0;
            }
            $texH = $texH + 1 | 0;
        }
        $center = cbgg_Texture__init_($shape.$pixmap);
        $shape.$texture = $center;
        var$4 = $shape.$type5;
        $shape.$noDraggingTexture = cbgg_Texture__init_(dcgbu_GraphicUtil_adjustTextureSize($rt_imul(var$4.$width7, dcgccso_Shape_unitWidthNoDragging), $rt_imul(var$4.$height8, dcgccso_Shape_unitHeightNoDragging), $center));
        $shape.$isInitialized = 1;
        $texW = cbgg_Pixmap_getWidth($shape.$pixmap);
        $texH = cbgg_Pixmap_getHeight($shape.$pixmap);
        $shape.$size5 = dcgbmf_Size__init_($texW, $texH);
        $center = dcgccso_ShapeSelectBar_shapePosition.data[$i];
        $left = $center.$x2 - $texW / 2.0;
        $bottom = $center.$y2 - $texH / 2.0;
        cbgm_Vector2_set($shape.$renderOffset, $left, $bottom);
        dcgccss_ItemManager_shapes.data[$i] = $shape;
        $i = $i + 1 | 0;
    }
},
dcgccss_ItemManager__clinit_ = () => {
    let var$1;
    dcgccss_ItemManager_tiles = $rt_createMultiArray(dcgccso_Tile, [8, 8]);
    dcgccss_ItemManager_shapes = $rt_createArray(dcgccso_Shape, 3);
    dcgccss_ItemManager_shapePosition = $rt_createArray(cbgm_Vector2, 3);
    var$1 = new dcgbmca_ShockAnimation;
    dcgb_GameObject__init_(var$1, $rt_s(574));
    var$1.$duration = 0.44999998807907104;
    var$1.$amplitude = 5.0;
    var$1.$frequency = 18.0;
    var$1.$rotationAmplitude = 1.2000000476837158;
    dcgccss_ItemManager_shockAnimation = var$1;
    dcgb_ObjectManager_add(var$1);
},
dcgbs_FileHandleException = $rt_classWithoutFields(jl_RuntimeException),
cbggg_PixmapNativeInterface = $rt_classWithoutFields(0);
function cbgg_Pixmap() {
    let a = this; jl_Object.call(a);
    a.$blending = null;
    a.$filter0 = null;
    a.$color = 0;
    a.$nativePixmap = null;
    a.$disposed = 0;
}
let cbgg_Pixmap__init_2 = ($this, $file) => {
    let var$2, $path, $bytes, var$5, var$6;
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter0 = cbgg_Pixmap$Filter_BiLinear;
    $this.$color = 0;
    var$2 = $file;
    $path = var$2.$file;
    if (!cgxgbt_TeaFileHandle_exists(var$2)) {
        $file = new cbgu_GdxRuntimeException;
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(575)), $path);
        jl_RuntimeException__init_($file, jl_AbstractStringBuilder_toString(var$2));
        $rt_throw($file);
    }
    $bytes = cbgf_FileHandle_readBytes($file);
    var$5 = $bytes.data;
    $file = new cbggg_Gdx2DPixmap;
    var$6 = var$5.length;
    var$2 = new cbggg_Gdx2DPixmapNative;
    var$2.$nativeData = cbggg_Gdx2DPixmapNative_loadNative$js_body$_26(otji_JS_wrap($bytes), 0, var$6);
    cbggg_Gdx2DPixmapNative_updateNativeData(var$2);
    $file.$nativePixmap0 = var$2;
    $this.$nativePixmap = $file;
},
cbgg_Pixmap__init_0 = var_0 => {
    let var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_2(var_1, var_0);
    return var_1;
},
cbgg_Pixmap__init_1 = ($this, $width, $height, $format) => {
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter0 = cbgg_Pixmap$Filter_BiLinear;
    $this.$color = 0;
    $this.$nativePixmap = cbggg_Gdx2DPixmap__init_($width, $height, cbgg_Pixmap$Format_toGdx2DPixmapFormat($format));
    cbgg_Pixmap_setColor0($this, 0.0, 0.0, 0.0, 0.0);
    cbgg_Pixmap_fill($this);
},
cbgg_Pixmap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Pixmap__init_3 = ($this, $pixmap) => {
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter0 = cbgg_Pixmap$Filter_BiLinear;
    $this.$color = 0;
    $this.$nativePixmap = $pixmap;
},
cbgg_Pixmap__init_4 = var_0 => {
    let var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_3(var_1, var_0);
    return var_1;
},
cbgg_Pixmap_setColor0 = ($this, $r, $g, $b, $a) => {
    $this.$color = ($r * 255.0 | 0) << 24 | ($g * 255.0 | 0) << 16 | ($b * 255.0 | 0) << 8 | $a * 255.0 | 0;
},
cbgg_Pixmap_setColor = ($this, $color) => {
    cbgg_Pixmap_setColor0($this, $color.$r, $color.$g, $color.$b, $color.$a);
},
cbgg_Pixmap_fill = $this => {
    let var$1, var$2;
    var$1 = $this.$nativePixmap;
    var$2 = $this.$color;
    var$1 = var$1.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_clear(var$1.$basePtr, var$2);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$1);
},
cbgg_Pixmap_drawLine = ($this, $x, $y, $x2, $y2) => {
    let var$5, var$6, var$7;
    var$5 = $this.$nativePixmap;
    var$6 = $this.$color;
    var$7 = var$5.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_draw_line(var$7.$basePtr, $x, $y, $x2, $y2, var$6);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$7);
},
cbgg_Pixmap_drawPixmap0 = ($this, $pixmap, $x, $y) => {
    cbgg_Pixmap_drawPixmap1($this, $pixmap, $x, $y, 0, 0, cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap));
},
cbgg_Pixmap_drawPixmap1 = ($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) => {
    let var$8;
    var$8 = $this.$nativePixmap;
    $pixmap = $pixmap.$nativePixmap;
    cbggg_Gdx2DPixmapNative_drawPixmap(var$8.$nativePixmap0, $pixmap.$nativePixmap0.$basePtr, $srcx, $srcy, $x, $y, $srcWidth, $srcHeight);
},
cbgg_Pixmap_drawPixmap = ($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) => {
    let var$10, var$11, var$12, var$13;
    var$10 = $this.$nativePixmap;
    $pixmap = $pixmap.$nativePixmap;
    var$11 = var$10.$nativePixmap0;
    var$12 = $pixmap.$nativePixmap0.$basePtr;
    var$13 = var$11.$basePtr;
    Gdx.Gdx.prototype.g2d_draw_pixmap(var$12, var$13, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$11);
},
cbgg_Pixmap_fillRectangle = ($this, $x, $y, $width, $height) => {
    let var$5, var$6, var$7;
    var$5 = $this.$nativePixmap;
    var$6 = $this.$color;
    var$7 = var$5.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_fill_rect(var$7.$basePtr, $x, $y, $width, $height, var$6);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$7);
},
cbgg_Pixmap_fillCircle = ($this, $x, $y, $radius) => {
    let var$4, var$5;
    var$4 = $this.$nativePixmap;
    var$5 = $this.$color;
    var$4 = var$4.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_fill_circle(var$4.$basePtr, $x, $y, $radius, var$5);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$4);
},
cbgg_Pixmap_getWidth = $this => {
    return $this.$nativePixmap.$nativePixmap0.$width6;
},
cbgg_Pixmap_getHeight = $this => {
    return $this.$nativePixmap.$nativePixmap0.$height7;
},
cbgg_Pixmap_dispose = $this => {
    let var$1;
    if ($this.$disposed) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$1, $rt_s(576));
        $rt_throw(var$1);
    }
    cbggg_Gdx2DPixmapNative_dispose($this.$nativePixmap.$nativePixmap0);
    $this.$disposed = 1;
},
cbgg_Pixmap_getGLFormat = $this => {
    return cbggg_Gdx2DPixmap_getGLInternalFormat($this.$nativePixmap);
},
cbgg_Pixmap_getGLInternalFormat = $this => {
    return cbggg_Gdx2DPixmap_getGLInternalFormat($this.$nativePixmap);
},
cbgg_Pixmap_getGLType = $this => {
    let var$1, var$2, var$3;
    a: {
        var$1 = $this.$nativePixmap.$nativePixmap0.$format0;
        switch (var$1) {
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            case 5:
                var$1 = 33635;
                break a;
            case 6:
                var$1 = 32819;
                break a;
            default:
                var$2 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(577)), var$1);
                jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
                $rt_throw(var$2);
        }
        var$1 = 5121;
    }
    return var$1;
},
cbgg_Pixmap_getPixels = $this => {
    return $this.$nativePixmap.$nativePixmap0.$buffer4;
},
cbgg_Pixmap_getPixel = ($this, $x, $y) => {
    return Gdx.Gdx.prototype.g2d_get_pixel($this.$nativePixmap.$nativePixmap0.$basePtr, $x, $y);
},
cbgg_Pixmap_drawPixel = ($this, $x, $y) => {
    cbggg_Gdx2DPixmap_setPixel($this.$nativePixmap, $x, $y, $this.$color);
},
cbgg_Pixmap_drawPixel0 = ($this, $x, $y, $color) => {
    cbggg_Gdx2DPixmap_setPixel($this.$nativePixmap, $x, $y, $color);
},
cbgg_Pixmap_getFormat = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$nativePixmap.$nativePixmap0.$format0;
    if (var$1 == 1)
        var$2 = cbgg_Pixmap$Format_Alpha;
    else if (var$1 == 2)
        var$2 = cbgg_Pixmap$Format_LuminanceAlpha;
    else if (var$1 == 5)
        var$2 = cbgg_Pixmap$Format_RGB565;
    else if (var$1 == 6)
        var$2 = cbgg_Pixmap$Format_RGBA4444;
    else if (var$1 == 3)
        var$2 = cbgg_Pixmap$Format_RGB888;
    else {
        if (var$1 != 4) {
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(578)), var$1);
            jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
        }
        var$2 = cbgg_Pixmap$Format_RGBA8888;
    }
    return var$2;
},
cbgg_Pixmap_setBlending = ($this, $blending) => {
    let var$2, var$3;
    $this.$blending = $blending;
    var$2 = $this.$nativePixmap;
    var$3 = $blending !== cbgg_Pixmap$Blending_None ? 1 : 0;
    cbggg_Gdx2DPixmapNative_setBlend(var$2.$nativePixmap0, var$3);
},
cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Filter_NearestNeighbour = null,
cbgg_Pixmap$Filter_BiLinear = null,
cbgg_Pixmap$Filter_$VALUES = null,
cbgg_Pixmap$Filter__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Filter;
    jl_Enum__init_(var$1, $rt_s(579), 0);
    cbgg_Pixmap$Filter_NearestNeighbour = var$1;
    var$1 = new cbgg_Pixmap$Filter;
    jl_Enum__init_(var$1, $rt_s(580), 1);
    cbgg_Pixmap$Filter_BiLinear = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Filter, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Filter_NearestNeighbour;
    var$3[1] = var$1;
    cbgg_Pixmap$Filter_$VALUES = var$2;
},
cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_PixmapTextureData() {
    let a = this; jl_Object.call(a);
    a.$pixmap1 = null;
    a.$format2 = null;
    a.$useMipMaps0 = 0;
    a.$disposePixmap0 = 0;
    a.$managed = 0;
}
let cbggg_PixmapTextureData__init_ = ($this, $pixmap, $format, $useMipMaps, $disposePixmap, $managed) => {
    $this.$pixmap1 = $pixmap;
    if ($format === null)
        $format = cbgg_Pixmap_getFormat($pixmap);
    $this.$format2 = $format;
    $this.$useMipMaps0 = $useMipMaps;
    $this.$disposePixmap0 = $disposePixmap;
    $this.$managed = $managed;
},
cbggg_PixmapTextureData__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggg_PixmapTextureData();
    cbggg_PixmapTextureData__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggg_PixmapTextureData_disposePixmap = $this => {
    return $this.$disposePixmap0;
},
cbggg_PixmapTextureData_consumePixmap = $this => {
    return $this.$pixmap1;
},
cbggg_PixmapTextureData_getWidth = $this => {
    return cbgg_Pixmap_getWidth($this.$pixmap1);
},
cbggg_PixmapTextureData_getHeight = $this => {
    return cbgg_Pixmap_getHeight($this.$pixmap1);
},
cbggg_PixmapTextureData_getFormat = $this => {
    return $this.$format2;
},
cbggg_PixmapTextureData_useMipMaps = $this => {
    return $this.$useMipMaps0;
},
cbggg_PixmapTextureData_isManaged = $this => {
    return $this.$managed;
},
cbggg_PixmapTextureData_getType = $this => {
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_PixmapTextureData_consumeCustomData = ($this, $target) => {
    let var$2;
    var$2 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$2, $rt_s(581));
    $rt_throw(var$2);
},
cbggg_PixmapTextureData_isPrepared = $this => {
    return 1;
},
cbggg_PixmapTextureData_prepare = $this => {
    let var$1;
    var$1 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$1, $rt_s(582));
    $rt_throw(var$1);
};
function dcgb_ObjectManager$get$lambda$_5_0() {
    jl_Object.call(this);
    this.$_015 = null;
}
function dcgb_ObjectManager$get$lambda$_5_1() {
    jl_Object.call(this);
    this.$_03 = null;
}
let dcgb_ObjectManager$get$lambda$_5_1_test = (var$0, var$1) => {
    var$1 = var$1;
    return jl_String_equals(var$0.$_03, var$1.$name);
};
function ju_Optional() {
    jl_Object.call(this);
    this.$value1 = null;
}
let ju_Optional_emptyInstance = null,
ju_Optional__init_0 = ($this, $value) => {
    $this.$value1 = $value;
},
ju_Optional__init_ = var_0 => {
    let var_1 = new ju_Optional();
    ju_Optional__init_0(var_1, var_0);
    return var_1;
};
function cbgggu_ModelBuilder() {
    let a = this; jl_Object.call(a);
    a.$builders = null;
    a.$tmpTransform = null;
}
function cbggg_Attributes() {
    let a = this; jl_Object.call(a);
    a.$mask5 = Long_ZERO;
    a.$attributes4 = null;
    a.$sorted = 0;
}
let cbggg_Attributes_get = ($this, $type) => {
    let $i, var$3;
    a: {
        if (cbggg_Attributes_has($this, $type)) {
            $i = 0;
            while (true) {
                var$3 = $this.$attributes4;
                if ($i >= var$3.$size0)
                    break a;
                if (Long_eq((cbgu_Array_get(var$3, $i)).$type7, $type))
                    return cbgu_Array_get($this.$attributes4, $i);
                $i = $i + 1 | 0;
            }
        }
    }
    return null;
},
cbggg_Attributes_has = ($this, $type) => {
    return Long_ne($type, Long_ZERO) && Long_eq(Long_and($this.$mask5, $type), $type) ? 1 : 0;
},
cbggg_Environment = $rt_classWithoutFields(cbggg_Attributes);
function jur_Matcher$1() {
    let a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$015 = null;
}
let jur_Matcher$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$015 = $this$0;
    $this.$val$gr = var$2;
    $this.$grN = var$2;
},
jur_Matcher$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Matcher$1_toString = $this => {
    return jur_Matcher_group($this.$this$015, $this.$grN);
},
cbgm_Vector = $rt_classWithoutFields(0);
function cbgm_Vector3() {
    let a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$z = 0.0;
}
let cbgm_Vector3_X = null,
cbgm_Vector3_Y = null,
cbgm_Vector3_Z = null,
cbgm_Vector3_Zero = null,
cbgm_Vector3_tmpMat = null,
cbgm_Vector3_$callClinit = () => {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
},
cbgm_Vector3__init_2 = $this => {
    cbgm_Vector3_$callClinit();
},
cbgm_Vector3__init_ = () => {
    let var_0 = new cbgm_Vector3();
    cbgm_Vector3__init_2(var_0);
    return var_0;
},
cbgm_Vector3__init_1 = ($this, $x, $y, $z) => {
    cbgm_Vector3_$callClinit();
    cbgm_Vector3_set($this, $x, $y, $z);
},
cbgm_Vector3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbgm_Vector3();
    cbgm_Vector3__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgm_Vector3_set = ($this, $x, $y, $z) => {
    $this.$x0 = $x;
    $this.$y0 = $y;
    $this.$z = $z;
    return $this;
},
cbgm_Vector3_set0 = ($this, $vector) => {
    return cbgm_Vector3_set($this, $vector.$x0, $vector.$y0, $vector.$z);
},
cbgm_Vector3_dst2 = ($this, $point) => {
    let $a, $b, $c;
    $a = $point.$x0 - $this.$x0;
    $b = $point.$y0 - $this.$y0;
    $c = $point.$z - $this.$z;
    return $a * $a + $b * $b + $c * $c;
},
cbgm_Vector3_nor = $this => {
    let var$1, $len2;
    var$1 = $this.$x0;
    var$1 = var$1 * var$1;
    $len2 = $this.$y0;
    var$1 = var$1 + $len2 * $len2;
    $len2 = $this.$z;
    $len2 = var$1 + $len2 * $len2;
    if ($len2 !== 0.0 && $len2 !== 1.0) {
        var$1 = 1.0 / jl_Math_sqrt($len2);
        return cbgm_Vector3_set($this, $this.$x0 * var$1, $this.$y0 * var$1, $this.$z * var$1);
    }
    return $this;
},
cbgm_Vector3_crs = ($this, $vector) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$y0;
    var$3 = $vector.$z;
    var$4 = var$2 * var$3;
    var$5 = $this.$z;
    var$6 = $vector.$y0;
    var$4 = var$4 - var$5 * var$6;
    var$7 = $vector.$x0;
    var$5 = var$5 * var$7;
    var$8 = $this.$x0;
    return cbgm_Vector3_set($this, var$4, var$5 - var$8 * var$3, var$8 * var$6 - var$2 * var$7);
},
cbgm_Vector3__clinit_ = () => {
    cbgm_Vector3_X = cbgm_Vector3__init_0(1.0, 0.0, 0.0);
    cbgm_Vector3_Y = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    cbgm_Vector3_Z = cbgm_Vector3__init_0(0.0, 0.0, 1.0);
    cbgm_Vector3_Zero = cbgm_Vector3__init_0(0.0, 0.0, 0.0);
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
},
dcgbu_Util = $rt_classWithoutFields(),
dcgbu_ColorUtil = $rt_classWithoutFields(dcgbu_Util),
dcgbu_ColorUtil_hex = $hex => {
    let $cleanHex, $r, var$4, $g, $b;
    $cleanHex = !jl_String_startsWith($hex, $rt_s(583)) ? $hex : jl_String_substring0($hex, 1);
    switch ($cleanHex.$nativeString.length) {
        case 3:
            $hex = jl_String_valueOf0(jl_String_charAt($cleanHex, 0));
            $r = jl_String_charAt($cleanHex, 0);
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$4, $hex), $r);
            $r = jl_Integer_parseInt(jl_AbstractStringBuilder_toString(var$4), 16);
            $hex = jl_String_valueOf0(jl_String_charAt($cleanHex, 1));
            $g = jl_String_charAt($cleanHex, 1);
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$4, $hex), $g);
            $g = jl_Integer_parseInt(jl_AbstractStringBuilder_toString(var$4), 16);
            $hex = jl_String_valueOf0(jl_String_charAt($cleanHex, 2));
            $b = jl_String_charAt($cleanHex, 2);
            $cleanHex = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($cleanHex);
            jl_AbstractStringBuilder_append0(jl_StringBuilder_append($cleanHex, $hex), $b);
            return cbgg_Color__init_0($r / 255.0, $g / 255.0, jl_Integer_parseInt(jl_AbstractStringBuilder_toString($cleanHex), 16) / 255.0, 1.0);
        case 6:
            return cbgg_Color__init_0(jl_Integer_parseInt(jl_String_substring($cleanHex, 0, 2), 16) / 255.0, jl_Integer_parseInt(jl_String_substring($cleanHex, 2, 4), 16) / 255.0, jl_Integer_parseInt(jl_String_substring($cleanHex, 4, 6), 16) / 255.0, 1.0);
        case 8:
            return cbgg_Color__init_0(jl_Integer_parseInt(jl_String_substring($cleanHex, 0, 2), 16) / 255.0, jl_Integer_parseInt(jl_String_substring($cleanHex, 2, 4), 16) / 255.0, jl_Integer_parseInt(jl_String_substring($cleanHex, 4, 6), 16) / 255.0, jl_Integer_parseInt(jl_String_substring($cleanHex, 6, 8), 16) / 255.0);
        default:
    }
    $cleanHex = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(584)), $hex);
    jl_RuntimeException__init_($cleanHex, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw($cleanHex);
},
dcgbu_ColorUtil_darkerColor = ($c, $r) => {
    if ($r > 1.0)
        $r = $r - 1.0;
    return cbgg_Color__init_0($c.$r * $r, $c.$g * $r, $c.$b * $r, $c.$a);
};
function cbgm_Vector2() {
    let a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y2 = 0.0;
}
let cbgm_Vector2_X = null,
cbgm_Vector2_Y = null,
cbgm_Vector2_Zero = null,
cbgm_Vector2__init_0 = ($this, $x, $y) => {
    $this.$x2 = $x;
    $this.$y2 = $y;
},
cbgm_Vector2__init_ = (var_0, var_1) => {
    let var_2 = new cbgm_Vector2();
    cbgm_Vector2__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgm_Vector2_set = ($this, $x, $y) => {
    $this.$x2 = $x;
    $this.$y2 = $y;
    return $this;
},
cbgm_Vector2__clinit_ = () => {
    cbgm_Vector2_X = cbgm_Vector2__init_(1.0, 0.0);
    cbgm_Vector2_Y = cbgm_Vector2__init_(0.0, 1.0);
    cbgm_Vector2_Zero = cbgm_Vector2__init_(0.0, 0.0);
},
dcgbu_TypeUtil = $rt_classWithoutFields(dcgbu_Util),
dcgbu_TypeUtil_toPixmapFormat = $format => {
    let $fmt, var$3;
    a: {
        dcgbu_TypeUtil$1_$callClinit();
        switch (dcgbu_TypeUtil$1_$SwitchMap$dev$cas$game$base$mod$format$RenderFormat.data[$format.$ordinal0]) {
            case 1:
                break;
            case 2:
                $fmt = cbgg_Pixmap$Format_RGB888;
                break a;
            case 3:
                $fmt = cbgg_Pixmap$Format_RGB565;
                break a;
            case 4:
                $fmt = cbgg_Pixmap$Format_RGBA4444;
                break a;
            case 5:
                $fmt = cbgg_Pixmap$Format_Alpha;
                break a;
            case 6:
                $fmt = cbgg_Pixmap$Format_Intensity;
                break a;
            case 7:
                $fmt = null;
                break a;
            default:
                $fmt = new jl_IllegalArgumentException;
                $format = jl_String_valueOf($format);
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(585)), $format);
                jl_RuntimeException__init_($fmt, jl_AbstractStringBuilder_toString(var$3));
                $rt_throw($fmt);
        }
        $fmt = cbgg_Pixmap$Format_RGBA8888;
    }
    return $fmt;
},
cbgg_TextureData$Factory = $rt_classWithoutFields(),
cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Blending_None = null,
cbgg_Pixmap$Blending_SourceOver = null,
cbgg_Pixmap$Blending_$VALUES = null,
cbgg_Pixmap$Blending__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Blending;
    jl_Enum__init_(var$1, $rt_s(586), 0);
    cbgg_Pixmap$Blending_None = var$1;
    var$1 = new cbgg_Pixmap$Blending;
    jl_Enum__init_(var$1, $rt_s(587), 1);
    cbgg_Pixmap$Blending_SourceOver = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Blending, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Blending_None;
    var$3[1] = var$1;
    cbgg_Pixmap$Blending_$VALUES = var$2;
};
function cbggg_Gdx2DPixmap() {
    jl_Object.call(this);
    this.$nativePixmap0 = null;
}
let cbggg_Gdx2DPixmap__init_0 = ($this, $width, $height, $format) => {
    $this.$nativePixmap0 = cbggg_Gdx2DPixmapNative__init_0($width, $height, $format);
},
cbggg_Gdx2DPixmap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_Gdx2DPixmap();
    cbggg_Gdx2DPixmap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_Gdx2DPixmap_setPixel = ($this, $x, $y, $color) => {
    let var$4;
    var$4 = $this.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_set_pixel(var$4.$basePtr, $x, $y, $color);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$4);
},
cbggg_Gdx2DPixmap_getGLInternalFormat = $this => {
    let var$1, var$2, var$3;
    a: {
        var$1 = $this.$nativePixmap0.$format0;
        switch (var$1) {
            case 1:
                break;
            case 2:
                var$1 = 6410;
                break a;
            case 3:
            case 5:
                var$1 = 6407;
                break a;
            case 4:
            case 6:
                var$1 = 6408;
                break a;
            default:
                var$2 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$3);
                jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(577)), var$1);
                jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
                $rt_throw(var$2);
        }
        var$1 = 6406;
    }
    return var$1;
},
cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Format_Alpha = null,
cbgg_Pixmap$Format_Intensity = null,
cbgg_Pixmap$Format_LuminanceAlpha = null,
cbgg_Pixmap$Format_RGB565 = null,
cbgg_Pixmap$Format_RGBA4444 = null,
cbgg_Pixmap$Format_RGB888 = null,
cbgg_Pixmap$Format_RGBA8888 = null,
cbgg_Pixmap$Format_$VALUES = null,
cbgg_Pixmap$Format_toGdx2DPixmapFormat = $format => {
    let var$2, var$3;
    if ($format === cbgg_Pixmap$Format_Alpha)
        return 1;
    if ($format === cbgg_Pixmap$Format_Intensity)
        return 1;
    if ($format === cbgg_Pixmap$Format_LuminanceAlpha)
        return 2;
    if ($format === cbgg_Pixmap$Format_RGB565)
        return 5;
    if ($format === cbgg_Pixmap$Format_RGBA4444)
        return 6;
    if ($format === cbgg_Pixmap$Format_RGB888)
        return 3;
    if ($format === cbgg_Pixmap$Format_RGBA8888)
        return 4;
    var$2 = new cbgu_GdxRuntimeException;
    $format = jl_String_valueOf($format);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(588)), $format);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw(var$2);
},
cbgg_Pixmap$Format__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(192), 0);
    cbgg_Pixmap$Format_Alpha = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(589), 1);
    cbgg_Pixmap$Format_Intensity = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(590), 2);
    cbgg_Pixmap$Format_LuminanceAlpha = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(591), 3);
    cbgg_Pixmap$Format_RGB565 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(592), 4);
    cbgg_Pixmap$Format_RGBA4444 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(593), 5);
    cbgg_Pixmap$Format_RGB888 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(594), 6);
    cbgg_Pixmap$Format_RGBA8888 = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Format, 7);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Format_Alpha;
    var$3[1] = cbgg_Pixmap$Format_Intensity;
    var$3[2] = cbgg_Pixmap$Format_LuminanceAlpha;
    var$3[3] = cbgg_Pixmap$Format_RGB565;
    var$3[4] = cbgg_Pixmap$Format_RGBA4444;
    var$3[5] = cbgg_Pixmap$Format_RGB888;
    var$3[6] = var$1;
    cbgg_Pixmap$Format_$VALUES = var$2;
};
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
let cbgm_Matrix4_tmp = null,
cbgm_Matrix4_quat = null,
cbgm_Matrix4_quat2 = null,
cbgm_Matrix4_l_vez = null,
cbgm_Matrix4_l_vex = null,
cbgm_Matrix4_l_vey = null,
cbgm_Matrix4_tmpVec = null,
cbgm_Matrix4_tmpMat = null,
cbgm_Matrix4_right = null,
cbgm_Matrix4_tmpForward = null,
cbgm_Matrix4_tmpUp = null,
cbgm_Matrix4_$callClinit = () => {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
},
cbgm_Matrix4__init_0 = $this => {
    let var$1, var$2;
    cbgm_Matrix4_$callClinit();
    var$1 = $rt_createFloatArray(16);
    var$2 = var$1.data;
    $this.$val = var$1;
    var$2[0] = 1.0;
    var$2[5] = 1.0;
    var$2[10] = 1.0;
    var$2[15] = 1.0;
},
cbgm_Matrix4__init_ = () => {
    let var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
},
cbgm_Matrix4_set = ($this, $matrix) => {
    return cbgm_Matrix4_set0($this, $matrix.$val);
},
cbgm_Matrix4_set0 = ($this, $values) => {
    let var$2;
    var$2 = $values.data;
    $values = $this.$val.data;
    $values[0] = var$2[0];
    $values[1] = var$2[1];
    $values[2] = var$2[2];
    $values[3] = var$2[3];
    $values[4] = var$2[4];
    $values[5] = var$2[5];
    $values[6] = var$2[6];
    $values[7] = var$2[7];
    $values[8] = var$2[8];
    $values[9] = var$2[9];
    $values[10] = var$2[10];
    $values[11] = var$2[11];
    $values[12] = var$2[12];
    $values[13] = var$2[13];
    $values[14] = var$2[14];
    $values[15] = var$2[15];
    return $this;
},
cbgm_Matrix4_mul0 = ($this, $matrix) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbgm_Matrix4_$callClinit();
    var$2 = cbgm_Matrix4_tmp;
    var$3 = var$2.data;
    var$4 = $this.$val.data;
    var$5 = var$4[0];
    var$6 = $matrix.$val.data;
    var$3[0] = var$5 * var$6[0] + var$4[4] * var$6[1] + var$4[8] * var$6[2] + var$4[12] * var$6[3];
    var$3[4] = var$4[0] * var$6[4] + var$4[4] * var$6[5] + var$4[8] * var$6[6] + var$4[12] * var$6[7];
    var$3[8] = var$4[0] * var$6[8] + var$4[4] * var$6[9] + var$4[8] * var$6[10] + var$4[12] * var$6[11];
    var$3[12] = var$4[0] * var$6[12] + var$4[4] * var$6[13] + var$4[8] * var$6[14] + var$4[12] * var$6[15];
    var$3[1] = var$4[1] * var$6[0] + var$4[5] * var$6[1] + var$4[9] * var$6[2] + var$4[13] * var$6[3];
    var$3[5] = var$4[1] * var$6[4] + var$4[5] * var$6[5] + var$4[9] * var$6[6] + var$4[13] * var$6[7];
    var$3[9] = var$4[1] * var$6[8] + var$4[5] * var$6[9] + var$4[9] * var$6[10] + var$4[13] * var$6[11];
    var$3[13] = var$4[1] * var$6[12] + var$4[5] * var$6[13] + var$4[9] * var$6[14] + var$4[13] * var$6[15];
    var$3[2] = var$4[2] * var$6[0] + var$4[6] * var$6[1] + var$4[10] * var$6[2] + var$4[14] * var$6[3];
    var$3[6] = var$4[2] * var$6[4] + var$4[6] * var$6[5] + var$4[10] * var$6[6] + var$4[14] * var$6[7];
    var$3[10] = var$4[2] * var$6[8] + var$4[6] * var$6[9] + var$4[10] * var$6[10] + var$4[14] * var$6[11];
    var$3[14] = var$4[2] * var$6[12] + var$4[6] * var$6[13] + var$4[10] * var$6[14] + var$4[14] * var$6[15];
    var$3[3] = var$4[3] * var$6[0] + var$4[7] * var$6[1] + var$4[11] * var$6[2] + var$4[15] * var$6[3];
    var$3[7] = var$4[3] * var$6[4] + var$4[7] * var$6[5] + var$4[11] * var$6[6] + var$4[15] * var$6[7];
    var$3[11] = var$4[3] * var$6[8] + var$4[7] * var$6[9] + var$4[11] * var$6[10] + var$4[15] * var$6[11];
    var$3[15] = var$4[3] * var$6[12] + var$4[7] * var$6[13] + var$4[11] * var$6[14] + var$4[15] * var$6[15];
    return cbgm_Matrix4_set0($this, var$2);
},
cbgm_Matrix4_idt = $this => {
    let var$1;
    var$1 = $this.$val.data;
    var$1[0] = 1.0;
    var$1[4] = 0.0;
    var$1[8] = 0.0;
    var$1[12] = 0.0;
    var$1[1] = 0.0;
    var$1[5] = 1.0;
    var$1[9] = 0.0;
    var$1[13] = 0.0;
    var$1[2] = 0.0;
    var$1[6] = 0.0;
    var$1[10] = 1.0;
    var$1[14] = 0.0;
    var$1[3] = 0.0;
    var$1[7] = 0.0;
    var$1[11] = 0.0;
    var$1[15] = 1.0;
    return $this;
},
cbgm_Matrix4_setToOrtho2D = ($this, $x, $y, $width, $height) => {
    cbgm_Matrix4_setToOrtho($this, $x, $x + $width, $y, $y + $height, 0.0, 1.0);
    return $this;
},
cbgm_Matrix4_setToOrtho = ($this, $left, $right, $bottom, $top, $near, $far) => {
    let $tx, $x_orth, $ty, $y_orth, $tz, $z_orth, var$13;
    cbgm_Matrix4_idt($this);
    $tx = $right - $left;
    $x_orth = 2.0 / $tx;
    $ty = $top - $bottom;
    $y_orth = 2.0 / $ty;
    $tz = $far - $near;
    $z_orth = (-2.0) / $tz;
    $tx =  -($right + $left) / $tx;
    $ty =  -($top + $bottom) / $ty;
    $tz =  -($far + $near) / $tz;
    var$13 = $this.$val.data;
    var$13[0] = $x_orth;
    var$13[1] = 0.0;
    var$13[2] = 0.0;
    var$13[3] = 0.0;
    var$13[4] = 0.0;
    var$13[5] = $y_orth;
    var$13[6] = 0.0;
    var$13[7] = 0.0;
    var$13[8] = 0.0;
    var$13[9] = 0.0;
    var$13[10] = $z_orth;
    var$13[11] = 0.0;
    var$13[12] = $tx;
    var$13[13] = $ty;
    var$13[14] = $tz;
    var$13[15] = 1.0;
    return $this;
},
cbgm_Matrix4_matrix4_mul = ($mata, $matb) => {
    let var$3, $tmp_0, var$5;
    cbgm_Matrix4_$callClinit();
    var$3 = $mata.data;
    $matb = $matb.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$5 = $tmp_0.data;
    var$5[0] = var$3[0] * $matb[0] + var$3[4] * $matb[1] + var$3[8] * $matb[2] + var$3[12] * $matb[3];
    var$5[4] = var$3[0] * $matb[4] + var$3[4] * $matb[5] + var$3[8] * $matb[6] + var$3[12] * $matb[7];
    var$5[8] = var$3[0] * $matb[8] + var$3[4] * $matb[9] + var$3[8] * $matb[10] + var$3[12] * $matb[11];
    var$5[12] = var$3[0] * $matb[12] + var$3[4] * $matb[13] + var$3[8] * $matb[14] + var$3[12] * $matb[15];
    var$5[1] = var$3[1] * $matb[0] + var$3[5] * $matb[1] + var$3[9] * $matb[2] + var$3[13] * $matb[3];
    var$5[5] = var$3[1] * $matb[4] + var$3[5] * $matb[5] + var$3[9] * $matb[6] + var$3[13] * $matb[7];
    var$5[9] = var$3[1] * $matb[8] + var$3[5] * $matb[9] + var$3[9] * $matb[10] + var$3[13] * $matb[11];
    var$5[13] = var$3[1] * $matb[12] + var$3[5] * $matb[13] + var$3[9] * $matb[14] + var$3[13] * $matb[15];
    var$5[2] = var$3[2] * $matb[0] + var$3[6] * $matb[1] + var$3[10] * $matb[2] + var$3[14] * $matb[3];
    var$5[6] = var$3[2] * $matb[4] + var$3[6] * $matb[5] + var$3[10] * $matb[6] + var$3[14] * $matb[7];
    var$5[10] = var$3[2] * $matb[8] + var$3[6] * $matb[9] + var$3[10] * $matb[10] + var$3[14] * $matb[11];
    var$5[14] = var$3[2] * $matb[12] + var$3[6] * $matb[13] + var$3[10] * $matb[14] + var$3[14] * $matb[15];
    var$5[3] = var$3[3] * $matb[0] + var$3[7] * $matb[1] + var$3[11] * $matb[2] + var$3[15] * $matb[3];
    var$5[7] = var$3[3] * $matb[4] + var$3[7] * $matb[5] + var$3[11] * $matb[6] + var$3[15] * $matb[7];
    var$5[11] = var$3[3] * $matb[8] + var$3[7] * $matb[9] + var$3[11] * $matb[10] + var$3[15] * $matb[11];
    var$5[15] = var$3[3] * $matb[12] + var$3[7] * $matb[13] + var$3[11] * $matb[14] + var$3[15] * $matb[15];
    jl_System_fastArraycopy($tmp_0, 0, $mata, 0, 16);
},
cbgm_Matrix4_matrix4_det = $val => {
    cbgm_Matrix4_$callClinit();
    $val = $val.data;
    return $val[3] * $val[6] * $val[9] * $val[12] - $val[2] * $val[7] * $val[9] * $val[12] - $val[3] * $val[5] * $val[10] * $val[12] + $val[1] * $val[7] * $val[10] * $val[12] + $val[2] * $val[5] * $val[11] * $val[12] - $val[1] * $val[6] * $val[11] * $val[12] - $val[3] * $val[6] * $val[8] * $val[13] + $val[2] * $val[7] * $val[8] * $val[13] + $val[3] * $val[4] * $val[10] * $val[13] - $val[0] * $val[7] * $val[10] * $val[13] - $val[2] * $val[4] * $val[11] * $val[13] + $val[0] * $val[6] * $val[11] * $val[13] + $val[3]
    * $val[5] * $val[8] * $val[14] - $val[1] * $val[7] * $val[8] * $val[14] - $val[3] * $val[4] * $val[9] * $val[14] + $val[0] * $val[7] * $val[9] * $val[14] + $val[1] * $val[4] * $val[11] * $val[14] - $val[0] * $val[5] * $val[11] * $val[14] - $val[2] * $val[5] * $val[8] * $val[15] + $val[1] * $val[6] * $val[8] * $val[15] + $val[2] * $val[4] * $val[9] * $val[15] - $val[0] * $val[6] * $val[9] * $val[15] - $val[1] * $val[4] * $val[10] * $val[15] + $val[0] * $val[5] * $val[10] * $val[15];
},
cbgm_Matrix4_matrix4_inv = $val => {
    let $tmp_0, $l_det, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    $tmp_0 = $tmp_0.data;
    $val = $val.data;
    $tmp_0[0] = $val[9] * $val[14] * $val[7] - $val[13] * $val[10] * $val[7] + $val[13] * $val[6] * $val[11] - $val[5] * $val[14] * $val[11] - $val[9] * $val[6] * $val[15] + $val[5] * $val[10] * $val[15];
    $tmp_0[4] = $val[12] * $val[10] * $val[7] - $val[8] * $val[14] * $val[7] - $val[12] * $val[6] * $val[11] + $val[4] * $val[14] * $val[11] + $val[8] * $val[6] * $val[15] - $val[4] * $val[10] * $val[15];
    $tmp_0[8] = $val[8] * $val[13] * $val[7] - $val[12] * $val[9] * $val[7] + $val[12] * $val[5] * $val[11] - $val[4] * $val[13] * $val[11] - $val[8] * $val[5] * $val[15] + $val[4] * $val[9] * $val[15];
    $tmp_0[12] = $val[12] * $val[9] * $val[6] - $val[8] * $val[13] * $val[6] - $val[12] * $val[5] * $val[10] + $val[4] * $val[13] * $val[10] + $val[8] * $val[5] * $val[14] - $val[4] * $val[9] * $val[14];
    $tmp_0[1] = $val[13] * $val[10] * $val[3] - $val[9] * $val[14] * $val[3] - $val[13] * $val[2] * $val[11] + $val[1] * $val[14] * $val[11] + $val[9] * $val[2] * $val[15] - $val[1] * $val[10] * $val[15];
    $tmp_0[5] = $val[8] * $val[14] * $val[3] - $val[12] * $val[10] * $val[3] + $val[12] * $val[2] * $val[11] - $val[0] * $val[14] * $val[11] - $val[8] * $val[2] * $val[15] + $val[0] * $val[10] * $val[15];
    $tmp_0[9] = $val[12] * $val[9] * $val[3] - $val[8] * $val[13] * $val[3] - $val[12] * $val[1] * $val[11] + $val[0] * $val[13] * $val[11] + $val[8] * $val[1] * $val[15] - $val[0] * $val[9] * $val[15];
    $tmp_0[13] = $val[8] * $val[13] * $val[2] - $val[12] * $val[9] * $val[2] + $val[12] * $val[1] * $val[10] - $val[0] * $val[13] * $val[10] - $val[8] * $val[1] * $val[14] + $val[0] * $val[9] * $val[14];
    $tmp_0[2] = $val[5] * $val[14] * $val[3] - $val[13] * $val[6] * $val[3] + $val[13] * $val[2] * $val[7] - $val[1] * $val[14] * $val[7] - $val[5] * $val[2] * $val[15] + $val[1] * $val[6] * $val[15];
    $tmp_0[6] = $val[12] * $val[6] * $val[3] - $val[4] * $val[14] * $val[3] - $val[12] * $val[2] * $val[7] + $val[0] * $val[14] * $val[7] + $val[4] * $val[2] * $val[15] - $val[0] * $val[6] * $val[15];
    $tmp_0[10] = $val[4] * $val[13] * $val[3] - $val[12] * $val[5] * $val[3] + $val[12] * $val[1] * $val[7] - $val[0] * $val[13] * $val[7] - $val[4] * $val[1] * $val[15] + $val[0] * $val[5] * $val[15];
    $tmp_0[14] = $val[12] * $val[5] * $val[2] - $val[4] * $val[13] * $val[2] - $val[12] * $val[1] * $val[6] + $val[0] * $val[13] * $val[6] + $val[4] * $val[1] * $val[14] - $val[0] * $val[5] * $val[14];
    $tmp_0[3] = $val[9] * $val[6] * $val[3] - $val[5] * $val[10] * $val[3] - $val[9] * $val[2] * $val[7] + $val[1] * $val[10] * $val[7] + $val[5] * $val[2] * $val[11] - $val[1] * $val[6] * $val[11];
    $tmp_0[7] = $val[4] * $val[10] * $val[3] - $val[8] * $val[6] * $val[3] + $val[8] * $val[2] * $val[7] - $val[0] * $val[10] * $val[7] - $val[4] * $val[2] * $val[11] + $val[0] * $val[6] * $val[11];
    $tmp_0[11] = $val[8] * $val[5] * $val[3] - $val[4] * $val[9] * $val[3] - $val[8] * $val[1] * $val[7] + $val[0] * $val[9] * $val[7] + $val[4] * $val[1] * $val[11] - $val[0] * $val[5] * $val[11];
    $tmp_0[15] = $val[4] * $val[9] * $val[2] - $val[8] * $val[5] * $val[2] + $val[8] * $val[1] * $val[6] - $val[0] * $val[9] * $val[6] - $val[4] * $val[1] * $val[10] + $val[0] * $val[5] * $val[10];
    $inv_det = 1.0 / $l_det;
    $val[0] = $tmp_0[0] * $inv_det;
    $val[4] = $tmp_0[4] * $inv_det;
    $val[8] = $tmp_0[8] * $inv_det;
    $val[12] = $tmp_0[12] * $inv_det;
    $val[1] = $tmp_0[1] * $inv_det;
    $val[5] = $tmp_0[5] * $inv_det;
    $val[9] = $tmp_0[9] * $inv_det;
    $val[13] = $tmp_0[13] * $inv_det;
    $val[2] = $tmp_0[2] * $inv_det;
    $val[6] = $tmp_0[6] * $inv_det;
    $val[10] = $tmp_0[10] * $inv_det;
    $val[14] = $tmp_0[14] * $inv_det;
    $val[3] = $tmp_0[3] * $inv_det;
    $val[7] = $tmp_0[7] * $inv_det;
    $val[11] = $tmp_0[11] * $inv_det;
    $val[15] = $tmp_0[15] * $inv_det;
    return 1;
},
cbgm_Matrix4_mul = ($mata, $matb) => {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_matrix4_mul($mata, $matb);
},
cbgm_Matrix4__clinit_ = () => {
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4_quat = cbgm_Quaternion__init_();
    cbgm_Matrix4_quat2 = cbgm_Quaternion__init_();
    cbgm_Matrix4_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpUp = cbgm_Vector3__init_();
},
cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum),
cbgg_Mesh$VertexDataType_VertexArray = null,
cbgg_Mesh$VertexDataType_VertexBufferObject = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null,
cbgg_Mesh$VertexDataType_$VALUES = null,
cbgg_Mesh$VertexDataType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(595), 0);
    cbgg_Mesh$VertexDataType_VertexArray = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(596), 1);
    cbgg_Mesh$VertexDataType_VertexBufferObject = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(597), 2);
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(598), 3);
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = var$1;
    var$2 = $rt_createArray(cbgg_Mesh$VertexDataType, 4);
    var$3 = var$2.data;
    var$3[0] = cbgg_Mesh$VertexDataType_VertexArray;
    var$3[1] = cbgg_Mesh$VertexDataType_VertexBufferObject;
    var$3[2] = cbgg_Mesh$VertexDataType_VertexBufferObjectSubData;
    var$3[3] = var$1;
    cbgg_Mesh$VertexDataType_$VALUES = var$2;
};
function otjde_Registration() {
    let a = this; jl_Object.call(a);
    a.$target0 = null;
    a.$type8 = null;
    a.$listener = null;
    a.$useCapture = null;
}
function cbgm_Frustum() {
    let a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
let cbgm_Frustum_clipSpacePlanePoints = null,
cbgm_Frustum_clipSpacePlanePointsArray = null,
cbgm_Frustum_tmpV = null,
cbgm_Frustum_$callClinit = () => {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
},
cbgm_Frustum_update = ($this, $inverseProjectionView) => {
    let var$2, var$3, var$4, $j, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $i, $v, var$17, var$18;
    cbgm_Frustum_$callClinit();
    var$2 = cbgm_Frustum_clipSpacePlanePointsArray;
    var$3 = var$2.data;
    jl_System_fastArraycopy(var$2, 0, $this.$planePointsArray, 0, var$3.length);
    var$2 = $inverseProjectionView.$val;
    var$4 = $this.$planePointsArray;
    $j = 0;
    cbgm_Matrix4_$callClinit();
    var$6 = 0;
    while (var$6 < 8) {
        var$3 = var$4.data;
        var$7 = var$2.data;
        var$8 = $j + 0 | 0;
        var$9 = var$3[var$8] * var$7[3];
        var$10 = $j + 1 | 0;
        var$9 = var$9 + var$3[var$10] * var$7[7];
        var$11 = $j + 2 | 0;
        var$12 = 1.0 / (var$9 + var$3[var$11] * var$7[11] + var$7[15]);
        var$13 = (var$3[var$8] * var$7[0] + var$3[var$10] * var$7[4] + var$3[var$11] * var$7[8] + var$7[12]) * var$12;
        var$14 = (var$3[var$8] * var$7[1] + var$3[var$10] * var$7[5] + var$3[var$11] * var$7[9] + var$7[13]) * var$12;
        var$9 = (var$3[var$8] * var$7[2] + var$3[var$10] * var$7[6] + var$3[var$11] * var$7[10] + var$7[14]) * var$12;
        var$3[var$8] = var$13;
        var$3[var$10] = var$14;
        var$3[var$11] = var$9;
        $j = $j + 3 | 0;
        var$6 = var$6 + 1 | 0;
    }
    $i = 0;
    $j = 0;
    while ($i < 8) {
        var$3 = var$4.data;
        $v = $this.$planePoints.data[$i];
        var$17 = $j + 1 | 0;
        $v.$x0 = var$3[$j];
        var$18 = var$17 + 1 | 0;
        $v.$y0 = var$3[var$17];
        $j = var$18 + 1 | 0;
        $v.$z = var$3[var$18];
        $i = $i + 1 | 0;
    }
    $inverseProjectionView = $this.$planes.data[0];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[1], var$2[0], var$2[2]);
    $inverseProjectionView = $this.$planes.data[1];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[4], var$2[5], var$2[7]);
    $inverseProjectionView = $this.$planes.data[2];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[0], var$2[4], var$2[3]);
    $inverseProjectionView = $this.$planes.data[3];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[5], var$2[1], var$2[6]);
    $inverseProjectionView = $this.$planes.data[4];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[2], var$2[3], var$2[6]);
    $inverseProjectionView = $this.$planes.data[5];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[4], var$2[0], var$2[1]);
},
cbgm_Frustum__clinit_ = () => {
    let var$1, var$2, var$3, $j, var$5, var$6, $v, var$8, var$9;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    var$2[0] = cbgm_Vector3__init_0((-1.0), (-1.0), (-1.0));
    var$2[1] = cbgm_Vector3__init_0(1.0, (-1.0), (-1.0));
    var$2[2] = cbgm_Vector3__init_0(1.0, 1.0, (-1.0));
    var$2[3] = cbgm_Vector3__init_0((-1.0), 1.0, (-1.0));
    var$2[4] = cbgm_Vector3__init_0((-1.0), (-1.0), 1.0);
    var$2[5] = cbgm_Vector3__init_0(1.0, (-1.0), 1.0);
    var$2[6] = cbgm_Vector3__init_0(1.0, 1.0, 1.0);
    var$2[7] = cbgm_Vector3__init_0((-1.0), 1.0, 1.0);
    cbgm_Frustum_clipSpacePlanePoints = var$1;
    var$1 = $rt_createFloatArray(24);
    var$3 = var$1.data;
    cbgm_Frustum_clipSpacePlanePointsArray = var$1;
    $j = 0;
    var$5 = var$2.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $v = var$2[var$6];
        var$8 = $j + 1 | 0;
        var$3[$j] = $v.$x0;
        var$9 = var$8 + 1 | 0;
        var$3[var$8] = $v.$y0;
        $j = var$9 + 1 | 0;
        var$3[var$9] = $v.$z;
        var$6 = var$6 + 1 | 0;
    }
    cbgm_Frustum_tmpV = cbgm_Vector3__init_();
};
function cbgmc_Ray() {
    let a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction0 = null;
}
let cbgmc_Ray_tmp = null,
cbgmc_Ray_$callClinit = () => {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
},
cbgmc_Ray__clinit_ = () => {
    cbgmc_Ray_tmp = cbgm_Vector3__init_();
},
dcgbmf_Gesture = $rt_classWithoutFields(0);
function dcgbmc_DraggableComponent() {
    let a = this; dcgbmc_DrawableComponent.call(a);
    a.$dragging = 0;
    a.$grabOffset = null;
    a.$dragStartX = 0.0;
    a.$lastExtraX = 0.0;
    a.$dragStartY = 0.0;
    a.$lastExtraY = 0.0;
}
let dcgbmc_DraggableComponent_DRAG_VISUAL_Y_OFFSET = 0.0,
dcgbmc_DraggableComponent_$callClinit = () => {
    dcgbmc_DraggableComponent_$callClinit = $rt_eraseClinit(dcgbmc_DraggableComponent);
    dcgbmc_DraggableComponent__clinit_();
},
dcgbmc_DraggableComponent_onDrag = $this => {
    let $mouse, $mouseX, $mouseY, $screenH, var$5, var$6, $logicalY, $logicalX, var$9, var$10, var$11, $worldMouseY, $newX, $newY, $extraX, $extraY, var$17;
    $mouse = $rt_createIntArray(2).data;
    $mouse[0] = cgxgbt_TeaInput_getX(cbg_Gdx_input);
    $mouse[1] = cgxgbt_TeaInput_getY(cbg_Gdx_input);
    $mouseX = $mouse[0];
    $mouseY = $mouse[1];
    $screenH = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
    if (!$this.$dragging) {
        var$5 = $this;
        var$6 = var$5.$renderOffset;
        $logicalY = var$6.$x2;
        $logicalX = var$6.$y2;
        var$5 = var$5.$size5;
        var$5 = cbgm_Vector4__init_($logicalY, $logicalX, $logicalY + var$5.$width0, $logicalX + var$5.$height1);
        var$9 = jl_Math_round(var$5.$x6);
        var$10 = jl_Math_round(var$5.$z0);
        var$11 = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
        $mouse = $rt_createIntArrayFromData([var$9, var$11 - jl_Math_round(var$5.$w) | 0, var$10, var$11 - jl_Math_round(var$5.$y6) | 0]);
        if (cbg_Gdx_input.$justTouched && dcgbu_InputUtil_touchInRange($mouse) ? 1 : 0) {
            $this.$dragging = 1;
            $worldMouseY = $screenH - $mouseY | 0;
            var$5 = $this.$grabOffset;
            $logicalY = $mouseX;
            var$6 = $this.$renderOffset;
            cbgm_Vector2_set(var$5, $logicalY - var$6.$x2, $worldMouseY - var$6.$y2);
            var$5 = $this.$renderOffset;
            $this.$dragStartX = var$5.$x2;
            $this.$lastExtraX = 0.0;
            $this.$dragStartY = var$5.$y2;
            $this.$lastExtraY = 0.0;
        }
    }
    if ($this.$dragging && dcgbu_InputUtil_isTouched()) {
        $worldMouseY = $screenH - $mouseY | 0;
        $logicalY = $mouseX;
        var$5 = $this.$grabOffset;
        $newX = $logicalY - var$5.$x2;
        $newY = $worldMouseY - var$5.$y2;
        $extraX = cbgm_MathUtils_clamp(($newX - $this.$dragStartX) * 0.5, (-200.0), 200.0);
        $this.$lastExtraX = $extraX;
        $extraY = cbgm_MathUtils_clamp(($newY - $this.$dragStartY) * 0.5, (-150.0), 150.0);
        $this.$lastExtraY = $extraY;
        var$5 = $this.$renderOffset;
        $logicalX = $newX + $extraX;
        dcgbmc_DraggableComponent_$callClinit();
        cbgm_Vector2_set(var$5, $logicalX, $newY + dcgbmc_DraggableComponent_DRAG_VISUAL_Y_OFFSET + $extraY);
    }
    if ($this.$dragging && !dcgbu_InputUtil_isTouched()) {
        $this.$dragging = 0;
        var$5 = $this.$renderOffset;
        $logicalY = var$5.$y2;
        dcgbmc_DraggableComponent_$callClinit();
        $logicalY = $logicalY - dcgbmc_DraggableComponent_DRAG_VISUAL_Y_OFFSET - $this.$lastExtraY;
        cbgm_Vector2_set(var$5, var$5.$x2 - $this.$lastExtraX, $logicalY);
        var$5 = $this;
        if (!var$5.$placed) {
            var$6 = new cbgm_Vector2;
            var$17 = var$5.$renderOffset;
            cbgm_Vector2__init_0(var$6, var$17.$x2 + var$5.$lastExtraX, var$17.$y2 + dcgbmc_DraggableComponent_DRAG_VISUAL_Y_OFFSET + var$5.$lastExtraY);
            var$6 = dcgccss_StateUtil_getClosestTile(var$6);
            if (var$6 !== null) {
                var$6 = dcgccss_StateUtil_canStickShape(var$5, var$6, 0);
                $mouseX = 0;
                if (var$6 !== null) {
                    ju_ArrayList_forEach(var$6, new dcgccss_StateUtil$onShapeDragStop$lambda$_2_0);
                    $mouseX = var$6.$size3;
                    dcgccso_Score_increase($mouseX, $mouseX);
                    $mouseX = 1;
                }
                if ($mouseX) {
                    dcgccso_Controller_addShapeTimes = dcgccso_Controller_addShapeTimes + 1 | 0;
                    dcgccso_ShapeSelectBar_currentItemCount = dcgccso_ShapeSelectBar_currentItemCount - 1 | 0;
                }
                if (dcgccso_ShapeSelectBar_currentItemCount <= 0) {
                    dcgccss_ItemManager_initShapes();
                    dcgccso_ShapeSelectBar_currentItemCount = 3;
                }
                dcgccss_StateManager_detectRemoveLine();
                $mouseX = 0;
                a: {
                    while (true) {
                        dcgccss_ItemManager_$callClinit();
                        $mouse = dcgccss_ItemManager_shapes.data;
                        if ($mouseX >= $mouse.length) {
                            otcic_JsConsolePrintStream_println(jl_System_err(), $rt_s(599));
                            $mouseX = 0;
                            break a;
                        }
                        var$6 = $mouse[$mouseX];
                        if (var$6 !== null && !var$6.$placed && dcgccss_StateUtil_checkShapeCanPut(var$6))
                            break;
                        $mouseX = $mouseX + 1 | 0;
                    }
                    $mouseX = 1;
                }
                if (!$mouseX) {
                    otcic_JsConsolePrintStream_println(jl_System_out(), $rt_s(600));
                    dcgccso_Controller_isGameOver = 1;
                    dcgccss_StateUtil_resetGame();
                }
                dcgb_SoundsManager_$callClinit();
                var$6 = ju_HashMap_get(dcgb_SoundsManager_sounds, $rt_s(454));
                if (var$6 !== null)
                    var$6.$howl.play();
            }
        }
        var$5.$lastExtraX = 0.0;
        var$5.$lastExtraY = 0.0;
    }
},
dcgbmc_DraggableComponent__clinit_ = () => {
    dcgbmc_DraggableComponent_DRAG_VISUAL_Y_OFFSET = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics) * 0.10000000149011612;
};
function dcgccso_Shape() {
    let a = this; dcgbmc_DraggableComponent.call(a);
    a.$type5 = null;
    a.$selectBarIndex = 0;
    a.$color0 = null;
    a.$noDraggingTexture = null;
    a.$placed = 0;
}
let dcgccso_Shape_unitWidth = 0,
dcgccso_Shape_unitHeight = 0,
dcgccso_Shape_unitWidthNoDragging = 0,
dcgccso_Shape_unitHeightNoDragging = 0,
dcgccso_Shape_$callClinit = () => {
    dcgccso_Shape_$callClinit = $rt_eraseClinit(dcgccso_Shape);
    dcgccso_Shape__clinit_();
},
dcgccso_Shape__clinit_ = () => {
    dcgccso_Tile_$callClinit();
    dcgccso_Shape_unitWidth = dcgccso_Tile_WIDTH;
    dcgccso_Shape_unitHeight = dcgccso_Tile_HEIGHT;
    dcgccso_Shape_unitWidthNoDragging = (dcgbmf_Size_widthScale(0.07500000298023224)).$width0;
    dcgccso_Shape_unitHeightNoDragging = (dcgbmf_Size_widthScale(0.07500000298023224)).$width0;
},
dcgbmca_Animation = $rt_classWithoutFields(0);
function dcgbmca_ShockAnimation() {
    let a = this; dcgbmc_GameComponent.call(a);
    a.$duration = 0.0;
    a.$amplitude = 0.0;
    a.$frequency = 0.0;
    a.$elapsed = 0.0;
    a.$playing = 0;
    a.$originX = 0.0;
    a.$originY = 0.0;
    a.$rotationAmplitude = 0.0;
}
let dcgbmca_ShockAnimation_update = $this => {
    let var$1, $delta, $angle, $progress, var$5, $envelope, $offsetX, $offsetY, var$9, var$10, var$11;
    if ($this.$playing) {
        dcgbm_Camera2D_$callClinit();
        var$1 = dcgbm_Camera2D_camera;
        if (var$1 !== null) {
            $delta = cbg_Gdx_graphics.$deltaTime;
            $angle = $this.$elapsed + $delta;
            $this.$elapsed = $angle;
            $progress = $this.$duration;
            if ($angle >= $progress) {
                $this.$playing = 0;
                $this.$elapsed = 0.0;
                var$5 = var$1.$position1;
                var$5.$x0 = $this.$originX;
                var$5.$y0 = $this.$originY;
                cbgm_Vector3_set(var$1.$up, 0.0, 1.0, 0.0);
                cbgg_OrthographicCamera_update(dcgbm_Camera2D_camera);
                return;
            }
            $envelope = 1.0 - $angle / $progress;
            $progress = $envelope * $envelope;
            $angle = $angle * $this.$frequency * 6.2831854820251465;
            $offsetX = cbgm_MathUtils_sin($angle) * $this.$amplitude * $progress;
            $offsetY = cbgm_MathUtils_sin($angle * 1.5);
            $envelope = $this.$amplitude;
            $offsetY = $offsetY * $envelope * 0.11999999731779099 * $progress;
            var$1 = cbgm_MathUtils_random;
            var$9 = var$1.$seed0;
            var$10 = var$1.$seed1;
            var$1.$seed0 = var$10;
            var$11 = Long_xor(var$9, Long_shl(var$9, 23));
            var$11 = Long_xor(Long_xor(Long_xor(var$11, var$10), Long_shru(var$11, 17)), Long_shru(var$10, 26));
            var$1.$seed1 = var$11;
            $progress = $offsetX + ((-0.05999999865889549) + Long_toNumber(Long_shru(Long_add(var$11, var$10), 40)) * 5.9604644775390625E-8 * 0.11999999731779099) * $envelope * $progress;
            var$1 = dcgbm_Camera2D_camera.$position1;
            var$1.$x0 = $this.$originX + $progress;
            var$1.$y0 = $this.$originY + $offsetY;
            if ($this.$rotationAmplitude !== 0.0)
                cbgm_MathUtils_sin($angle);
            cbgg_OrthographicCamera_update(dcgbm_Camera2D_camera);
            return;
        }
    }
},
dcgbu_TypeUtil$1 = $rt_classWithoutFields(),
dcgbu_TypeUtil$1_$SwitchMap$dev$cas$game$base$mod$format$RenderFormat = null,
dcgbu_TypeUtil$1_$callClinit = () => {
    dcgbu_TypeUtil$1_$callClinit = $rt_eraseClinit(dcgbu_TypeUtil$1);
    dcgbu_TypeUtil$1__clinit_();
},
dcgbu_TypeUtil$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((dcgbmf_RenderFormat_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    dcgbu_TypeUtil$1_$SwitchMap$dev$cas$game$base$mod$format$RenderFormat = var$1;
    var$2[dcgbmf_RenderFormat_RGBA_8.$ordinal0] = 1;
    var$2[dcgbmf_RenderFormat_RGB_8.$ordinal0] = 2;
    var$2[dcgbmf_RenderFormat_RGB_565.$ordinal0] = 3;
    var$2[dcgbmf_RenderFormat_RGBA_4.$ordinal0] = 4;
    var$2[dcgbmf_RenderFormat_ALPHA.$ordinal0] = 5;
    var$2[dcgbmf_RenderFormat_INTENSITY.$ordinal0] = 6;
    var$2[dcgbmf_RenderFormat_NONE.$ordinal0] = 7;
};
function cbggg_FileTextureData() {
    let a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width4 = 0;
    a.$height6 = 0;
    a.$format = null;
    a.$pixmap0 = null;
    a.$useMipMaps1 = 0;
    a.$isPrepared0 = 0;
}
let cbggg_FileTextureData_copyToPOT = 0,
cbggg_FileTextureData_isPrepared = $this => {
    return $this.$isPrepared0;
},
cbggg_FileTextureData_prepare = $this => {
    let var$1;
    if ($this.$isPrepared0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$1, $rt_s(601));
        $rt_throw(var$1);
    }
    if ($this.$pixmap0 === null) {
        var$1 = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_0($this.$file0));
        $this.$pixmap0 = var$1;
        $this.$width4 = cbgg_Pixmap_getWidth(var$1);
        $this.$height6 = cbgg_Pixmap_getHeight($this.$pixmap0);
        if ($this.$format === null)
            $this.$format = cbgg_Pixmap_getFormat($this.$pixmap0);
    }
    $this.$isPrepared0 = 1;
},
cbggg_FileTextureData_ensurePot = ($this, $pixmap) => {
    let $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $pixmapWidth = cbgg_Pixmap_getWidth($pixmap);
            $pixmapHeight = cbgg_Pixmap_getHeight($pixmap);
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = cbgg_Pixmap__init_($potWidth, $potHeight, cbgg_Pixmap_getFormat($pixmap));
    cbgg_Pixmap_drawPixmap1($tmp_0, $pixmap, 0, 0, 0, 0, $pixmapWidth, $pixmapHeight);
    cbgg_Pixmap_dispose($pixmap);
    return $tmp_0;
},
cbggg_FileTextureData_consumePixmap = $this => {
    let var$1, $pixmap;
    if (!$this.$isPrepared0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$1, $rt_s(602));
        $rt_throw(var$1);
    }
    $this.$isPrepared0 = 0;
    $pixmap = $this.$pixmap0;
    $this.$pixmap0 = null;
    return $pixmap;
},
cbggg_FileTextureData_disposePixmap = $this => {
    return 1;
},
cbggg_FileTextureData_getWidth = $this => {
    return $this.$width4;
},
cbggg_FileTextureData_getHeight = $this => {
    return $this.$height6;
},
cbggg_FileTextureData_getFormat = $this => {
    return $this.$format;
},
cbggg_FileTextureData_useMipMaps = $this => {
    return $this.$useMipMaps1;
},
cbggg_FileTextureData_isManaged = $this => {
    return 1;
},
cbggg_FileTextureData_getType = $this => {
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_FileTextureData_consumeCustomData = ($this, $target) => {
    let var$2;
    var$2 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$2, $rt_s(581));
    $rt_throw(var$2);
};
function cbggg_Gdx2DPixmapNative() {
    let a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width6 = 0;
    a.$height7 = 0;
    a.$format0 = 0;
    a.$heapStartIndex = 0;
    a.$heapEndIndex = 0;
    a.$nativeData = null;
    a.$buffer4 = null;
}
let cbggg_Gdx2DPixmapNative__init_ = ($this, $width, $height, $format) => {
    $this.$nativeData = cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27($width, $height, $format);
    cbggg_Gdx2DPixmapNative_updateNativeData($this);
},
cbggg_Gdx2DPixmapNative__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_Gdx2DPixmapNative();
    cbggg_Gdx2DPixmapNative__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_Gdx2DPixmapNative_updateNativeData = $this => {
    $this.$basePtr = $this.$nativeData[0];
    $this.$width6 = $this.$nativeData[1];
    $this.$height7 = $this.$nativeData[2];
    $this.$format0 = $this.$nativeData[3];
    $this.$heapStartIndex = $this.$nativeData[4];
    $this.$heapEndIndex = $this.$nativeData[5];
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_copyHeapToBuffer = $this => {
    let $heapData;
    $heapData = cbggg_Gdx2DPixmapNative_getHeapData($this, 0);
    if ($this.$buffer4 === null)
        $this.$buffer4 = jn_ByteBuffer_allocateDirect($heapData.length);
    (jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($this.$buffer4))).set($heapData);
},
cbggg_Gdx2DPixmapNative_dispose = $this => {
    let var$1, var$2;
    Gdx.Gdx.prototype.g2d_free($this.$basePtr);
    var$1 = $this.$buffer4;
    if (var$1 !== null) {
        if (!var$1.$direct) {
            var$2 = new jl_IllegalArgumentException;
            jl_RuntimeException__init_(var$2, $rt_s(603));
            $rt_throw(var$2);
        }
        if ($rt_isInstance(var$1, jn_NativeBuffer))
            var$1.$release();
        $this.$buffer4 = null;
    }
    $this.$nativeData = null;
},
cbggg_Gdx2DPixmapNative_drawPixmap = ($this, $basePtr, $srcX, $srcY, $dstX, $dstY, $width, $height) => {
    let var$8;
    var$8 = $this.$basePtr;
    Gdx.Gdx.prototype.g2d_draw_pixmap($basePtr, var$8, $srcX, $srcY, $width, $height, $dstX, $dstY, $width, $height);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_setBlend = ($this, $blend) => {
    Gdx.Gdx.prototype.g2d_set_blend($this.$basePtr, $blend);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_getHeapData = ($this, $shouldCopy) => {
    let var$2;
    var$2 = $this.$heapStartIndex;
    if (!var$2 && !$this.$heapEndIndex)
        return null;
    return cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25(!!$shouldCopy, var$2, $this.$heapEndIndex);
},
cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25 = (var$1, var$2, var$3) => {
    var heapArray = Gdx.HEAP8.subarray(var$2, var$3);
    if (var$1) {
        var newArray = new Int8Array(heapArray);
        return newArray;
    }
    return heapArray;
},
cbggg_Gdx2DPixmapNative_loadNative$js_body$_26 = (var$1, var$2, var$3) => {
    var cBufferSize = var$1.length * Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = Gdx._malloc(cBufferSize);
    Gdx.writeArrayToMemory(var$1, cBuffer);
    var pixmap = Gdx.Gdx.prototype.g2d_load(cBuffer, var$2, var$3);
    Gdx._free(cBuffer);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = width;
    nativeData[2] = height;
    nativeData[3] = format;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27 = (var$1, var$2, var$3) => {
    var pixmap = Gdx.Gdx.prototype.g2d_new(var$1, var$2, var$3);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var var$3 = pixmap.get_format();
    var var$1 = pixmap.get_width();
    var var$2 = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$3);
    var bytesSize = var$1 * var$2 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = var$1;
    nativeData[2] = var$2;
    nativeData[3] = var$3;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
};
function cbgu_FlushablePool() {
    cbgu_Pool.call(this);
    this.$obtained = null;
}
let cbggg_ModelBatch$RenderablePool = $rt_classWithoutFields(cbgu_FlushablePool),
cbgggu_RenderableSorter = $rt_classWithoutFields(0);
function cbgggu_DefaultRenderableSorter() {
    let a = this; jl_Object.call(a);
    a.$camera0 = null;
    a.$tmpV1 = null;
    a.$tmpV2 = null;
}
let cbgggu_DefaultRenderableSorter_getTranslation = ($this, var$1, var$2, var$3) => {
    let var$4, var$5, var$6, var$7, var$8;
    if (var$2.$isZero())
        var$1.$getTranslation(var$3);
    else if (!var$1.$hasRotationOrScaling())
        (var$1.$getTranslation(var$3)).$add8(var$2);
    else {
        var$2 = cbgm_Vector3_set0(var$3, var$2);
        var$4 = var$1.$val.data;
        var$5 = var$2.$x0;
        var$6 = var$5 * var$4[0];
        var$7 = var$2.$y0;
        var$8 = var$6 + var$7 * var$4[4];
        var$6 = var$2.$z;
        cbgm_Vector3_set(var$2, var$8 + var$6 * var$4[8] + var$4[12], var$5 * var$4[1] + var$7 * var$4[5] + var$6 * var$4[9] + var$4[13], var$5 * var$4[2] + var$7 * var$4[6] + var$6 * var$4[10] + var$4[14]);
    }
    return var$3;
},
cbgggu_DefaultRenderableSorter_compare = ($this, var$1, var$2) => {
    let var$3, var$4, var$5;
    var$1 = var$1;
    var$2 = var$2;
    var$3 = var$1.$material;
    cbggga_BlendingAttribute_$callClinit();
    var$4 = cbggg_Attributes_has(var$3, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get(var$1.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0;
    if (var$4 != (cbggg_Attributes_has(var$2.$material, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get(var$2.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0))
        var$5 = !var$4 ? (-1) : 1;
    else {
        cbgggu_DefaultRenderableSorter_getTranslation($this, var$1.$worldTransform, var$1.$meshPart.$center, $this.$tmpV1);
        cbgggu_DefaultRenderableSorter_getTranslation($this, var$2.$worldTransform, var$2.$meshPart.$center, $this.$tmpV2);
        var$5 = $rt_compare((1000.0 * cbgm_Vector3_dst2($this.$camera0.$position1, $this.$tmpV1) | 0) - (1000.0 * cbgm_Vector3_dst2($this.$camera0.$position1, $this.$tmpV2) | 0) | 0, 0.0);
        var$5 = var$5 < 0 ? (-1) : var$5 <= 0 ? 0 : 1;
        if (var$4)
            var$5 =  -var$5 | 0;
    }
    return var$5;
};
function cbgggu_RenderContext() {
    let a = this; jl_Object.call(a);
    a.$textureBinder = null;
    a.$blending0 = 0;
    a.$depthFunc = 0;
    a.$depthMask = 0;
    a.$cullFace = 0;
}
let cbgggu_RenderContext_end = $this => {
    if ($this.$depthFunc)
        cbg_Gdx_gl.$glDisable(2929);
    if (!$this.$depthMask)
        cbg_Gdx_gl.$glDepthMask(1);
    if ($this.$blending0)
        cbg_Gdx_gl.$glDisable(3042);
    if ($this.$cullFace > 0)
        cbg_Gdx_gl.$glDisable(2884);
    cbg_Gdx_gl.$glActiveTexture(33984);
},
cbgggu_TextureBinder = $rt_classWithoutFields(0);
function cbgggu_DefaultTextureBinder() {
    let a = this; jl_Object.call(a);
    a.$offset0 = 0;
    a.$count2 = 0;
    a.$textures0 = null;
    a.$unitsLRU = null;
    a.$method = 0;
    a.$reuseCount = 0;
    a.$bindCount = 0;
    a.$tempDesc = null;
    a.$currentTexture = 0;
}
let cbgggu_ShaderProvider = $rt_classWithoutFields(0);
function cbgggu_BaseShaderProvider() {
    jl_Object.call(this);
    this.$shaders0 = null;
}
function cbgggu_DefaultShaderProvider() {
    cbgggu_BaseShaderProvider.call(this);
    this.$config0 = null;
}
function cbgg_Mesh() {
    let a = this; jl_Object.call(a);
    a.$vertices = null;
    a.$indices = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
let cbgg_Mesh_meshes = null,
cbgg_Mesh_$callClinit = () => {
    cbgg_Mesh_$callClinit = $rt_eraseClinit(cbgg_Mesh);
    cbgg_Mesh__clinit_();
},
cbgg_Mesh_getIndexData = $this => {
    return $this.$indices;
},
cbgg_Mesh_addManagedMesh = ($app, $mesh) => {
    let $managedResources;
    cbgg_Mesh_$callClinit();
    $managedResources = ju_HashMap_get(cbgg_Mesh_meshes, $app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    cbgu_Array_add($managedResources, $mesh);
    ju_HashMap_put(cbgg_Mesh_meshes, $app, $managedResources);
},
cbgg_Mesh__clinit_ = () => {
    cbgg_Mesh_meshes = ju_HashMap__init_();
};
function cbgm_Plane() {
    let a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
let cbgm_Plane_set = ($this, $point1, $point2, $point3) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$4 = cbgm_Vector3_set0($this.$normal, $point1);
    var$5 = $point2.$x0;
    var$6 = $point2.$y0;
    var$7 = $point2.$z;
    var$4 = cbgm_Vector3_set(var$4, var$4.$x0 - var$5, var$4.$y0 - var$6, var$4.$z - var$7);
    var$6 = $point2.$x0 - $point3.$x0;
    var$7 = $point2.$y0 - $point3.$y0;
    var$8 = $point2.$z - $point3.$z;
    var$5 = var$4.$y0;
    var$9 = var$5 * var$8;
    var$10 = var$4.$z;
    var$9 = var$9 - var$10 * var$7;
    var$10 = var$10 * var$6;
    var$11 = var$4.$x0;
    cbgm_Vector3_nor(cbgm_Vector3_set(var$4, var$9, var$10 - var$11 * var$8, var$11 * var$7 - var$5 * var$6));
    $point2 = $this.$normal;
    $this.$d =  -($point1.$x0 * $point2.$x0 + $point1.$y0 * $point2.$y0 + $point1.$z * $point2.$z);
},
cbgf_FileHandle = $rt_classWithoutFields(),
cbgf_FileHandle_readBytes = $this => {
    let $input, var$2, $ex, var$4, $$je;
    $input = cgxgbt_TeaFileHandle_read($this);
    a: {
        b: {
            try {
                var$2 = cbgu_StreamUtils_copyStreamToByteArray($input, cbgf_FileHandle_estimateLength($this));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    var$4 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($input);
            return var$2;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_3(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(548)), $this)), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$4 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($input);
    $rt_throw(var$4);
},
cbgf_FileHandle_estimateLength = $this => {
    let $length;
    $length = Long_lo((cgxgbt_TeaFileHandle_length($this)));
    if (!$length)
        $length = 512;
    return $length;
};
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
let cbgg_Texture$TextureFilter_Nearest = null,
cbgg_Texture$TextureFilter_Linear = null,
cbgg_Texture$TextureFilter_MipMap = null,
cbgg_Texture$TextureFilter_MipMapNearestNearest = null,
cbgg_Texture$TextureFilter_MipMapLinearNearest = null,
cbgg_Texture$TextureFilter_MipMapNearestLinear = null,
cbgg_Texture$TextureFilter_MipMapLinearLinear = null,
cbgg_Texture$TextureFilter_$VALUES = null,
cbgg_Texture$TextureFilter__init_0 = ($this, var$1, var$2, $glEnum) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum = $glEnum;
},
cbgg_Texture$TextureFilter__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureFilter();
    cbgg_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureFilter__clinit_ = () => {
    let var$1, var$2, var$3;
    cbgg_Texture$TextureFilter_Nearest = cbgg_Texture$TextureFilter__init_($rt_s(604), 0, 9728);
    cbgg_Texture$TextureFilter_Linear = cbgg_Texture$TextureFilter__init_($rt_s(605), 1, 9729);
    cbgg_Texture$TextureFilter_MipMap = cbgg_Texture$TextureFilter__init_($rt_s(606), 2, 9987);
    cbgg_Texture$TextureFilter_MipMapNearestNearest = cbgg_Texture$TextureFilter__init_($rt_s(607), 3, 9984);
    cbgg_Texture$TextureFilter_MipMapLinearNearest = cbgg_Texture$TextureFilter__init_($rt_s(608), 4, 9985);
    cbgg_Texture$TextureFilter_MipMapNearestLinear = cbgg_Texture$TextureFilter__init_($rt_s(609), 5, 9986);
    var$1 = cbgg_Texture$TextureFilter__init_($rt_s(610), 6, 9987);
    cbgg_Texture$TextureFilter_MipMapLinearLinear = var$1;
    var$2 = $rt_createArray(cbgg_Texture$TextureFilter, 7);
    var$3 = var$2.data;
    var$3[0] = cbgg_Texture$TextureFilter_Nearest;
    var$3[1] = cbgg_Texture$TextureFilter_Linear;
    var$3[2] = cbgg_Texture$TextureFilter_MipMap;
    var$3[3] = cbgg_Texture$TextureFilter_MipMapNearestNearest;
    var$3[4] = cbgg_Texture$TextureFilter_MipMapLinearNearest;
    var$3[5] = cbgg_Texture$TextureFilter_MipMapNearestLinear;
    var$3[6] = var$1;
    cbgg_Texture$TextureFilter_$VALUES = var$2;
};
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
let cbgg_Texture$TextureWrap_MirroredRepeat = null,
cbgg_Texture$TextureWrap_ClampToEdge = null,
cbgg_Texture$TextureWrap_Repeat = null,
cbgg_Texture$TextureWrap_$VALUES = null,
cbgg_Texture$TextureWrap__init_0 = ($this, var$1, var$2, $glEnum) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum0 = $glEnum;
},
cbgg_Texture$TextureWrap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureWrap();
    cbgg_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureWrap__clinit_ = () => {
    let var$1, var$2, var$3;
    cbgg_Texture$TextureWrap_MirroredRepeat = cbgg_Texture$TextureWrap__init_($rt_s(611), 0, 33648);
    cbgg_Texture$TextureWrap_ClampToEdge = cbgg_Texture$TextureWrap__init_($rt_s(612), 1, 33071);
    var$1 = cbgg_Texture$TextureWrap__init_($rt_s(613), 2, 10497);
    cbgg_Texture$TextureWrap_Repeat = var$1;
    var$2 = $rt_createArray(cbgg_Texture$TextureWrap, 3);
    var$3 = var$2.data;
    var$3[0] = cbgg_Texture$TextureWrap_MirroredRepeat;
    var$3[1] = cbgg_Texture$TextureWrap_ClampToEdge;
    var$3[2] = var$1;
    cbgg_Texture$TextureWrap_$VALUES = var$2;
};
function cbgggf_FreeTypeFontGenerator() {
    let a = this; jl_Object.call(a);
    a.$library = null;
    a.$face = null;
    a.$name2 = null;
    a.$bitmapped = 0;
    a.$pixelWidth = 0;
    a.$pixelHeight = 0;
}
let cbgggf_FreeTypeFontGenerator_maxTextureSize = 0,
cbgggf_FreeTypeFontGenerator_getLoadingFlags = ($this, $parameter) => {
    let $loadingFlags;
    a: {
        $loadingFlags = cbgggf_FreeType_FT_LOAD_DEFAULT;
        cbgggf_FreeTypeFontGenerator$1_$callClinit();
        switch (cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting.data[$parameter.$hinting.$ordinal0]) {
            case 1:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_NO_HINTING;
                break a;
            case 2:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_LIGHT;
                break a;
            case 3:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_NORMAL;
                break a;
            case 4:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_TARGET_MONO;
                break a;
            case 5:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_LIGHT;
                break a;
            case 6:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_NORMAL;
                break a;
            case 7:
                $loadingFlags = $loadingFlags | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT | cbgggf_FreeType_FT_LOAD_TARGET_MONO;
                break a;
            default:
        }
    }
    return $loadingFlags;
},
cbgggf_FreeTypeFontGenerator_loadChar0 = ($this, $c) => {
    return cbgggf_FreeTypeFontGenerator_loadChar($this, $c, cbgggf_FreeType_FT_LOAD_DEFAULT | cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT);
},
cbgggf_FreeTypeFontGenerator_loadChar = ($this, $c, $flags) => {
    return !!Module._c_Face_loadChar($this.$face.$address, $c, $flags) ? 1 : 0;
},
cbgggf_FreeTypeFontGenerator_generateFont = ($this, $parameter) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    var$2 = new cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData;
    cbggg_BitmapFont$BitmapFontData__init_(var$2);
    var$3 = var$2.$regions0 === null && $parameter.$packer !== null ? 1 : 0;
    if (var$3)
        var$2.$regions0 = cbgu_Array__init_();
    cbgggf_FreeTypeFontGenerator_generateData($this, $parameter, var$2);
    if (var$3)
        $parameter.$packer.$updateTextureRegions(var$2.$regions0, $parameter.$minFilter0, $parameter.$magFilter, $parameter.$genMipMaps);
    var$4 = var$2.$regions0;
    var$5 = var$4.$size0;
    if (var$5 ? 0 : 1) {
        $parameter = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($parameter, $rt_s(614));
        $rt_throw($parameter);
    }
    var$6 = new cbggg_BitmapFont;
    var$6.$flipped0 = var$2.$flipped;
    var$6.$data14 = var$2;
    var$6.$integer0 = 1;
    if (var$5) {
        var$6.$regions = var$4;
        var$6.$ownsTexture = 0;
    } else {
        var$7 = var$2.$imagePaths;
        if (var$7 === null) {
            $parameter = new jl_IllegalArgumentException;
            jl_RuntimeException__init_($parameter, $rt_s(615));
            $rt_throw($parameter);
        }
        var$8 = var$7.data.length;
        var$6.$regions = cbgu_Array__init_0(var$8);
        var$5 = 0;
        while (var$5 < var$8) {
            var$9 = var$2.$fontFile;
            if (var$9 !== null) {
                var$10 = cbg_Gdx_files;
                var$4 = var$2.$imagePaths.data[var$5];
                var$9 = var$9.$type();
                var$4 = cgxgbt_TeaFiles_getFileHandle(var$10, var$4, var$9);
            } else {
                var$4 = cbg_Gdx_files;
                var$9 = var$2.$imagePaths.data[var$5];
                var$4 = cgxgbt_TeaFiles_internal(var$4, var$9);
            }
            var$9 = var$6.$regions;
            var$10 = new cbggg_TextureRegion;
            var$11 = new cbgg_Texture;
            cbgg_Texture_$callClinit();
            cbgg_Texture__init_1(var$11, var$4, null, 0);
            cbggg_TextureRegion__init_(var$10, var$11);
            cbgu_Array_add(var$9, var$10);
            var$5 = var$5 + 1 | 0;
        }
        var$6.$ownsTexture = 1;
    }
    var$4 = new cbggg_BitmapFontCache;
    var$3 = var$6.$integer0;
    var$4.$layouts = cbgu_Array__init_0(1);
    var$4.$pooledLayouts = cbgu_Array__init_0(0);
    var$4.$color1 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    var$4.$font0 = var$6;
    var$4.$integer = var$3;
    var$3 = var$6.$regions.$size0;
    if (!var$3) {
        $parameter = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($parameter, $rt_s(616));
        $rt_throw($parameter);
    }
    a: {
        var$4.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls), var$3);
        var$4.$idx0 = $rt_createIntArray(var$3);
        if (var$3 > 1) {
            var$7 = $rt_createArray(cbgu_IntArray, var$3);
            var$12 = var$7.data;
            var$4.$pageGlyphIndices = var$7;
            var$8 = 0;
            var$5 = var$12.length;
            while (true) {
                if (var$8 >= var$5)
                    break a;
                var$4.$pageGlyphIndices.data[var$8] = cbgu_IntArray__init_1();
                var$8 = var$8 + 1 | 0;
            }
        }
    }
    var$4.$tempGlyphCount = $rt_createIntArray(var$3);
    var$6.$cache = var$4;
    var$7 = var$2.$glyphs1.data;
    var$3 = var$7.length;
    var$8 = 0;
    while (var$8 < var$3) {
        b: {
            var$12 = var$7[var$8];
            if (var$12 !== null) {
                var$12 = var$12.data;
                var$5 = var$12.length;
                var$13 = 0;
                while (true) {
                    if (var$13 >= var$5)
                        break b;
                    var$4 = var$12[var$13];
                    if (var$4 !== null)
                        cbggg_BitmapFont$BitmapFontData_setGlyphRegion(var$2, var$4, cbgu_Array_get(var$6.$regions, var$4.$page));
                    var$13 = var$13 + 1 | 0;
                }
            }
        }
        var$8 = var$8 + 1 | 0;
    }
    var$4 = var$2.$missingGlyph;
    if (var$4 !== null)
        cbggg_BitmapFont$BitmapFontData_setGlyphRegion(var$2, var$4, cbgu_Array_get(var$6.$regions, var$4.$page));
    var$6.$ownsTexture = $parameter.$packer !== null ? 0 : 1;
    return var$6;
},
cbgggf_FreeTypeFontGenerator_setPixelSizes = ($this, $pixelWidth, $pixelHeight) => {
    let var$3;
    $this.$pixelWidth = $pixelWidth;
    $this.$pixelHeight = $pixelHeight;
    if (!$this.$bitmapped && !(!!Module._c_Face_setPixelSizes($this.$face.$address, $pixelWidth, $pixelHeight) ? 1 : 0)) {
        var$3 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$3, $rt_s(617));
        $rt_throw(var$3);
    }
},
cbgggf_FreeTypeFontGenerator_generateData = ($this, $parameter, $data) => {
    let $characters, $charactersLength, $incremental, $flags, $fontMetrics, var$8, $baseLine, $c, var$11, $heights, $ownsAtlas, $kerning, var$15, $packer, $size, $packStrategy, $maxGlyphHeight, $stroker, $best, $i, $missingGlyph, $heightsCount, $maxHeight, $height, $glyph, $tmpChar, $firstChar, $first, $firstIndex, $ii, $secondChar, $second, $secondIndex, $spaceGlyph;
    a: {
        $data.$name5 = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $this.$name2), $rt_s(618)), $parameter.$size9));
        $characters = (jl_String_toCharArray($parameter.$characters0)).data;
        $charactersLength = $characters.length;
        $incremental = $parameter.$incremental;
        $flags = cbgggf_FreeTypeFontGenerator_getLoadingFlags($this, $parameter);
        cbgggf_FreeTypeFontGenerator_setPixelSizes($this, 0, $parameter.$size9);
        $fontMetrics = cbgggf_FreeType$Size_getMetrics(cbgggf_FreeType$Face_getSize($this.$face));
        $data.$flipped = $parameter.$flip0;
        $data.$ascent = cbgggf_FreeType_toInt(cbgggf_FreeType$SizeMetrics_getAscender($fontMetrics));
        $data.$descent = cbgggf_FreeType_toInt(cbgggf_FreeType$SizeMetrics_getDescender($fontMetrics));
        var$8 = cbgggf_FreeType_toInt(cbgggf_FreeType$SizeMetrics_getHeight($fontMetrics));
        $data.$lineHeight = var$8;
        $baseLine = $data.$ascent;
        if ($this.$bitmapped && var$8 === 0.0) {
            $c = 32;
            while (true) {
                if ($c >= (32 + cbgggf_FreeType$Face_getNumGlyphs($this.$face) | 0))
                    break a;
                if (cbgggf_FreeTypeFontGenerator_loadChar($this, $c, $flags)) {
                    var$11 = cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHeight(cbgggf_FreeType$GlyphSlot_getMetrics(cbgggf_FreeType$Face_getGlyph($this.$face))));
                    var$8 = $data.$lineHeight;
                    if (var$11 > var$8)
                        var$8 = var$11;
                    $data.$lineHeight = var$8;
                }
                $c = $c + 1 | 0;
            }
        }
    }
    $data.$lineHeight = $data.$lineHeight + $parameter.$spaceY;
    if (!cbgggf_FreeTypeFontGenerator_loadChar($this, 32, $flags) && !cbgggf_FreeTypeFontGenerator_loadChar($this, 108, $flags))
        $data.$spaceXadvance = cbgggf_FreeType$Face_getMaxAdvanceWidth($this.$face);
    else
        $data.$spaceXadvance = cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHoriAdvance(cbgggf_FreeType$GlyphSlot_getMetrics(cbgggf_FreeType$Face_getGlyph($this.$face))));
    $heights = $data.$xChars.data;
    $ownsAtlas = $heights.length;
    $kerning = 0;
    b: {
        while (true) {
            if ($kerning >= $ownsAtlas)
                break b;
            if (cbgggf_FreeTypeFontGenerator_loadChar($this, $heights[$kerning], $flags))
                break;
            $kerning = $kerning + 1 | 0;
        }
        $data.$xHeight = cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHeight(cbgggf_FreeType$GlyphSlot_getMetrics(cbgggf_FreeType$Face_getGlyph($this.$face))));
    }
    if ($data.$xHeight === 0.0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(619)));
    $heights = $data.$capChars.data;
    $ownsAtlas = $heights.length;
    $kerning = 0;
    c: {
        while (true) {
            if ($kerning >= $ownsAtlas)
                break c;
            if (cbgggf_FreeTypeFontGenerator_loadChar($this, $heights[$kerning], $flags))
                break;
            $kerning = $kerning + 1 | 0;
        }
        $data.$capHeight = cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHeight(cbgggf_FreeType$GlyphSlot_getMetrics(cbgggf_FreeType$Face_getGlyph($this.$face)))) + jl_Math_abs($parameter.$shadowOffsetY) | 0;
    }
    if (!$this.$bitmapped && $data.$capHeight === 1.0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(620)));
    var$11 = $data.$ascent - $data.$capHeight;
    $data.$ascent = var$11;
    var$8 = $data.$lineHeight;
    var$15 =  -var$8;
    $data.$down = var$15;
    if ($parameter.$flip0) {
        $data.$ascent =  -var$11;
        $data.$down =  -var$15;
    }
    $ownsAtlas = 0;
    $packer = $parameter.$packer;
    if ($packer === null) {
        if ($incremental) {
            $size = cbgggf_FreeTypeFontGenerator_maxTextureSize;
            $packStrategy = cbggg_PixmapPacker$GuillotineStrategy__init_();
        } else {
            $maxGlyphHeight = jl_Math_ceil(var$8) | 0;
            $size = cbgm_MathUtils_nextPowerOfTwo(jl_Math_sqrt($rt_imul($rt_imul($maxGlyphHeight, $maxGlyphHeight), $charactersLength)) | 0);
            $ownsAtlas = cbgggf_FreeTypeFontGenerator_maxTextureSize;
            if ($ownsAtlas > 0)
                $size = jl_Math_min($size, $ownsAtlas);
            $packStrategy = cbggg_PixmapPacker$SkylineStrategy__init_();
        }
        $ownsAtlas = 1;
        $packer = cbggg_PixmapPacker__init_0($size, $size, cbgg_Pixmap$Format_RGBA8888, 1, 0, $packStrategy);
        cbggg_PixmapPacker_setTransparentColor($packer, $parameter.$color2);
        (cbggg_PixmapPacker_getTransparentColor($packer)).$a = 0.0;
        if ($parameter.$borderWidth > 0.0) {
            cbggg_PixmapPacker_setTransparentColor($packer, $parameter.$borderColor);
            (cbggg_PixmapPacker_getTransparentColor($packer)).$a = 0.0;
        }
    }
    if ($incremental)
        $data.$glyphs0 = cbgu_Array__init_0($charactersLength + 32 | 0);
    $stroker = null;
    if ($parameter.$borderWidth > 0.0) {
        $stroker = cbgggf_FreeType$Library_createStroker($this.$library);
        $kerning = $parameter.$borderWidth * 64.0 | 0;
        $best = $parameter.$borderStraight;
        cbgggf_FreeType$Stroker_set($stroker, $kerning, !$best ? cbgggf_FreeType_FT_STROKER_LINECAP_ROUND : cbgggf_FreeType_FT_STROKER_LINECAP_BUTT, !$best ? cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND : cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED, 0);
    }
    $heights = $rt_createIntArray($charactersLength).data;
    $i = 0;
    $packStrategy = $data;
    while ($i < $charactersLength) {
        $c = $characters[$i];
        $heights[$i] = !cbgggf_FreeTypeFontGenerator_loadChar($this, $c, $flags) ? 0 : cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHeight(cbgggf_FreeType$GlyphSlot_getMetrics(cbgggf_FreeType$Face_getGlyph($this.$face))));
        if (!$c) {
            $missingGlyph = cbgggf_FreeTypeFontGenerator_createGlyph($this, 0, $data, $parameter, $stroker, $baseLine, $packer);
            if ($missingGlyph !== null && $missingGlyph.$width1 && $missingGlyph.$height2) {
                cbggg_BitmapFont$BitmapFontData_setGlyph($packStrategy, 0, $missingGlyph);
                $data.$missingGlyph = $missingGlyph;
                if ($incremental)
                    cbgu_Array_add($data.$glyphs0, $missingGlyph);
            }
        }
        $i = $i + 1 | 0;
    }
    $heightsCount = $heights.length;
    while ($heightsCount > 0) {
        $best = 0;
        $maxHeight = $heights[0];
        $i = 1;
        while ($i < $heightsCount) {
            $height = $heights[$i];
            if ($height > $maxHeight) {
                $best = $i;
                $maxHeight = $height;
            }
            $i = $i + 1 | 0;
        }
        $c = $characters[$best];
        if (cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($data, $c) === null) {
            $glyph = cbgggf_FreeTypeFontGenerator_createGlyph($this, $c, $data, $parameter, $stroker, $baseLine, $packer);
            if ($glyph !== null) {
                cbggg_BitmapFont$BitmapFontData_setGlyph($packStrategy, $c, $glyph);
                if ($incremental)
                    cbgu_Array_add($data.$glyphs0, $glyph);
            }
        }
        $heightsCount = $heightsCount + (-1) | 0;
        $heights[$best] = $heights[$heightsCount];
        $tmpChar = $characters[$best];
        $characters[$best] = $characters[$heightsCount];
        $characters[$heightsCount] = $tmpChar;
    }
    if ($stroker !== null && !$incremental)
        cbgggf_FreeType$Stroker_dispose($stroker);
    if ($incremental) {
        $data.$generator = $this;
        $data.$parameter = $parameter;
        $data.$stroker = $stroker;
        $data.$packer0 = $packer;
    }
    d: {
        $kerning = $parameter.$kerning & cbgggf_FreeType$Face_hasKerning($this.$face);
        $parameter.$kerning = $kerning;
        if ($kerning) {
            $i = 0;
            while (true) {
                if ($i >= $charactersLength)
                    break d;
                e: {
                    $firstChar = $characters[$i];
                    $first = cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($data, $firstChar);
                    if ($first !== null) {
                        $firstIndex = cbgggf_FreeType$Face_getCharIndex($this.$face, $firstChar);
                        $ii = $i;
                        while (true) {
                            if ($ii >= $charactersLength)
                                break e;
                            $secondChar = $characters[$ii];
                            $second = cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($data, $secondChar);
                            if ($second !== null) {
                                $secondIndex = cbgggf_FreeType$Face_getCharIndex($this.$face, $secondChar);
                                $kerning = cbgggf_FreeType$Face_getKerning($this.$face, $firstIndex, $secondIndex, 0);
                                if ($kerning)
                                    cbggg_BitmapFont$Glyph_setKerning($first, $secondChar, cbgggf_FreeType_toInt($kerning));
                                $kerning = cbgggf_FreeType$Face_getKerning($this.$face, $secondIndex, $firstIndex, 0);
                                if ($kerning)
                                    cbggg_BitmapFont$Glyph_setKerning($second, $firstChar, cbgggf_FreeType_toInt($kerning));
                            }
                            $ii = $ii + 1 | 0;
                        }
                    }
                }
                $i = $i + 1 | 0;
            }
        }
    }
    if ($ownsAtlas) {
        $glyph = cbgu_Array__init_();
        $data.$regions0 = $glyph;
        cbggg_PixmapPacker_updateTextureRegions($packer, $glyph, $parameter.$minFilter0, $parameter.$magFilter, $parameter.$genMipMaps);
    }
    $spaceGlyph = cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($data, 32);
    if ($spaceGlyph === null) {
        $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
        $spaceGlyph.$xadvance = ($data.$spaceXadvance | 0) + $parameter.$spaceX | 0;
        $spaceGlyph.$id = 32;
        cbggg_BitmapFont$BitmapFontData_setGlyph($packStrategy, 32, $spaceGlyph);
    }
    if (!$spaceGlyph.$width1)
        $spaceGlyph.$width1 = $spaceGlyph.$xadvance + $data.$padRight | 0;
    return $data;
},
cbgggf_FreeTypeFontGenerator_createGlyph = ($this, $c, $data, $parameter, $stroker, $baseLine, $packer) => {
    let $slot, $mainGlyph, $mainBitmap, $padPixmap, $borderGlyph, $borderPixmap, $top, $left, $y, $shadowRow, $i, $n, $shadowPixmap, $mainW, $mainH, $shadowOffsetX, $shadowOffsetY, $shadowW, $shadowH, $shadowColor, $a, $r, $g, $b, $mainPixels, $shadowPixels, $x, $mainA, $shadowPixel, $metrics, $glyph, $buf, $whiteIntBits, $clearIntBits, $h, $idx, $w, $rect, $$je;
    if (!cbgggf_FreeType$Face_getCharIndex($this.$face, $c) && $c ? 1 : 0)
        return null;
    if (!cbgggf_FreeTypeFontGenerator_loadChar($this, $c, cbgggf_FreeTypeFontGenerator_getLoadingFlags($this, $parameter)))
        return null;
    $slot = cbgggf_FreeType$Face_getGlyph($this.$face);
    $mainGlyph = cbgggf_FreeType$GlyphSlot_getGlyph($slot);
    a: {
        try {
            cbgggf_FreeType$Glyph_toBitmap($mainGlyph, !$parameter.$mono ? cbgggf_FreeType_FT_RENDER_MODE_NORMAL : cbgggf_FreeType_FT_RENDER_MODE_MONO);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cbgu_GdxRuntimeException) {
            } else {
                throw $$e;
            }
        }
        cbgggf_FreeType$Glyph_dispose($mainGlyph);
        $data = cbg_Gdx_app;
        $stroker = jl_StringBuilder_toString(jl_StringBuilder_append3(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(621)), $c));
        cgxgbt_TeaApplication_log($data, $rt_s(622), $stroker);
        return null;
    }
    $mainBitmap = cbgggf_FreeType$Glyph_getBitmap($mainGlyph);
    $padPixmap = cbgggf_FreeType$Bitmap_getPixmap($mainBitmap, cbgg_Pixmap$Format_RGBA8888, $parameter.$color2, $parameter.$gamma);
    if (!cbgggf_FreeType$Bitmap_getWidth($mainBitmap))
        $borderGlyph = $mainGlyph;
    else if (!cbgggf_FreeType$Bitmap_getRows($mainBitmap))
        $borderGlyph = $mainGlyph;
    else {
        if ($parameter.$borderWidth <= 0.0) {
            $borderPixmap = $padPixmap;
            $borderGlyph = $mainGlyph;
        } else {
            $top = cbgggf_FreeType$Glyph_getTop($mainGlyph);
            $left = cbgggf_FreeType$Glyph_getLeft($mainGlyph);
            $borderGlyph = cbgggf_FreeType$GlyphSlot_getGlyph($slot);
            cbgggf_FreeType$Glyph_strokeBorder($borderGlyph, $stroker, 0);
            cbgggf_FreeType$Glyph_toBitmap($borderGlyph, !$parameter.$mono ? cbgggf_FreeType_FT_RENDER_MODE_NORMAL : cbgggf_FreeType_FT_RENDER_MODE_MONO);
            $y = $left - cbgggf_FreeType$Glyph_getLeft($borderGlyph) | 0;
            $shadowRow =  -($top - cbgggf_FreeType$Glyph_getTop($borderGlyph) | 0) | 0;
            $borderPixmap = cbgggf_FreeType$Bitmap_getPixmap(cbgggf_FreeType$Glyph_getBitmap($borderGlyph), cbgg_Pixmap$Format_RGBA8888, $parameter.$borderColor, $parameter.$borderGamma);
            $i = 0;
            $n = $parameter.$renderCount;
            while ($i < $n) {
                cbgg_Pixmap_drawPixmap0($borderPixmap, $padPixmap, $y, $shadowRow);
                $i = $i + 1 | 0;
            }
            cbgg_Pixmap_dispose($padPixmap);
            cbgggf_FreeType$Glyph_dispose($mainGlyph);
        }
        if (!$parameter.$shadowOffsetX && !$parameter.$shadowOffsetY) {
            if ($parameter.$borderWidth !== 0.0)
                $shadowPixmap = $borderPixmap;
            else {
                $i = 0;
                $n = $parameter.$renderCount - 1 | 0;
                while ($i < $n) {
                    cbgg_Pixmap_drawPixmap0($borderPixmap, $borderPixmap, 0, 0);
                    $i = $i + 1 | 0;
                }
                $shadowPixmap = $borderPixmap;
            }
        } else {
            b: {
                $mainW = cbgg_Pixmap_getWidth($borderPixmap);
                $mainH = cbgg_Pixmap_getHeight($borderPixmap);
                $shadowOffsetX = jl_Math_max($parameter.$shadowOffsetX, 0);
                $shadowOffsetY = jl_Math_max($parameter.$shadowOffsetY, 0);
                $shadowW = $mainW + jl_Math_abs($parameter.$shadowOffsetX) | 0;
                $shadowH = $mainH + jl_Math_abs($parameter.$shadowOffsetY) | 0;
                $shadowPixmap = cbgg_Pixmap__init_4(cbggg_Gdx2DPixmap__init_($shadowW, $shadowH, cbgg_Pixmap$Format_toGdx2DPixmapFormat(cbgg_Pixmap_getFormat($borderPixmap))));
                cbgg_Pixmap_setColor($shadowPixmap, cbggg_PixmapPacker_getTransparentColor($packer));
                cbgg_Pixmap_fill($shadowPixmap);
                $shadowColor = $parameter.$shadowColor;
                $a = $shadowColor.$a;
                if ($a !== 0.0) {
                    $r = ($shadowColor.$r * 255.0 | 0) << 24 >> 24;
                    $g = ($shadowColor.$g * 255.0 | 0) << 24 >> 24;
                    $b = ($shadowColor.$b * 255.0 | 0) << 24 >> 24;
                    $mainPixels = cbgg_Pixmap_getPixels($borderPixmap);
                    $shadowPixels = cbgg_Pixmap_getPixels($shadowPixmap);
                    $y = 0;
                    $stroker = $mainPixels;
                    $mainPixels = $shadowPixels;
                    while (true) {
                        if ($y >= $mainH)
                            break b;
                        $shadowRow = $rt_imul($shadowW, $y + $shadowOffsetY | 0) + $shadowOffsetX | 0;
                        $x = 0;
                        while ($x < $mainW) {
                            $mainA = jn_ByteBufferJsImpl_get($stroker, (($rt_imul($mainW, $y) + $x | 0) * 4 | 0) + 3 | 0);
                            if ($mainA) {
                                $shadowPixel = ($shadowRow + $x | 0) * 4 | 0;
                                jn_ByteBufferJsImpl_put($mainPixels, $shadowPixel, $r);
                                jn_ByteBufferJsImpl_put($mainPixels, $shadowPixel + 1 | 0, $g);
                                jn_ByteBufferJsImpl_put($mainPixels, $shadowPixel + 2 | 0, $b);
                                jn_ByteBufferJsImpl_put($mainPixels, $shadowPixel + 3 | 0, (($mainA & 255) * $a | 0) << 24 >> 24);
                            }
                            $x = $x + 1 | 0;
                        }
                        $y = $y + 1 | 0;
                    }
                }
            }
            $i = 0;
            $n = $parameter.$renderCount;
            while ($i < $n) {
                cbgg_Pixmap_drawPixmap0($shadowPixmap, $borderPixmap, jl_Math_max( -$parameter.$shadowOffsetX | 0, 0), jl_Math_max( -$parameter.$shadowOffsetY | 0, 0));
                $i = $i + 1 | 0;
            }
            cbgg_Pixmap_dispose($borderPixmap);
        }
        if ($parameter.$padTop <= 0 && $parameter.$padLeft0 <= 0 && $parameter.$padBottom0 <= 0 && $parameter.$padRight0 <= 0)
            $padPixmap = $shadowPixmap;
        else {
            $padPixmap = cbgg_Pixmap__init_((cbgg_Pixmap_getWidth($shadowPixmap) + $parameter.$padLeft0 | 0) + $parameter.$padRight0 | 0, (cbgg_Pixmap_getHeight($shadowPixmap) + $parameter.$padTop | 0) + $parameter.$padBottom0 | 0, cbgg_Pixmap_getFormat($shadowPixmap));
            cbgg_Pixmap_setBlending($padPixmap, cbgg_Pixmap$Blending_None);
            cbgg_Pixmap_drawPixmap0($padPixmap, $shadowPixmap, $parameter.$padLeft0, $parameter.$padTop);
            cbgg_Pixmap_dispose($shadowPixmap);
        }
    }
    $metrics = cbgggf_FreeType$GlyphSlot_getMetrics($slot);
    $glyph = cbggg_BitmapFont$Glyph__init_();
    $glyph.$id = $c;
    $glyph.$width1 = cbgg_Pixmap_getWidth($padPixmap);
    $glyph.$height2 = cbgg_Pixmap_getHeight($padPixmap);
    $glyph.$xoffset = cbgggf_FreeType$Glyph_getLeft($borderGlyph);
    if ($parameter.$flip0)
        $glyph.$yoffset = ( -cbgggf_FreeType$Glyph_getTop($borderGlyph) | 0) + ($baseLine | 0) | 0;
    else
        $glyph.$yoffset = ( -($glyph.$height2 - cbgggf_FreeType$Glyph_getTop($borderGlyph) | 0) | 0) - ($baseLine | 0) | 0;
    c: {
        $glyph.$xadvance = (cbgggf_FreeType_toInt(cbgggf_FreeType$GlyphMetrics_getHoriAdvance($metrics)) + ($parameter.$borderWidth | 0) | 0) + $parameter.$spaceX | 0;
        if ($this.$bitmapped) {
            cbgg_Pixmap_setColor($padPixmap, cbgg_Color_CLEAR);
            cbgg_Pixmap_fill($padPixmap);
            $buf = cbgggf_FreeType$Bitmap_getBuffer($mainBitmap);
            $whiteIntBits = cbgg_Color_toIntBits(cbgg_Color_WHITE);
            $clearIntBits = cbgg_Color_toIntBits(cbgg_Color_CLEAR);
            $h = 0;
            $stroker = $buf;
            while (true) {
                if ($h >= $glyph.$height2)
                    break c;
                $idx = $rt_imul($h, cbgggf_FreeType$Bitmap_getPitch($mainBitmap));
                $w = 0;
                while ($w < ($glyph.$width1 + $glyph.$xoffset | 0)) {
                    cbgg_Pixmap_drawPixel0($padPixmap, $w, $h, ((jn_ByteBufferJsImpl_get($stroker, $idx + ($w / 8 | 0) | 0) >>> (7 - ($w % 8 | 0) | 0) | 0) & 1) != 1 ? $clearIntBits : $whiteIntBits);
                    $w = $w + 1 | 0;
                }
                $h = $h + 1 | 0;
            }
        }
    }
    $rect = cbggg_PixmapPacker_pack($packer, $padPixmap);
    $c = cbgu_Array_indexOf(cbggg_PixmapPacker_getPages($packer), $rect.$page0, 1);
    $glyph.$page = $c;
    $glyph.$srcX = $rect.$x1 | 0;
    $glyph.$srcY = $rect.$y1 | 0;
    if ($parameter.$incremental) {
        $data = $data.$regions0;
        if ($data !== null && $data.$size0 <= $c)
            cbggg_PixmapPacker_updateTextureRegions($packer, $data, $parameter.$minFilter0, $parameter.$magFilter, $parameter.$genMipMaps);
    }
    cbgg_Pixmap_dispose($padPixmap);
    cbgggf_FreeType$Glyph_dispose($borderGlyph);
    return $glyph;
},
cbgggf_FreeTypeFontGenerator_dispose = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$face;
    Module._c_Face_doneFace(var$1.$address);
    var$2 = var$1.$library0.$fontData;
    var$3 = Long_fromInt(var$1.$address);
    if (Long_eq(var$3, Long_ZERO))
        var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue0;
    else {
        var$4 = cbgu_LongMap_locateKey(var$2, var$3);
        var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
    }
    var$2 = var$2;
    if (var$2.$value) {
        var$5 = var$1.$library0.$fontData;
        var$3 = Long_fromInt(var$1.$address);
        if (Long_ne(var$3, Long_ZERO)) {
            var$4 = cbgu_LongMap_locateKey(var$5, var$3);
            if (var$4 >= 0) {
                var$6 = var$5.$keyTable0;
                var$7 = var$5.$valueTable0.data;
                var$8 = var$5.$mask3;
                var$9 = (var$4 + 1 | 0) & var$8;
                while (true) {
                    var$10 = var$6.data;
                    var$3 = var$10[var$9];
                    if (Long_eq(var$3, Long_ZERO))
                        break;
                    var$11 = cbgu_LongMap_place(var$5, var$3);
                    if (((var$9 - var$11 | 0) & var$8) > ((var$4 - var$11 | 0) & var$8)) {
                        var$10[var$4] = var$3;
                        var$7[var$4] = var$7[var$9];
                        var$4 = var$9;
                    }
                    var$9 = (var$9 + 1 | 0) & var$8;
                }
                var$10[var$4] = Long_ZERO;
                var$7[var$4] = null;
                var$5.$size6 = var$5.$size6 - 1 | 0;
            }
        } else if (var$5.$hasZeroValue0) {
            var$5.$hasZeroValue0 = 0;
            var$5.$zeroValue0 = null;
            var$5.$size6 = var$5.$size6 - 1 | 0;
        }
        cbgggf_FreeType_nativeFree(var$2.$value);
    }
    var$1 = $this.$library;
    Module._c_Library_doneFreeType(var$1.$address);
    var$1 = var$1.$fontData;
    if (cbgu_Collections_allocateIterators)
        var$2 = cbgu_LongMap$Values__init_(var$1);
    else {
        if (var$1.$values1 === null) {
            var$1.$values1 = cbgu_LongMap$Values__init_(var$1);
            var$1.$values2 = cbgu_LongMap$Values__init_(var$1);
        }
        var$2 = var$1.$values1;
        if (!var$2.$valid0) {
            cbgu_LongMap$Values_reset(var$2);
            var$2 = var$1.$values1;
            var$2.$valid0 = 1;
            var$1.$values2.$valid0 = 0;
        } else {
            cbgu_LongMap$Values_reset(var$1.$values2);
            var$2 = var$1.$values2;
            var$2.$valid0 = 1;
            var$1.$values1.$valid0 = 0;
        }
    }
    var$2 = var$2;
    while (true) {
        var$4 = var$2.$valid0;
        if (!var$4) {
            var$2 = new cbgu_GdxRuntimeException;
            jl_RuntimeException__init_(var$2, $rt_s(426));
            $rt_throw(var$2);
        }
        var$11 = var$2.$hasNext0;
        if (!var$11)
            break;
        if (!var$11) {
            var$1 = new ju_NoSuchElementException;
            jl_Exception__init_(var$1);
            $rt_throw(var$1);
        }
        if (!var$4) {
            var$2 = new cbgu_GdxRuntimeException;
            jl_RuntimeException__init_(var$2, $rt_s(426));
            $rt_throw(var$2);
        }
        var$11 = var$2.$nextIndex0;
        var$1 = var$11 == (-1) ? var$2.$map.$zeroValue0 : var$2.$map.$valueTable0.data[var$11];
        var$2.$currentIndex = var$11;
        cbgu_LongMap$MapIterator_findNextIndex(var$2);
        cbgggf_FreeType_nativeFree(var$1.$value);
    }
},
cbgggf_FreeTypeFontGenerator__clinit_ = () => {
    cbgggf_FreeTypeFontGenerator_maxTextureSize = 1024;
};
function cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter() {
    let a = this; jl_Object.call(a);
    a.$size9 = 0;
    a.$mono = 0;
    a.$hinting = null;
    a.$color2 = null;
    a.$gamma = 0.0;
    a.$renderCount = 0;
    a.$borderWidth = 0.0;
    a.$borderColor = null;
    a.$borderStraight = 0;
    a.$borderGamma = 0.0;
    a.$shadowOffsetX = 0;
    a.$shadowOffsetY = 0;
    a.$shadowColor = null;
    a.$spaceX = 0;
    a.$spaceY = 0;
    a.$padTop = 0;
    a.$padLeft0 = 0;
    a.$padBottom0 = 0;
    a.$padRight0 = 0;
    a.$characters0 = null;
    a.$kerning = 0;
    a.$packer = null;
    a.$flip0 = 0;
    a.$genMipMaps = 0;
    a.$minFilter0 = null;
    a.$magFilter = null;
    a.$incremental = 0;
}
let cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_0 = $this => {
    let var$1;
    $this.$size9 = 16;
    $this.$hinting = cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium;
    $this.$color2 = cbgg_Color_WHITE;
    $this.$gamma = 1.7999999523162842;
    $this.$renderCount = 2;
    $this.$borderWidth = 0.0;
    $this.$borderColor = cbgg_Color_BLACK;
    $this.$borderStraight = 0;
    $this.$borderGamma = 1.7999999523162842;
    $this.$shadowOffsetX = 0;
    $this.$shadowOffsetY = 0;
    $this.$shadowColor = cbgg_Color__init_0(0.0, 0.0, 0.0, 0.75);
    $this.$characters0 = $rt_s(623);
    $this.$kerning = 1;
    $this.$packer = null;
    $this.$flip0 = 0;
    $this.$genMipMaps = 0;
    var$1 = cbgg_Texture$TextureFilter_Nearest;
    $this.$minFilter0 = var$1;
    $this.$magFilter = var$1;
},
cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_ = () => {
    let var_0 = new cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter();
    cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter__init_0(var_0);
    return var_0;
};
function cbgm_Quaternion() {
    let a = this; jl_Object.call(a);
    a.$x8 = 0.0;
    a.$y8 = 0.0;
    a.$z1 = 0.0;
    a.$w0 = 0.0;
}
let cbgm_Quaternion_tmp1 = null,
cbgm_Quaternion_tmp2 = null,
cbgm_Quaternion__init_1 = ($this, $x, $y, $z, $w) => {
    cbgm_Quaternion_set($this, $x, $y, $z, $w);
},
cbgm_Quaternion__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Quaternion();
    cbgm_Quaternion__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Quaternion__init_2 = $this => {
    cbgm_Quaternion_set($this, 0.0, 0.0, 0.0, 1.0);
},
cbgm_Quaternion__init_ = () => {
    let var_0 = new cbgm_Quaternion();
    cbgm_Quaternion__init_2(var_0);
    return var_0;
},
cbgm_Quaternion_set = ($this, $x, $y, $z, $w) => {
    $this.$x8 = $x;
    $this.$y8 = $y;
    $this.$z1 = $z;
    $this.$w0 = $w;
    return $this;
},
cbgm_Quaternion__clinit_ = () => {
    cbgm_Quaternion_tmp1 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
    cbgm_Quaternion_tmp2 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
};
function cbgg_VertexAttributes() {
    let a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$vertexSize = 0;
    a.$mask6 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
}
let cbgg_VertexAttributes_size = $this => {
    return $this.$attributes3.data.length;
},
cbgg_VertexAttributes_get = ($this, $index) => {
    return $this.$attributes3.data[$index];
};
function cbggg_ShaderProgram() {
    let a = this; jl_Object.call(a);
    a.$log0 = null;
    a.$isCompiled = 0;
    a.$uniforms = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes2 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type2 = null;
}
let cbggg_ShaderProgram_pedantic = 0,
cbggg_ShaderProgram_prependVertexCode = null,
cbggg_ShaderProgram_prependFragmentCode = null,
cbggg_ShaderProgram_shaders = null,
cbggg_ShaderProgram_intbuf = null,
cbggg_ShaderProgram_$callClinit = () => {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
},
cbggg_ShaderProgram_compileShaders = ($this, $vertexShader, $fragmentShader) => {
    let var$3;
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    var$3 = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    $this.$fragmentShaderHandle = var$3;
    if ($this.$vertexShaderHandle != (-1) && var$3 != (-1)) {
        var$3 = cbg_Gdx_gl20.$glCreateProgram();
        if (!var$3)
            var$3 = (-1);
        $vertexShader = cbg_Gdx_gl20;
        if (var$3 == (-1))
            var$3 = (-1);
        else {
            $vertexShader.$glAttachShader(var$3, $this.$vertexShaderHandle);
            $vertexShader.$glAttachShader(var$3, $this.$fragmentShaderHandle);
            $vertexShader.$glLinkProgram(var$3);
            $fragmentShader = jn_ByteBuffer_allocateDirect(4);
            jn_ByteBuffer_order($fragmentShader, jn_ByteOrder_nativeOrder());
            $fragmentShader = jn_ByteBufferJsImpl_asIntBuffer($fragmentShader);
            $vertexShader.$glGetProgramiv(var$3, 35714, $fragmentShader);
            if (!jn_IntBufferImpl_get($fragmentShader, 0)) {
                $this.$log0 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$3);
                var$3 = (-1);
            }
        }
        $this.$program = var$3;
        if (var$3 != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
},
cbggg_ShaderProgram_loadShader = ($this, $type, $source) => {
    let $gl, $intbuf, $shader, $infoLog;
    $gl = cbg_Gdx_gl20;
    $intbuf = cbgu_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $gl = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($gl);
    jl_AbstractStringBuilder_append($gl, $this.$log0);
    jl_AbstractStringBuilder_append($gl, $type != 35633 ? $rt_s(624) : $rt_s(625));
    $this.$log0 = jl_AbstractStringBuilder_toString($gl);
    $source = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($source);
    jl_AbstractStringBuilder_append($source, $this.$log0);
    jl_AbstractStringBuilder_append($source, $infoLog);
    $this.$log0 = jl_AbstractStringBuilder_toString($source);
    return (-1);
},
cbggg_ShaderProgram_getLog = $this => {
    let var$1;
    if (!$this.$isCompiled)
        return $this.$log0;
    var$1 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
    $this.$log0 = var$1;
    return var$1;
},
cbggg_ShaderProgram_fetchUniformLocation = ($this, $name) => {
    let var$2, var$3, var$4, var$5;
    cbggg_ShaderProgram_$callClinit();
    var$2 = cbggg_ShaderProgram_pedantic;
    var$3 = cbgu_ObjectIntMap_get($this.$uniforms, $name, (-2));
    if (var$3 == (-2)) {
        var$3 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        if (var$3 == (-1) && var$2) {
            if (!$this.$isCompiled) {
                $name = new jl_IllegalStateException;
                var$4 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$4);
                jl_AbstractStringBuilder_append(var$4, $rt_s(626));
                jl_AbstractStringBuilder_append(var$4, cbggg_ShaderProgram_getLog($this));
                jl_RuntimeException__init_($name, jl_AbstractStringBuilder_toString(var$4));
                $rt_throw($name);
            }
            var$4 = new jl_IllegalArgumentException;
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_AbstractStringBuilder_append(var$5, $rt_s(627));
            jl_AbstractStringBuilder_append(var$5, $name);
            jl_AbstractStringBuilder_append(var$5, $rt_s(628));
            jl_RuntimeException__init_(var$4, jl_AbstractStringBuilder_toString(var$5));
            $rt_throw(var$4);
        }
        cbgu_ObjectIntMap_put($this.$uniforms, $name, var$3);
    }
    return var$3;
},
cbggg_ShaderProgram_setVertexAttribute = ($this, $location, $size, $type, $normalize, $stride, $offset) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
},
cbggg_ShaderProgram_disableVertexAttribute0 = ($this, $name) => {
    let $gl, var$3, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    var$3 = cbg_Gdx_gl20;
    $location = cbgu_ObjectIntMap_get($this.$attributes2, $name, (-2));
    if ($location == (-2)) {
        $location = var$3.$glGetAttribLocation($this.$program, $name);
        cbgu_ObjectIntMap_put($this.$attributes2, $name, $location);
    }
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_disableVertexAttribute = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_enableVertexAttribute = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
},
cbggg_ShaderProgram_checkManaged = $this => {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
},
cbggg_ShaderProgram_getAttributeLocation = ($this, $name) => {
    return cbgu_ObjectIntMap_get($this.$attributes2, $name, (-1));
},
cbggg_ShaderProgram__clinit_ = () => {
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(8);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(8);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_();
    cbggg_ShaderProgram_intbuf = cbgu_BufferUtils_newIntBuffer(1);
},
cbgggf_FreeTypeFontGenerator$Hinting = $rt_classWithoutFields(jl_Enum),
cbgggf_FreeTypeFontGenerator$Hinting_None = null,
cbgggf_FreeTypeFontGenerator$Hinting_Slight = null,
cbgggf_FreeTypeFontGenerator$Hinting_Medium = null,
cbgggf_FreeTypeFontGenerator$Hinting_Full = null,
cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight = null,
cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium = null,
cbgggf_FreeTypeFontGenerator$Hinting_AutoFull = null,
cbgggf_FreeTypeFontGenerator$Hinting_$VALUES = null,
cbgggf_FreeTypeFontGenerator$Hinting__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(586), 0);
    cbgggf_FreeTypeFontGenerator$Hinting_None = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(629), 1);
    cbgggf_FreeTypeFontGenerator$Hinting_Slight = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(630), 2);
    cbgggf_FreeTypeFontGenerator$Hinting_Medium = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(631), 3);
    cbgggf_FreeTypeFontGenerator$Hinting_Full = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(632), 4);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(633), 5);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium = var$1;
    var$1 = new cbgggf_FreeTypeFontGenerator$Hinting;
    jl_Enum__init_(var$1, $rt_s(634), 6);
    cbgggf_FreeTypeFontGenerator$Hinting_AutoFull = var$1;
    var$2 = $rt_createArray(cbgggf_FreeTypeFontGenerator$Hinting, 7);
    var$3 = var$2.data;
    var$3[0] = cbgggf_FreeTypeFontGenerator$Hinting_None;
    var$3[1] = cbgggf_FreeTypeFontGenerator$Hinting_Slight;
    var$3[2] = cbgggf_FreeTypeFontGenerator$Hinting_Medium;
    var$3[3] = cbgggf_FreeTypeFontGenerator$Hinting_Full;
    var$3[4] = cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight;
    var$3[5] = cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium;
    var$3[6] = var$1;
    cbgggf_FreeTypeFontGenerator$Hinting_$VALUES = var$2;
};
function cbgggu_TextureDescriptor() {
    jl_Object.call(this);
    this.$texture2 = null;
}
function cbgggs_DefaultShader$Config() {
    let a = this; jl_Object.call(a);
    a.$vertexShader = null;
    a.$fragmentShader = null;
    a.$numDirectionalLights = 0;
    a.$numPointLights = 0;
    a.$numSpotLights = 0;
    a.$numBones = 0;
    a.$numBoneWeights = 0;
    a.$ignoreUnimplemented = 0;
    a.$defaultCullFace = 0;
    a.$defaultDepthFunc = 0;
}
let cbgg_Mesh$1 = $rt_classWithoutFields(),
cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null,
cbgg_Mesh$1_$callClinit = () => {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
},
cbgg_Mesh$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgg_Mesh$VertexDataType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = var$1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObject.$ordinal0] = 1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectSubData.$ordinal0] = 2;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO.$ordinal0] = 3;
    var$2[cbgg_Mesh$VertexDataType_VertexArray.$ordinal0] = 4;
},
cbggg_VertexData = $rt_classWithoutFields(0);
function cbggg_VertexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$attributes0 = null;
    a.$byteBuffer2 = null;
    a.$buffer5 = null;
    a.$bufferHandle2 = 0;
    a.$isStatic0 = 0;
    a.$usage1 = 0;
    a.$isDirty3 = 0;
    a.$isBound0 = 0;
}
let cbggg_VertexBufferObject__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    $this.$isDirty3 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes0 = $attributes;
    $attributes = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($attributes.$vertexSize, $numVertices));
    $this.$byteBuffer2 = $attributes;
    $attributes = jn_ByteBufferJsImpl_asFloatBuffer($attributes);
    $this.$buffer5 = $attributes;
    jn_Buffer_flip($attributes);
    $this.$bufferHandle2 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage1 = !$isStatic ? 35048 : 35044;
},
cbggg_VertexBufferObject__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObject_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty3 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer5, $count, $offset);
    jn_Buffer_position($this.$buffer5, 0);
    jn_Buffer_limit($this.$buffer5, $count);
    if ($this.$isBound0) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer5;
        var$4.$glBufferData(34962, var$5.$limit0, var$5, $this.$usage1);
        $this.$isDirty3 = 0;
    }
},
cbggg_VertexBufferObject_bind = ($this, $shader, $locations) => {
    let $gl, $attribute, $numAttributes, $i, var$7, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle2);
    if ($this.$isDirty3) {
        $attribute = $this.$buffer5;
        $gl.$glBufferData(34962, $attribute.$limit0, $attribute, $this.$usage1);
        $this.$isDirty3 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
                $location = var$7[$i];
                if ($location >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                    cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
            $location = cbggg_ShaderProgram_getAttributeLocation($shader, $attribute.$alias);
            if ($location >= 0) {
                cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
},
cbggg_VertexBufferObject_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                cbggg_ShaderProgram_disableVertexAttribute0($shader, (cbgg_VertexAttributes_get($this.$attributes0, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    cbggg_ShaderProgram_disableVertexAttribute($shader, $location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
},
cbggg_IndexData = $rt_classWithoutFields(0);
function cbggg_IndexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$byteBuffer1 = null;
    a.$buffer0 = null;
    a.$bufferHandle = 0;
    a.$isDirect0 = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage = 0;
}
let cbggg_IndexBufferObject__init_0 = ($this, $isStatic, $maxIndices) => {
    let var$3;
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect0 = 1;
    var$3 = cbgu_BufferUtils_newUnsafeByteBuffer($maxIndices * 2 | 0);
    $this.$byteBuffer1 = var$3;
    var$3 = jn_ByteBufferJsImpl_asShortBuffer(var$3);
    $this.$buffer0 = var$3;
    jn_Buffer_flip(var$3);
    $this.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage = !$isStatic ? 35048 : 35044;
},
cbggg_IndexBufferObject__init_1 = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObject__init_ = ($this, $maxIndices) => {
    let var$2, var$3, var$4;
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect0 = 1;
    if (cgxgbt_TeaTool_isProd) {
        var$2 = jn_ByteBuffer_allocateDirect($maxIndices * 2 | 0);
        jn_ByteBuffer_order(var$2, jn_ByteOrder_nativeOrder());
        var$2 = jn_ByteBufferJsImpl_asShortBuffer(var$2);
    } else {
        var$3 = $rt_createShortArray($maxIndices);
        var$4 = var$3.data.length;
        var$2 = jn_ShortBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
        var$2.$position0 = 0;
        var$2.$limit0 = 0 + var$4 | 0;
    }
    $this.$buffer0 = var$2;
    jn_Buffer_flip(var$2);
    $this.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage = 35044;
},
cbggg_IndexBufferObject__init_2 = var_0 => {
    let var_1 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_(var_1, var_0);
    return var_1;
},
cbggg_IndexBufferObject_getNumIndices = $this => {
    return $this.$buffer0.$limit0;
},
cbggg_IndexBufferObject_getNumMaxIndices = $this => {
    return $this.$buffer0.$capacityImpl();
},
cbggg_IndexBufferObject_setIndices = ($this, $indices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty = 1;
    jn_Buffer_clear($this.$buffer0);
    jn_ShortBuffer_put($this.$buffer0, $indices, $offset, $count);
    jn_Buffer_flip($this.$buffer0);
    if ($this.$isBound) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer0;
        var$4.$glBufferData(34963, var$5.$limit0, var$5, $this.$usage);
        $this.$isDirty = 0;
    }
},
cbggg_IndexBufferObject_getBuffer = ($this, $forWriting) => {
    $this.$isDirty = $this.$isDirty | $forWriting;
    return $this.$buffer0;
},
cbggg_IndexBufferObject_bind = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$bufferHandle;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$2, $rt_s(635));
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty) {
        var$2 = cbg_Gdx_gl20;
        var$3 = $this.$buffer0;
        var$2.$glBufferData(34963, var$3.$limit0, var$3, $this.$usage);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
},
cbggg_IndexBufferObject_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
};
function cbggg_VertexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$buffer1 = null;
    a.$byteBuffer = null;
    a.$bufferHandle1 = 0;
    a.$isDirect = 0;
    a.$isStatic = 0;
    a.$usage0 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
let cbggg_VertexBufferObjectSubData__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    $this.$isDirty1 = 0;
    $this.$isBound1 = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes = $attributes;
    $attributes = cbgu_BufferUtils_newByteBuffer($rt_imul($attributes.$vertexSize, $numVertices));
    $this.$byteBuffer = $attributes;
    $this.$isDirect = 1;
    $this.$usage0 = !$isStatic ? 35048 : 35044;
    $this.$buffer1 = jn_ByteBufferJsImpl_asFloatBuffer($attributes);
    $numVertices = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    cbg_Gdx_gl20.$glBindBuffer(34962, $numVertices);
    cbg_Gdx_gl20.$glBufferData(34962, $this.$byteBuffer.$capacityImpl(), null, $this.$usage0);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    $this.$bufferHandle1 = $numVertices;
    jn_Buffer_flip($this.$buffer1);
    jn_Buffer_flip($this.$byteBuffer);
},
cbggg_VertexBufferObjectSubData__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectSubData_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty1 = 1;
    if ($this.$isDirect) {
        cbgu_BufferUtils_copy($vertices, $this.$byteBuffer, $count, $offset);
        jn_Buffer_position($this.$buffer1, 0);
        jn_Buffer_limit($this.$buffer1, $count);
    } else {
        jn_Buffer_clear($this.$buffer1);
        jn_FloatBuffer_put($this.$buffer1, $vertices, $offset, $count);
        jn_Buffer_flip($this.$buffer1);
        jn_Buffer_position($this.$byteBuffer, 0);
        var$4 = $this.$byteBuffer;
        $offset = $this.$buffer1.$limit0 << 2;
        jn_Buffer_limit(var$4, $offset);
    }
    if ($this.$isBound1) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer;
        var$4.$glBufferSubData(34962, 0, var$5.$limit0, var$5);
        $this.$isDirty1 = 0;
    }
},
cbggg_VertexBufferObjectSubData_bind = ($this, $shader, $locations) => {
    let $gl, $attribute, $i, $numAttributes, var$7, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        $attribute = $this.$byteBuffer;
        $i = $this.$buffer1.$limit0 * 4 | 0;
        jn_Buffer_limit($attribute, $i);
        $attribute = $this.$byteBuffer;
        $gl.$glBufferData(34962, $attribute.$limit0, $attribute, $this.$usage0);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes, $i);
                $location = var$7[$i];
                if ($location >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                    cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes, $i);
            $location = cbggg_ShaderProgram_getAttributeLocation($shader, $attribute.$alias);
            if ($location >= 0) {
                cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
},
cbggg_VertexBufferObjectSubData_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                cbggg_ShaderProgram_disableVertexAttribute0($shader, (cbgg_VertexAttributes_get($this.$attributes, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    cbggg_ShaderProgram_disableVertexAttribute($shader, $location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
};
function cbggg_IndexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$buffer2 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle3 = 0;
    a.$isDirect1 = 0;
    a.$isDirty0 = 0;
    a.$isBound2 = 0;
    a.$usage3 = 0;
}
let cbggg_IndexBufferObjectSubData__init_0 = ($this, $isStatic, $maxIndices) => {
    let var$3;
    $this.$isDirty0 = 1;
    $this.$isBound2 = 0;
    var$3 = cbgu_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$byteBuffer0 = var$3;
    $this.$isDirect1 = 1;
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    var$3 = jn_ByteBufferJsImpl_asShortBuffer(var$3);
    $this.$buffer2 = var$3;
    jn_Buffer_flip(var$3);
    jn_Buffer_flip($this.$byteBuffer0);
    $maxIndices = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    cbg_Gdx_gl20.$glBindBuffer(34963, $maxIndices);
    cbg_Gdx_gl20.$glBufferData(34963, $this.$byteBuffer0.$capacityImpl(), null, $this.$usage3);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$bufferHandle3 = $maxIndices;
},
cbggg_IndexBufferObjectSubData__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObjectSubData_getNumIndices = $this => {
    return $this.$buffer2.$limit0;
},
cbggg_IndexBufferObjectSubData_getNumMaxIndices = $this => {
    return $this.$buffer2.$capacityImpl();
},
cbggg_IndexBufferObjectSubData_setIndices = ($this, $indices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty0 = 1;
    jn_Buffer_clear($this.$buffer2);
    jn_ShortBuffer_put($this.$buffer2, $indices, $offset, $count);
    jn_Buffer_flip($this.$buffer2);
    jn_Buffer_position($this.$byteBuffer0, 0);
    var$4 = $this.$byteBuffer0;
    $offset = $count << 1;
    jn_Buffer_limit(var$4, $offset);
    if ($this.$isBound2) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer0;
        var$4.$glBufferSubData(34963, 0, var$5.$limit0, var$5);
        $this.$isDirty0 = 0;
    }
},
cbggg_IndexBufferObjectSubData_getBuffer = ($this, $forWriting) => {
    $this.$isDirty0 = $this.$isDirty0 | $forWriting;
    return $this.$buffer2;
},
cbggg_IndexBufferObjectSubData_bind = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$bufferHandle3;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$2, $rt_s(636));
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty0) {
        var$2 = $this.$byteBuffer0;
        var$3 = $this.$buffer2.$limit0 * 2 | 0;
        jn_Buffer_limit(var$2, var$3);
        var$2 = cbg_Gdx_gl20;
        var$4 = $this.$byteBuffer0;
        var$2.$glBufferSubData(34963, 0, var$4.$limit0, var$4);
        $this.$isDirty0 = 0;
    }
    $this.$isBound2 = 1;
},
cbggg_IndexBufferObjectSubData_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
};
function cbggg_VertexBufferObjectWithVAO() {
    let a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$byteBuffer3 = null;
    a.$buffer3 = null;
    a.$bufferHandle0 = 0;
    a.$isStatic1 = 0;
    a.$usage2 = 0;
    a.$isDirty2 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
let cbggg_VertexBufferObjectWithVAO_tmpHandle = null,
cbggg_VertexBufferObjectWithVAO_$callClinit = () => {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
},
cbggg_VertexBufferObjectWithVAO__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    $this.$isDirty2 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = cbgu_IntArray__init_1();
    $this.$isStatic1 = $isStatic;
    $this.$attributes1 = $attributes;
    $attributes = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($attributes.$vertexSize, $numVertices));
    $this.$byteBuffer3 = $attributes;
    $attributes = jn_ByteBufferJsImpl_asFloatBuffer($attributes);
    $this.$buffer3 = $attributes;
    jn_Buffer_flip($attributes);
    $this.$bufferHandle0 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage2 = !$isStatic ? 35048 : 35044;
    jn_Buffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
    cbg_Gdx_gl30.$glGenVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = jn_IntBufferImpl_get0(cbggg_VertexBufferObjectWithVAO_tmpHandle);
},
cbggg_VertexBufferObjectWithVAO__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectWithVAO_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty2 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer3, $count, $offset);
    jn_Buffer_position($this.$buffer3, 0);
    jn_Buffer_limit($this.$buffer3, $count);
    if ($this.$isBound3) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer3;
        var$4.$glBufferData(34962, var$5.$limit0, var$5, $this.$usage2);
        $this.$isDirty2 = 0;
    }
},
cbggg_VertexBufferObjectWithVAO_bind = ($this, $shader, $locations) => {
    let $gl, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    var$4 = !$this.$cachedLocations.$size1 ? 0 : 1;
    a: {
        var$5 = cbgg_VertexAttributes_size($this.$attributes1);
        if (var$4) {
            if ($locations === null) {
                var$6 = 0;
                while (var$4 && var$6 < var$5) {
                    var$4 = cbggg_ShaderProgram_getAttributeLocation($shader, (cbgg_VertexAttributes_get($this.$attributes1, var$6)).$alias) != cbgu_IntArray_get($this.$cachedLocations, var$6) ? 0 : 1;
                    var$6 = var$6 + 1 | 0;
                }
            } else {
                var$7 = $locations.data;
                var$4 = var$7.length != $this.$cachedLocations.$size1 ? 0 : 1;
                var$6 = 0;
                while (var$4) {
                    if (var$6 >= var$5)
                        break a;
                    var$4 = var$7[var$6] != cbgu_IntArray_get($this.$cachedLocations, var$6) ? 0 : 1;
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!var$4) {
            cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle0);
            if ($this.$cachedLocations.$size1) {
                var$6 = cbgg_VertexAttributes_size($this.$attributes1);
                var$8 = 0;
                while (var$8 < var$6) {
                    var$4 = cbgu_IntArray_get($this.$cachedLocations, var$8);
                    if (var$4 >= 0)
                        cbggg_ShaderProgram_disableVertexAttribute($shader, var$4);
                    var$8 = var$8 + 1 | 0;
                }
            }
            cbgu_IntArray_clear($this.$cachedLocations);
            var$9 = 0;
            while (true) {
                if (var$9 >= var$5)
                    break b;
                var$10 = cbgg_VertexAttributes_get($this.$attributes1, var$9);
                if ($locations !== null) {
                    var$7 = $locations.data;
                    cbgu_IntArray_add($this.$cachedLocations, var$7[var$9]);
                } else
                    cbgu_IntArray_add($this.$cachedLocations, cbggg_ShaderProgram_getAttributeLocation($shader, var$10.$alias));
                var$6 = cbgu_IntArray_get($this.$cachedLocations, var$9);
                if (var$6 >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, var$6);
                    cbggg_ShaderProgram_setVertexAttribute($shader, var$6, var$10.$numComponents, var$10.$type3, var$10.$normalized, $this.$attributes1.$vertexSize, var$10.$offset);
                }
                var$9 = var$9 + 1 | 0;
            }
        }
    }
    if ($this.$isDirty2) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle0);
        $shader = $this.$buffer3;
        jn_Buffer_limit($shader, $shader.$limit0);
        $shader = $this.$buffer3;
        $gl.$glBufferData(34962, $shader.$limit0, $shader, $this.$usage2);
        $this.$isDirty2 = 0;
    }
    $this.$isBound3 = 1;
},
cbggg_VertexBufferObjectWithVAO_unbind = ($this, $shader, $locations) => {
    cbg_Gdx_gl30.$glBindVertexArray(0);
    $this.$isBound3 = 0;
},
cbggg_VertexBufferObjectWithVAO__clinit_ = () => {
    cbggg_VertexBufferObjectWithVAO_tmpHandle = cbgu_BufferUtils_newIntBuffer(1);
},
cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject),
cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbgu_ObjectIntMap() {
    let a = this; jl_Object.call(a);
    a.$size10 = 0;
    a.$keyTable3 = null;
    a.$valueTable2 = null;
    a.$loadFactor = 0.0;
    a.$threshold2 = 0;
    a.$shift3 = 0;
    a.$mask4 = 0;
}
let cbgu_ObjectIntMap__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold2 = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask4 = var$2;
    $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable3 = $rt_createArray(jl_Object, var$1);
    $this.$valueTable2 = $rt_createIntArray(var$1);
},
cbgu_ObjectIntMap__init_ = () => {
    let var_0 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_0);
    return var_0;
},
cbgu_ObjectIntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt(jl_String_hashCode($item)), Long_create(2135587861, 2654435769)), $this.$shift3));
},
cbgu_ObjectIntMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        jl_RuntimeException__init_($other, $rt_s(21));
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable3;
    $i = cbgu_ObjectIntMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if (jl_String_equals($other, $key))
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    return $i;
},
cbgu_ObjectIntMap_put = ($this, $key, $value) => {
    let $i, var$4, var$5, var$6, var$7, var$8, var$9;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable2.data[$i] = $value;
        return;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable3.data;
    var$4[$i] = $key;
    $this.$valueTable2.data[$i] = $value;
    $value = $this.$size10 + 1 | 0;
    $this.$size10 = $value;
    if ($value >= $this.$threshold2)
        a: {
            $value = var$4.length;
            $i = $value << 1;
            $this.$threshold2 = $i * $this.$loadFactor | 0;
            var$5 = $i - 1 | 0;
            $this.$mask4 = var$5;
            $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$5));
            var$4 = $this.$keyTable3;
            var$6 = $this.$valueTable2;
            $this.$keyTable3 = $rt_createArray(jl_Object, $i);
            $this.$valueTable2 = $rt_createIntArray($i);
            if ($this.$size10 > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $value)
                        break a;
                    $key = var$4.data[$i];
                    if ($key !== null) {
                        var$5 = var$6.data[$i];
                        var$7 = $this.$keyTable3;
                        var$8 = cbgu_ObjectIntMap_place($this, $key);
                        while (true) {
                            var$9 = var$7.data;
                            if (var$9[var$8] === null)
                                break;
                            var$8 = (var$8 + 1 | 0) & $this.$mask4;
                        }
                        var$9[var$8] = $key;
                        $this.$valueTable2.data[var$8] = var$5;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
},
cbgu_ObjectIntMap_get = ($this, $key, $defaultValue) => {
    let $i;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable2.data[$i];
    return $defaultValue;
},
cbgu_BufferUtils = $rt_classWithoutFields(),
cbgu_BufferUtils_unsafeBuffers = null,
cbgu_BufferUtils_allocatedUnsafe = 0,
cbgu_BufferUtils_copy = ($src, $dst, $numFloats, $offset) => {
    let $floatBuffer, var$6;
    $floatBuffer = null;
    var$6 = $dst instanceof jn_ByteBuffer;
    if (var$6)
        $floatBuffer = jn_ByteBufferJsImpl_asFloatBuffer($dst);
    else if ($dst instanceof jn_FloatBuffer)
        $floatBuffer = $dst;
    if ($floatBuffer === null) {
        $floatBuffer = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($floatBuffer, $rt_s(637));
        $rt_throw($floatBuffer);
    }
    jn_Buffer_clear($floatBuffer);
    $dst.$position(0);
    jn_FloatBuffer_put($floatBuffer, $src, $offset, $numFloats);
    $dst.$position(0);
    if (!var$6)
        $dst.$limit($numFloats);
    else
        $dst.$limit($numFloats << 2);
},
cbgu_BufferUtils_copy0 = ($src, $srcOffset, $dst, $numElements) => {
    let $byteBuffer, $oldPosition;
    if (!($dst instanceof jn_ByteBuffer)) {
        $dst = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($dst, $rt_s(638));
        $rt_throw($dst);
    }
    $byteBuffer = $dst;
    $oldPosition = $byteBuffer.$position0;
    jn_Buffer_limit($byteBuffer, $oldPosition + $numElements | 0);
    jn_ByteBuffer_put($byteBuffer, $src, $srcOffset, $numElements);
    jn_Buffer_position($byteBuffer, $oldPosition);
},
cbgu_BufferUtils_copy1 = ($src, $dst, $numElements) => {
    let $srcPos, $dstPos, var$6, $srcIsByte, $dstIsByte, var$9, var$10, var$11, var$12;
    $srcPos = $src.$position0;
    $dstPos = $dst.$position0;
    $numElements = $srcPos + $numElements | 0;
    var$6 = $src;
    jn_Buffer_limit(var$6, $numElements);
    $srcIsByte = $src instanceof jn_ByteBuffer;
    $dstIsByte = $dst instanceof jn_ByteBuffer;
    $numElements = $dst.$capacityImpl();
    var$9 = $dst;
    jn_Buffer_limit(var$9, $numElements);
    if ($srcIsByte && $dstIsByte) {
        $dstIsByte = var$9.$position0;
        $srcIsByte = var$6.$position0;
        var$10 = jn_Buffer_remaining(var$6);
        if (jn_Buffer_remaining(var$6)) {
            var$11 = var$9;
            if (var$11.$readOnly0) {
                $src = new jn_ReadOnlyBufferException;
                jl_Exception__init_($src);
                $rt_throw($src);
            }
            if (var$10 >= 0 && $srcIsByte >= 0 && ($srcIsByte + var$10 | 0) <= var$6.$limit0 && $dstIsByte >= 0 && ($dstIsByte + var$10 | 0) <= var$9.$capacityImpl())
                a: {
                    if (var$6 instanceof jn_ByteBufferJsImpl) {
                        $src = var$6;
                        $src = new Int8Array($src.$data0.buffer, $src.$data0.byteOffset + $srcIsByte | 0, var$10);
                        var$11.$data0.set($src, $dstIsByte);
                    } else {
                        if (!jn_ByteBuffer_hasArray(var$6)) {
                            $numElements = 0;
                            $src = var$6;
                            while (true) {
                                if ($numElements >= var$10)
                                    break a;
                                jn_ByteBufferJsImpl_put(var$11, $dstIsByte + $numElements | 0, jn_ByteBufferJsImpl_get($src, $srcIsByte + $numElements | 0));
                                $numElements = $numElements + 1 | 0;
                            }
                        }
                        $src = (jn_ByteBuffer_array(var$6)).data.buffer;
                        $dst = var$6;
                        if ($dst.$array3 === null) {
                            $src = new jl_UnsupportedOperationException;
                            jl_Exception__init_($src);
                            $rt_throw($src);
                        }
                        var$12 = new Int8Array($src, $dst.$arrayOffset + $srcIsByte | 0, var$10);
                        var$11.$data0.set(var$12, $dstIsByte);
                    }
                }
            else {
                $src = new jl_IndexOutOfBoundsException;
                jl_Exception__init_($src);
                $rt_throw($src);
            }
        }
    } else if (!(!$srcIsByte && !($src instanceof jn_CharBuffer)) && !(!$dstIsByte && !($dst instanceof jn_CharBuffer)))
        jn_CharBuffer_put0(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asCharBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asCharBuffer(var$6));
    else if (!(!$srcIsByte && !($src instanceof jn_ShortBuffer)) && !(!$dstIsByte && !($dst instanceof jn_ShortBuffer)))
        jn_ShortBuffer_put0(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asShortBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asShortBuffer(var$6));
    else if (!(!$srcIsByte && !($src instanceof jn_IntBuffer)) && !(!$dstIsByte && !($dst instanceof jn_IntBuffer)))
        jn_IntBuffer_put0(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asIntBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asIntBuffer(var$6));
    else if (!(!$srcIsByte && !($src instanceof jn_LongBuffer)) && !(!$dstIsByte && !($dst instanceof jn_LongBuffer)))
        jn_LongBuffer_put(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asLongBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asLongBuffer(var$6));
    else if (!(!$srcIsByte && !($src instanceof jn_FloatBuffer)) && !(!$dstIsByte && !($dst instanceof jn_FloatBuffer)))
        jn_FloatBuffer_put0(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asFloatBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asFloatBuffer(var$6));
    else {
        b: {
            if (!(!$srcIsByte && !($src instanceof jn_DoubleBuffer))) {
                if ($dstIsByte)
                    break b;
                if ($dst instanceof jn_DoubleBuffer)
                    break b;
            }
            $src = new cbgu_GdxRuntimeException;
            jl_RuntimeException__init_($src, $rt_s(639));
            $rt_throw($src);
        }
        jn_DoubleBuffer_put(!$dstIsByte ? $dst : jn_ByteBufferJsImpl_asDoubleBuffer(var$9), !$srcIsByte ? $src : jn_ByteBufferJsImpl_asDoubleBuffer(var$6));
    }
    jn_Buffer_position(var$6, $srcPos);
    jn_Buffer_position(var$9, $dstPos);
},
cbgu_BufferUtils_newFloatBuffer = $numFloats => {
    let $buffer, var$3, var$4;
    if (cgxgbt_TeaTool_isProd) {
        $buffer = jn_ByteBuffer_allocateDirect($numFloats * 4 | 0);
        jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
        return jn_ByteBufferJsImpl_asFloatBuffer($buffer);
    }
    var$3 = $rt_createFloatArray($numFloats);
    var$4 = var$3.data.length;
    $buffer = jn_FloatBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
    $buffer.$position0 = 0;
    $buffer.$limit0 = 0 + var$4 | 0;
    return $buffer;
},
cbgu_BufferUtils_newByteBuffer = $numBytes => {
    let $buffer;
    if (!cgxgbt_TeaTool_isProd)
        return jn_ByteBuffer_wrap0($rt_createByteArray($numBytes));
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
},
cbgu_BufferUtils_newIntBuffer = $numInts => {
    let $buffer, var$3, var$4;
    if (cgxgbt_TeaTool_isProd) {
        $buffer = jn_ByteBuffer_allocateDirect($numInts * 4 | 0);
        jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
        return jn_ByteBufferJsImpl_asIntBuffer($buffer);
    }
    var$3 = $rt_createIntArray($numInts);
    var$4 = var$3.data.length;
    $buffer = jn_IntBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
    $buffer.$position0 = 0;
    $buffer.$limit0 = 0 + var$4 | 0;
    return $buffer;
},
cbgu_BufferUtils_newUnsafeByteBuffer = $numBytes => {
    let $buffer;
    $buffer = cbgu_BufferUtils_newByteBuffer($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    cbgu_BufferUtils_allocatedUnsafe = cbgu_BufferUtils_allocatedUnsafe + $numBytes | 0;
    cbgu_Array_add(cbgu_BufferUtils_unsafeBuffers, $buffer);
    return $buffer;
},
cbgu_BufferUtils__clinit_ = () => {
    cbgu_BufferUtils_unsafeBuffers = cbgu_Array__init_();
    cbgu_BufferUtils_allocatedUnsafe = 0;
};
function jn_Buffer() {
    let a = this; jl_Object.call(a);
    a.$position0 = 0;
    a.$limit0 = 0;
    a.$mark = 0;
}
let jn_Buffer__init_ = $this => {
    $this.$mark = (-1);
},
jn_Buffer_position = ($this, $newPosition) => {
    let var$2, var$3, var$4;
    if ($newPosition >= 0 && $newPosition <= $this.$limit0) {
        $this.$position0 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(640)), $newPosition), $rt_s(641)), var$3), 93);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_Buffer_limit = ($this, $newLimit) => {
    let var$2;
    if ($newLimit >= 0 && $newLimit <= $this.$capacityImpl()) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit0 = $newLimit;
        if ($this.$position0 > $newLimit)
            $this.$position0 = $newLimit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
jn_Buffer_clear = $this => {
    $this.$position0 = 0;
    $this.$limit0 = $this.$capacityImpl();
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_flip = $this => {
    $this.$limit0 = $this.$position0;
    $this.$position0 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_remaining = $this => {
    return $this.$limit0 - $this.$position0 | 0;
},
jn_Buffer_hasRemaining = $this => {
    return $this.$position0 >= $this.$limit0 ? 0 : 1;
};
function jn_ByteBuffer() {
    jn_Buffer.call(this);
    this.$order0 = null;
}
let jn_ByteBuffer_allocateDirect = $capacity => {
    let $result, var$3;
    if ($capacity < 0) {
        $result = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(642)), $capacity);
        jl_RuntimeException__init_($result, jl_AbstractStringBuilder_toString(var$3));
        $rt_throw($result);
    }
    $result = jn_ByteBufferJsImpl__init_(null, 0, new Int8Array($capacity), 1, 0);
    $result.$limit0 = $capacity;
    return $result;
},
jn_ByteBuffer_allocate = $capacity => {
    let $array, $result, var$4;
    if ($capacity >= 0) {
        $array = $rt_createByteArray($capacity);
        $result = jn_ByteBufferJsImpl__init_($array, 0, $array.data, 0, 0);
        $result.$limit0 = $capacity;
        return $result;
    }
    $result = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(642)), $capacity);
    jl_RuntimeException__init_($result, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw($result);
},
jn_ByteBuffer_wrap = ($array, $offset, $length) => {
    let $data, $result;
    ju_Objects_checkFromIndexSize($offset, $length, $array.data.length);
    $data = $array.data;
    $result = jn_ByteBufferJsImpl__init_($array, 0, $data, 0, 0);
    $result.$position0 = $offset;
    $result.$limit0 = $offset + $length | 0;
    return $result;
},
jn_ByteBuffer_wrap0 = $array => {
    return jn_ByteBuffer_wrap($array, 0, $array.data.length);
},
jn_ByteBuffer_get0 = ($this, $dst, $offset, $length) => {
    let var$4, var$5, var$6;
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$4 = new jn_BufferUnderflowException;
            jl_Exception__init_(var$4);
            $rt_throw(var$4);
        }
        var$5 = $this.$position0;
        var$4 = $this;
        var$6 = new Int8Array(var$4.$data0.buffer, var$4.$data0.byteOffset + var$5 | 0, $length);
        $dst.data.set(var$6, $offset);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
},
jn_ByteBuffer_get = ($this, $dst) => {
    return jn_ByteBuffer_get0($this, $dst, 0, $dst.data.length);
},
jn_ByteBuffer_put = ($this, $src, $offset, $length) => {
    let var$4, var$5, var$6, var$7;
    if (!$length)
        return $this;
    var$4 = $this;
    if (var$4.$readOnly0) {
        var$5 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$5);
        $rt_throw(var$5);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$5 = new jn_BufferOverflowException;
            jl_Exception__init_(var$5);
            $rt_throw(var$5);
        }
        var$6 = $this.$position0;
        var$7 = new Int8Array($src.data.buffer, $offset, $length);
        var$4.$data0.set(var$7, var$6);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$5);
    $rt_throw(var$5);
},
jn_ByteBuffer_hasArray = $this => {
    return $this.$array3 === null ? 0 : 1;
},
jn_ByteBuffer_array = $this => {
    let var$1, var$2;
    var$1 = $this.$array3;
    if (var$1 !== null)
        return var$1;
    var$2 = new jl_UnsupportedOperationException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
jn_ByteBuffer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$position0;
    var$2 = $this.$limit0;
    var$3 = $this.$capacityImpl();
    var$4 = $this.$mark;
    if (var$4 < 0)
        var$5 = $rt_s(643);
    else {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(644)), var$4);
        var$5 = jl_AbstractStringBuilder_toString(var$5);
    }
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$6, $rt_s(645)), var$1), $rt_s(646)), var$2), $rt_s(647)), var$3), $rt_s(648)), var$5), 93);
    return jl_AbstractStringBuilder_toString(var$6);
},
jn_ByteBuffer_hashCode = $this => {
    let $hashCode, $pos, var$3, $i;
    $hashCode = 0;
    $pos = $this.$position0;
    var$3 = $this;
    $i = $pos;
    while ($i < $this.$limit0) {
        $hashCode = (31 * $hashCode | 0) + jn_ByteBufferJsImpl_get(var$3, $pos) | 0;
        $i = $i + 1 | 0;
    }
    return $hashCode;
},
jn_ByteBuffer_equals = ($this, $obj) => {
    let $other, $sz, $a, $b, $i, var$7, var$8;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jn_ByteBuffer))
        return 0;
    $other = $obj;
    $sz = jn_Buffer_remaining($this);
    if ($sz != jn_Buffer_remaining($other))
        return 0;
    $a = $this.$position0;
    $b = $other.$position0;
    $i = 0;
    $other = $other;
    while ($i < $sz) {
        var$7 = $a + 1 | 0;
        $a = jn_ByteBufferJsImpl_get($this, $a);
        var$8 = $b + 1 | 0;
        if ($a != jn_ByteBufferJsImpl_get($other, $b))
            return 0;
        $i = $i + 1 | 0;
        $a = var$7;
        $b = var$8;
    }
    return 1;
},
jn_ByteBuffer_order = ($this, $bo) => {
    $this.$order0 = $bo;
    return $this;
},
jn_ByteBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ByteBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
jn_ByteBuffer_compareTo = ($this, var$1) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    a: {
        var$1 = var$1;
        if ($this === var$1)
            var$2 = 0;
        else {
            var$3 = jl_Math_min(jn_Buffer_remaining($this), jn_Buffer_remaining(var$1));
            var$4 = $this.$position0;
            var$5 = var$1.$position0;
            var$6 = 0;
            var$7 = var$1;
            while (true) {
                if (var$6 >= var$3) {
                    var$2 = $rt_compare(jn_Buffer_remaining($this), jn_Buffer_remaining(var$1));
                    break a;
                }
                var$8 = var$4 + 1 | 0;
                var$4 = jn_ByteBufferJsImpl_get($this, var$4);
                var$9 = var$5 + 1 | 0;
                var$2 = var$4 - jn_ByteBufferJsImpl_get(var$7, var$5) | 0;
                if (var$2)
                    break;
                var$6 = var$6 + 1 | 0;
                var$4 = var$8;
                var$5 = var$9;
            }
        }
    }
    return var$2;
},
cbgggf_FreeType = $rt_classWithoutFields(),
cbgggf_FreeType_FT_PIXEL_MODE_NONE = 0,
cbgggf_FreeType_FT_PIXEL_MODE_MONO = 0,
cbgggf_FreeType_FT_PIXEL_MODE_GRAY = 0,
cbgggf_FreeType_FT_PIXEL_MODE_GRAY2 = 0,
cbgggf_FreeType_FT_PIXEL_MODE_GRAY4 = 0,
cbgggf_FreeType_FT_PIXEL_MODE_LCD = 0,
cbgggf_FreeType_FT_PIXEL_MODE_LCD_V = 0,
cbgggf_FreeType_FT_ENCODING_NONE = 0,
cbgggf_FreeType_FT_ENCODING_MS_SYMBOL = 0,
cbgggf_FreeType_FT_ENCODING_UNICODE = 0,
cbgggf_FreeType_FT_ENCODING_SJIS = 0,
cbgggf_FreeType_FT_ENCODING_GB2312 = 0,
cbgggf_FreeType_FT_ENCODING_BIG5 = 0,
cbgggf_FreeType_FT_ENCODING_WANSUNG = 0,
cbgggf_FreeType_FT_ENCODING_JOHAB = 0,
cbgggf_FreeType_FT_ENCODING_ADOBE_STANDARD = 0,
cbgggf_FreeType_FT_ENCODING_ADOBE_EXPERT = 0,
cbgggf_FreeType_FT_ENCODING_ADOBE_CUSTOM = 0,
cbgggf_FreeType_FT_ENCODING_ADOBE_LATIN_1 = 0,
cbgggf_FreeType_FT_ENCODING_OLD_LATIN_2 = 0,
cbgggf_FreeType_FT_ENCODING_APPLE_ROMAN = 0,
cbgggf_FreeType_FT_FACE_FLAG_SCALABLE = 0,
cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES = 0,
cbgggf_FreeType_FT_FACE_FLAG_FIXED_WIDTH = 0,
cbgggf_FreeType_FT_FACE_FLAG_SFNT = 0,
cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL = 0,
cbgggf_FreeType_FT_FACE_FLAG_VERTICAL = 0,
cbgggf_FreeType_FT_FACE_FLAG_KERNING = 0,
cbgggf_FreeType_FT_FACE_FLAG_FAST_GLYPHS = 0,
cbgggf_FreeType_FT_FACE_FLAG_MULTIPLE_MASTERS = 0,
cbgggf_FreeType_FT_FACE_FLAG_GLYPH_NAMES = 0,
cbgggf_FreeType_FT_FACE_FLAG_EXTERNAL_STREAM = 0,
cbgggf_FreeType_FT_FACE_FLAG_HINTER = 0;
let cbgggf_FreeType_FT_FACE_FLAG_CID_KEYED = 0,
cbgggf_FreeType_FT_FACE_FLAG_TRICKY = 0,
cbgggf_FreeType_FT_STYLE_FLAG_ITALIC = 0,
cbgggf_FreeType_FT_STYLE_FLAG_BOLD = 0,
cbgggf_FreeType_FT_LOAD_DEFAULT = 0,
cbgggf_FreeType_FT_LOAD_NO_SCALE = 0,
cbgggf_FreeType_FT_LOAD_NO_HINTING = 0,
cbgggf_FreeType_FT_LOAD_RENDER = 0,
cbgggf_FreeType_FT_LOAD_NO_BITMAP = 0,
cbgggf_FreeType_FT_LOAD_VERTICAL_LAYOUT = 0,
cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT = 0,
cbgggf_FreeType_FT_LOAD_CROP_BITMAP = 0,
cbgggf_FreeType_FT_LOAD_PEDANTIC = 0,
cbgggf_FreeType_FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 0,
cbgggf_FreeType_FT_LOAD_NO_RECURSE = 0,
cbgggf_FreeType_FT_LOAD_IGNORE_TRANSFORM = 0,
cbgggf_FreeType_FT_LOAD_MONOCHROME = 0,
cbgggf_FreeType_FT_LOAD_LINEAR_DESIGN = 0,
cbgggf_FreeType_FT_LOAD_NO_AUTOHINT = 0,
cbgggf_FreeType_FT_LOAD_TARGET_NORMAL = 0,
cbgggf_FreeType_FT_LOAD_TARGET_LIGHT = 0,
cbgggf_FreeType_FT_LOAD_TARGET_MONO = 0,
cbgggf_FreeType_FT_LOAD_TARGET_LCD = 0,
cbgggf_FreeType_FT_LOAD_TARGET_LCD_V = 0,
cbgggf_FreeType_FT_RENDER_MODE_NORMAL = 0,
cbgggf_FreeType_FT_RENDER_MODE_LIGHT = 0,
cbgggf_FreeType_FT_RENDER_MODE_MONO = 0,
cbgggf_FreeType_FT_RENDER_MODE_LCD = 0,
cbgggf_FreeType_FT_RENDER_MODE_LCD_V = 0,
cbgggf_FreeType_FT_RENDER_MODE_MAX = 0,
cbgggf_FreeType_FT_KERNING_DEFAULT = 0,
cbgggf_FreeType_FT_KERNING_UNFITTED = 0,
cbgggf_FreeType_FT_KERNING_UNSCALED = 0,
cbgggf_FreeType_FT_STROKER_LINECAP_BUTT = 0,
cbgggf_FreeType_FT_STROKER_LINECAP_ROUND = 0,
cbgggf_FreeType_FT_STROKER_LINECAP_SQUARE = 0,
cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND = 0,
cbgggf_FreeType_FT_STROKER_LINEJOIN_BEVEL = 0,
cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_VARIABLE = 0,
cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER = 0,
cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED = 0,
cbgggf_FreeType_nativeFree = $address => {
    Module._free($address);
},
cbgggf_FreeType_encode = ($a, $b, $c, $d) => {
    return $a << 24 | $b << 16 | $c << 8 | $d;
},
cbgggf_FreeType_toInt = $value => {
    return (($value + 63 | 0) & (-64)) >> 6;
},
cbgggf_FreeType__clinit_ = () => {
    cbgggf_FreeType_FT_PIXEL_MODE_NONE = 0;
    cbgggf_FreeType_FT_PIXEL_MODE_MONO = 1;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY = 2;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY2 = 3;
    cbgggf_FreeType_FT_PIXEL_MODE_GRAY4 = 4;
    cbgggf_FreeType_FT_PIXEL_MODE_LCD = 5;
    cbgggf_FreeType_FT_PIXEL_MODE_LCD_V = 6;
    cbgggf_FreeType_FT_ENCODING_NONE = 0;
    cbgggf_FreeType_FT_ENCODING_MS_SYMBOL = cbgggf_FreeType_encode(115, 121, 109, 98);
    cbgggf_FreeType_FT_ENCODING_UNICODE = cbgggf_FreeType_encode(117, 110, 105, 99);
    cbgggf_FreeType_FT_ENCODING_SJIS = cbgggf_FreeType_encode(115, 106, 105, 115);
    cbgggf_FreeType_FT_ENCODING_GB2312 = cbgggf_FreeType_encode(103, 98, 32, 32);
    cbgggf_FreeType_FT_ENCODING_BIG5 = cbgggf_FreeType_encode(98, 105, 103, 53);
    cbgggf_FreeType_FT_ENCODING_WANSUNG = cbgggf_FreeType_encode(119, 97, 110, 115);
    cbgggf_FreeType_FT_ENCODING_JOHAB = cbgggf_FreeType_encode(106, 111, 104, 97);
    cbgggf_FreeType_FT_ENCODING_ADOBE_STANDARD = cbgggf_FreeType_encode(65, 68, 79, 66);
    cbgggf_FreeType_FT_ENCODING_ADOBE_EXPERT = cbgggf_FreeType_encode(65, 68, 66, 69);
    cbgggf_FreeType_FT_ENCODING_ADOBE_CUSTOM = cbgggf_FreeType_encode(65, 68, 66, 67);
    cbgggf_FreeType_FT_ENCODING_ADOBE_LATIN_1 = cbgggf_FreeType_encode(108, 97, 116, 49);
    cbgggf_FreeType_FT_ENCODING_OLD_LATIN_2 = cbgggf_FreeType_encode(108, 97, 116, 50);
    cbgggf_FreeType_FT_ENCODING_APPLE_ROMAN = cbgggf_FreeType_encode(97, 114, 109, 110);
    cbgggf_FreeType_FT_FACE_FLAG_SCALABLE = 1;
    cbgggf_FreeType_FT_FACE_FLAG_FIXED_SIZES = 2;
    cbgggf_FreeType_FT_FACE_FLAG_FIXED_WIDTH = 4;
    cbgggf_FreeType_FT_FACE_FLAG_SFNT = 8;
    cbgggf_FreeType_FT_FACE_FLAG_HORIZONTAL = 16;
    cbgggf_FreeType_FT_FACE_FLAG_VERTICAL = 32;
    cbgggf_FreeType_FT_FACE_FLAG_KERNING = 64;
    cbgggf_FreeType_FT_FACE_FLAG_FAST_GLYPHS = 128;
    cbgggf_FreeType_FT_FACE_FLAG_MULTIPLE_MASTERS = 256;
    cbgggf_FreeType_FT_FACE_FLAG_GLYPH_NAMES = 512;
    cbgggf_FreeType_FT_FACE_FLAG_EXTERNAL_STREAM = 1024;
    cbgggf_FreeType_FT_FACE_FLAG_HINTER = 2048;
    cbgggf_FreeType_FT_FACE_FLAG_CID_KEYED = 4096;
    cbgggf_FreeType_FT_FACE_FLAG_TRICKY = 8192;
    cbgggf_FreeType_FT_STYLE_FLAG_ITALIC = 1;
    cbgggf_FreeType_FT_STYLE_FLAG_BOLD = 2;
    cbgggf_FreeType_FT_LOAD_DEFAULT = 0;
    cbgggf_FreeType_FT_LOAD_NO_SCALE = 1;
    cbgggf_FreeType_FT_LOAD_NO_HINTING = 2;
    cbgggf_FreeType_FT_LOAD_RENDER = 4;
    cbgggf_FreeType_FT_LOAD_NO_BITMAP = 8;
    cbgggf_FreeType_FT_LOAD_VERTICAL_LAYOUT = 16;
    cbgggf_FreeType_FT_LOAD_FORCE_AUTOHINT = 32;
    cbgggf_FreeType_FT_LOAD_CROP_BITMAP = 64;
    cbgggf_FreeType_FT_LOAD_PEDANTIC = 128;
    cbgggf_FreeType_FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 512;
    cbgggf_FreeType_FT_LOAD_NO_RECURSE = 1024;
    cbgggf_FreeType_FT_LOAD_IGNORE_TRANSFORM = 2048;
    cbgggf_FreeType_FT_LOAD_MONOCHROME = 4096;
    cbgggf_FreeType_FT_LOAD_LINEAR_DESIGN = 8192;
    cbgggf_FreeType_FT_LOAD_NO_AUTOHINT = 32768;
    cbgggf_FreeType_FT_LOAD_TARGET_NORMAL = 0;
    cbgggf_FreeType_FT_LOAD_TARGET_LIGHT = 65536;
    cbgggf_FreeType_FT_LOAD_TARGET_MONO = 131072;
    cbgggf_FreeType_FT_LOAD_TARGET_LCD = 196608;
    cbgggf_FreeType_FT_LOAD_TARGET_LCD_V = 262144;
    cbgggf_FreeType_FT_RENDER_MODE_NORMAL = 0;
    cbgggf_FreeType_FT_RENDER_MODE_LIGHT = 1;
    cbgggf_FreeType_FT_RENDER_MODE_MONO = 2;
    cbgggf_FreeType_FT_RENDER_MODE_LCD = 3;
    cbgggf_FreeType_FT_RENDER_MODE_LCD_V = 4;
    cbgggf_FreeType_FT_RENDER_MODE_MAX = 5;
    cbgggf_FreeType_FT_KERNING_DEFAULT = 0;
    cbgggf_FreeType_FT_KERNING_UNFITTED = 1;
    cbgggf_FreeType_FT_KERNING_UNSCALED = 2;
    cbgggf_FreeType_FT_STROKER_LINECAP_BUTT = 0;
    cbgggf_FreeType_FT_STROKER_LINECAP_ROUND = 1;
    cbgggf_FreeType_FT_STROKER_LINECAP_SQUARE = 2;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_ROUND = 0;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_BEVEL = 1;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_VARIABLE = 2;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER = 2;
    cbgggf_FreeType_FT_STROKER_LINEJOIN_MITER_FIXED = 3;
},
jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer),
jn_FloatBuffer_put0 = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
},
jn_FloatBuffer_put = ($this, $src, $offset, $length) => {
    let var$4;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl0($this.$position0, $src, $offset, $length);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
},
jn_FloatBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_FloatBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
};
let jn_FloatBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_FloatBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_FloatBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_FloatBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer),
jn_ShortBuffer_put0 = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl1($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
},
jn_ShortBuffer_put = ($this, $src, $offset, $length) => {
    let var$4;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl2($this.$position0, $src, $offset, $length);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
},
jn_ShortBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_ShortBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_ShortBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_ShortBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_ShortBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ShortBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
cgxgbt_TeaTool = $rt_classWithoutFields(),
cgxgbt_TeaTool_isProd = 0,
cgxgbt_TeaTool__clinit_ = () => {
    cgxgbt_TeaTool_isProd = 1;
},
jn_IntBuffer = $rt_classWithoutFields(jn_Buffer),
jn_IntBuffer_put0 = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl3($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
},
jn_IntBuffer_put1 = ($this, $src, $offset, $length) => {
    let var$4;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Exception__init_(var$4);
        $rt_throw(var$4);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl4($this.$position0, $src, $offset, $length);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
},
jn_IntBuffer_put = ($this, $src) => {
    return jn_IntBuffer_put1($this, $src, 0, $src.data.length);
},
jn_IntBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
};
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name6 = null;
}
let jn_ByteOrder_BIG_ENDIAN = null,
jn_ByteOrder_LITTLE_ENDIAN = null,
jn_ByteOrder_nativeOrder0 = null,
jn_ByteOrder__init_0 = ($this, $name) => {
    $this.$name6 = $name;
},
jn_ByteOrder__init_ = var_0 => {
    let var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
},
jn_ByteOrder_nativeOrder = () => {
    let $buffer;
    if (jn_ByteOrder_nativeOrder0 === null) {
        $buffer = new ArrayBuffer(2);
        (new Int16Array($buffer))[0] = 1;
        jn_ByteOrder_nativeOrder0 = (new Int8Array($buffer))[0] ? jn_ByteOrder_LITTLE_ENDIAN : jn_ByteOrder_BIG_ENDIAN;
    }
    return jn_ByteOrder_nativeOrder0;
},
jn_ByteOrder__clinit_ = () => {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(649));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(650));
},
jn_JSBufferHelper = $rt_classWithoutFields(),
jn_JSBufferHelper_getArrayBufferView = $buffer => {
    let $provider;
    if ($rt_isInstance($buffer, jn_ArrayBufferViewProvider))
        return $buffer.$getArrayBufferView0();
    $provider = new jl_IllegalArgumentException;
    jl_RuntimeException__init_($provider, $rt_s(651));
    $rt_throw($provider);
},
jn_JSBufferHelper_toInt8Array = $view => {
    return new Int8Array($view.buffer, $view.byteOffset, $view.byteLength);
},
jn_ArrayBufferViewProvider = $rt_classWithoutFields(0);
function jn_ByteBufferJsImpl() {
    let a = this; jn_ByteBuffer.call(a);
    a.$array3 = null;
    a.$arrayOffset = 0;
    a.$data0 = null;
    a.$direct = 0;
    a.$readOnly0 = 0;
}
let jn_ByteBufferJsImpl__init_0 = ($this, $array, $arrayOffset, $data, $direct, $readOnly) => {
    jn_Buffer__init_($this);
    $this.$order0 = jn_ByteOrder_BIG_ENDIAN;
    $this.$array3 = $array;
    $this.$arrayOffset = $arrayOffset;
    $this.$data0 = $data;
    $this.$direct = $direct;
    $this.$readOnly0 = $readOnly;
},
jn_ByteBufferJsImpl__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ByteBufferJsImpl();
    jn_ByteBufferJsImpl__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ByteBufferJsImpl_capacityImpl = $this => {
    return $this.$data0.length;
},
jn_ByteBufferJsImpl_get = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$data0[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
jn_ByteBufferJsImpl_put = ($this, $index, $b) => {
    let var$3;
    if ($this.$readOnly0) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$data0[$index] = $b;
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$3);
    $rt_throw(var$3);
},
jn_ByteBufferJsImpl_asCharBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Uint16Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_CharBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 2 | 0);
    var$3 = new jn_CharBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_CharBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly12 = var$4;
    var$3.$data9 = $slice;
    var$3.$littleEndian2 = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asShortBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int16Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_ShortBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 2 | 0);
    var$3 = new jn_ShortBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_ShortBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly4 = var$4;
    var$3.$data5 = $slice;
    var$3.$littleEndian1 = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asIntBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_IntBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 4 | 0);
    var$3 = new jn_IntBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_IntBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly3 = var$4;
    var$3.$data6 = $slice;
    var$3.$littleEndian0 = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asLongBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5, var$6, var$7;
    $sz = jn_Buffer_remaining($this) / 8 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new BigInt64Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        var$3 = new jn_LongBufferOverTypedArray;
        var$4 = $this.$readOnly0;
        var$5 = null;
        jn_LongBufferImpl__init_(var$3, 0, $sz);
        var$3.$readOnly11 = var$4;
        var$3.$data13 = $slice;
        var$3.$array10 = var$5;
        return var$3;
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 8 | 0);
    var$5 = new jn_LongBufferOverDataView;
    var$6 = $this.$readOnly0;
    var$7 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_LongBufferImpl__init_(var$5, 0, $sz);
    var$5.$readOnly8 = var$6;
    var$5.$data11 = $slice;
    var$5.$littleEndian4 = var$7;
    return var$5;
},
jn_ByteBufferJsImpl_asFloatBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Float32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_FloatBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 4 | 0);
    var$3 = new jn_FloatBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_FloatBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly5 = var$4;
    var$3.$data3 = $slice;
    var$3.$littleEndian = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asDoubleBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5, var$6, var$7;
    $sz = jn_Buffer_remaining($this) / 8 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Float64Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        var$3 = new jn_DoubleBufferOverTypedArray;
        var$4 = $this.$readOnly0;
        var$5 = null;
        jn_DoubleBufferImpl__init_(var$3, 0, $sz);
        var$3.$readOnly9 = var$4;
        var$3.$data12 = $slice;
        var$3.$array12 = var$5;
        return var$3;
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 8 | 0);
    var$5 = new jn_DoubleBufferOverDataView;
    var$6 = $this.$readOnly0;
    var$7 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_DoubleBufferImpl__init_(var$5, 0, $sz);
    var$5.$readOnly7 = var$6;
    var$5.$data10 = $slice;
    var$5.$littleEndian3 = var$7;
    return var$5;
},
jn_ByteBufferJsImpl_getArrayBufferView = $this => {
    return $this.$data0;
};
function cbgggf_FreeType$Pointer() {
    jl_Object.call(this);
    this.$address = 0;
}
let cbgggf_FreeType$Pointer__init_ = ($this, $address) => {
    $this.$address = $address;
},
cbgggf_FreeType$Pointer__init_0 = var_0 => {
    let var_1 = new cbgggf_FreeType$Pointer();
    cbgggf_FreeType$Pointer__init_(var_1, var_0);
    return var_1;
};
function cbgggf_FreeType$Library() {
    cbgggf_FreeType$Pointer.call(this);
    this.$fontData = null;
}
let cbgggf_FreeType$Library_createStroker = $this => {
    let $stroker, var$2, var$3;
    $stroker = Module._c_Library_strokerNew($this.$address);
    if ($stroker) {
        var$2 = new cbgggf_FreeType$Stroker;
        cbgggf_FreeType$Pointer__init_(var$2, $stroker);
        return var$2;
    }
    var$2 = new cbgu_GdxRuntimeException;
    $stroker = Module._c_FreeType_getLastErrorCode();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(652)), $stroker);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw(var$2);
},
cbgggf_FreeType$Library_newMemoryFace$js_body$_6 = (var$1, var$2, var$3, var$4, var$5) => {
    var address = Module._malloc(var$2.length);
    var$5[0] = address;
    Module.writeArrayToMemory(var$2, address);
    var ret = Module._c_Library_newMemoryFace(var$1, address, var$3, var$4);
    return ret;
};
function cbgu_LongMap() {
    let a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable0 = null;
    a.$valueTable0 = null;
    a.$zeroValue0 = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold4 = 0;
    a.$shift = 0;
    a.$mask3 = 0;
    a.$values1 = null;
    a.$values2 = null;
}
let cbgu_LongMap_place = ($this, var$1) => {
    return Long_lo(Long_shru(Long_mul(Long_xor(var$1, Long_shru(var$1, 32)), Long_create(2135587861, 2654435769)), $this.$shift));
},
cbgu_LongMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable0;
    $i = cbgu_LongMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (Long_eq($other, Long_ZERO))
            return  -($i + 1 | 0) | 0;
        if (Long_eq($other, $key))
            break;
        $i = ($i + 1 | 0) & $this.$mask3;
    }
    return $i;
},
cbgu_LongMap_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, $oldValueTable, $i, $key, var$8, var$9, var$10;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor1 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask3 = var$3;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable0 = $rt_createLongArray($newSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $newSize);
        if ($this.$size6 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if (Long_ne($key, Long_ZERO)) {
                    var$8 = $oldValueTable.data[$i];
                    var$9 = $this.$keyTable0;
                    $newSize = cbgu_LongMap_place($this, $key);
                    while (true) {
                        var$10 = var$9.data;
                        if (Long_eq(var$10[$newSize], Long_ZERO))
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask3;
                    }
                    var$10[$newSize] = $key;
                    $this.$valueTable0.data[$newSize] = var$8;
                }
                $i = $i + 1 | 0;
            }
        }
    }
};
function cbgggf_FreeType$Face() {
    cbgggf_FreeType$Pointer.call(this);
    this.$library0 = null;
}
let cbgggf_FreeType$Face_getFaceFlags = $this => {
    return Module._c_Face_getFaceFlags($this.$address);
},
cbgggf_FreeType$Face_getNumGlyphs = $this => {
    return Module._c_Face_getNumGlyphs($this.$address);
},
cbgggf_FreeType$Face_getMaxAdvanceWidth = $this => {
    return Module._c_Face_getMaxAdvanceWidth($this.$address);
},
cbgggf_FreeType$Face_getGlyph = $this => {
    let var$1;
    var$1 = new cbgggf_FreeType$GlyphSlot;
    cbgggf_FreeType$Pointer__init_(var$1, Module._c_Face_getGlyph($this.$address));
    return var$1;
},
cbgggf_FreeType$Face_getSize = $this => {
    let var$1;
    var$1 = new cbgggf_FreeType$Size;
    cbgggf_FreeType$Pointer__init_(var$1, Module._c_Face_getSize($this.$address));
    return var$1;
},
cbgggf_FreeType$Face_hasKerning = $this => {
    return !!Module._c_Face_hasKerning($this.$address) ? 1 : 0;
},
cbgggf_FreeType$Face_getKerning = ($this, $leftGlyph, $rightGlyph, $kernMode) => {
    return Module._c_Face_getKerning($this.$address, $leftGlyph, $rightGlyph, $kernMode);
},
cbgggf_FreeType$Face_getCharIndex = ($this, $charCode) => {
    return Module._c_Face_getCharIndex($this.$address, $charCode);
},
cbgggf_FreeType$GlyphSlot = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$GlyphSlot_getMetrics = $this => {
    let var$1;
    var$1 = new cbgggf_FreeType$GlyphMetrics;
    cbgggf_FreeType$Pointer__init_(var$1, Module._c_GlyphSlot_getMetrics($this.$address));
    return var$1;
},
cbgggf_FreeType$GlyphSlot_getFormat = $this => {
    return Module._c_GlyphSlot_getFormat($this.$address);
},
cbgggf_FreeType$GlyphSlot_getGlyph = $this => {
    let $glyph, var$2, var$3;
    $glyph = Module._c_GlyphSlot_getGlyph($this.$address);
    if ($glyph) {
        var$2 = new cbgggf_FreeType$Glyph;
        cbgggf_FreeType$Pointer__init_(var$2, $glyph);
        return var$2;
    }
    var$2 = new cbgu_GdxRuntimeException;
    $glyph = Module._c_FreeType_getLastErrorCode();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(653)), $glyph);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw(var$2);
},
jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer),
jn_IntBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_IntBufferImpl_get0 = $this => {
    let var$1, var$2;
    var$1 = $this.$position0;
    if (var$1 < $this.$limit0) {
        $this.$position0 = var$1 + 1 | 0;
        return $this.$getElement(var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
jn_IntBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_IntBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    $b = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), $b), 41);
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_IntBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_IntBufferOverTypedArray() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly10 = 0;
    a.$data7 = null;
    a.$array13 = null;
}
let jn_IntBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_IntBufferImpl__init_($this, $position, $limit);
    $this.$readOnly10 = $readOnly;
    $this.$data7 = $data;
    $this.$array13 = $array;
},
jn_IntBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_IntBufferOverTypedArray();
    jn_IntBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_IntBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly10;
},
jn_IntBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data7[$index];
},
jn_IntBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data7[$index] = $value;
},
jn_IntBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data7.length;
},
jn_IntBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $slice;
    $slice = $src.data.buffer;
    $offset = $offset * 4 | 0;
    $slice = new Int32Array($slice, $offset, $length);
    $this.$data7.set($slice, $index);
},
jn_IntBufferOverTypedArray_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_IntBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data7;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_IntBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data7.buffer;
        $offset = $srcImpl.$data7.byteOffset + ($index * 4 | 0) | 0;
        $slice = new Int32Array($slice, $offset, $length);
        $this.$data7.set($slice, $index);
    }
},
otjt_Int32Array = $rt_classWithoutFields(otjt_TypedArray),
jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer),
jn_FloatBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_FloatBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_FloatBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4, var$5;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Exception__init_(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement0($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit0;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(654)), $index), $rt_s(641)), var$4), 41);
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jn_FloatBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_FloatBufferOverTypedArray() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$data4 = null;
    a.$array9 = null;
}
let jn_FloatBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_FloatBufferImpl__init_($this, $position, $limit);
    $this.$readOnly6 = $readOnly;
    $this.$data4 = $data;
    $this.$array9 = $array;
},
jn_FloatBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_FloatBufferOverTypedArray();
    jn_FloatBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_FloatBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly6;
},
jn_FloatBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data4[$index];
},
jn_FloatBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data4[$index] = $value;
},
jn_FloatBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data4.length;
},
jn_FloatBufferOverTypedArray_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let $slice;
    $slice = $src.data.buffer;
    $offset = $offset * 4 | 0;
    $slice = new Float32Array($slice, $offset, $length);
    $this.$data4.set($slice, $index);
},
jn_FloatBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_FloatBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data4;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_FloatBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data4.buffer;
        $offset = $srcImpl.$data4.byteOffset + ($index * 4 | 0) | 0;
        $slice = new Float32Array($slice, $offset, $length);
        $this.$data4.set($slice, $index);
    }
},
jn_FloatBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data4;
},
otjt_Float32Array = $rt_classWithoutFields(otjt_TypedArray),
jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer),
jn_ShortBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_ShortBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement1($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_ShortBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_ShortBufferOverTypedArray() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$data8 = null;
    a.$array11 = null;
}
let jn_ShortBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_ShortBufferImpl__init_($this, $position, $limit);
    $this.$readOnly2 = $readOnly;
    $this.$data8 = $data;
    $this.$array11 = $array;
},
jn_ShortBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ShortBufferOverTypedArray();
    jn_ShortBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ShortBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly2;
},
jn_ShortBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data8[$index];
},
jn_ShortBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data8.length;
},
jn_ShortBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $slice;
    $slice = $src.data.buffer;
    $offset = $offset * 2 | 0;
    $slice = new Int16Array($slice, $offset, $length);
    $this.$data8.set($slice, $index);
},
jn_ShortBufferOverTypedArray_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_ShortBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data8;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_ShortBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data8.buffer;
        $offset = $srcImpl.$data8.byteOffset + ($index * 2 | 0) | 0;
        $slice = new Int16Array($slice, $offset, $length);
        $this.$data8.set($slice, $index);
    }
},
jn_ShortBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data8;
},
otjt_Int16Array = $rt_classWithoutFields(otjt_TypedArray),
jus_BaseStream = $rt_classWithoutFields(0),
jus_Stream = $rt_classWithoutFields(0),
jusi_SimpleStreamImpl = $rt_classWithoutFields(),
jusi_SimpleStreamImpl_filter = ($this, $predicate) => {
    let var$2;
    var$2 = new jusi_FilteringStreamImpl;
    var$2.$sourceStream = $this;
    var$2.$filter1 = $predicate;
    return var$2;
};
function jusi_StreamOverSpliterator() {
    jusi_SimpleStreamImpl.call(this);
    this.$spliterator = null;
}
function jn_IntBufferOverDataView() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly3 = 0;
    a.$data6 = null;
    a.$littleEndian0 = 0;
}
let jn_IntBufferOverDataView_readOnly = $this => {
    return $this.$readOnly3;
},
jn_IntBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data6.getInt32($index * 4 | 0, !!$this.$littleEndian0);
},
jn_IntBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4;
    var$3 = $this.$data6;
    $index = $index * 4 | 0;
    var$4 = $this.$littleEndian0;
    var$3.setInt32($index, $value, !!var$4);
},
jn_IntBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_IntBufferOverDataView)) {
            var$5 = $index * 4 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data6;
                $index = $offset + 1 | 0;
                $destArray.setInt32(var$5, jn_IntBufferImpl_get($srcArray, $offset), !!$this.$littleEndian0);
                var$5 = var$5 + 4 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 4 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data6.buffer;
        $offset = $srcImpl.$data6.byteOffset + ($offset * 4 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data6.buffer, $this.$data6.byteOffset + ($index * 4 | 0) | 0, var$5)).set($srcArray, 0);
    }
},
jn_IntBufferOverDataView_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8;
    $index = $index * 4 | 0;
    while (true) {
        var$5 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $src.data;
        var$7 = $this.$data6;
        var$8 = $offset + 1 | 0;
        $offset = var$6[$offset];
        $length = $this.$littleEndian0;
        var$7.setInt32($index, $offset, !!$length);
        $index = $index + 4 | 0;
        $length = var$5;
        $offset = var$8;
    }
},
jn_IntBufferOverDataView_capacityImpl = $this => {
    return $this.$data6.byteLength / 4 | 0;
};
function jn_FloatBufferOverDataView() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly5 = 0;
    a.$data3 = null;
    a.$littleEndian = 0;
}
let jn_FloatBufferOverDataView_readOnly = $this => {
    return $this.$readOnly5;
},
jn_FloatBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data3.getFloat32($index * 4 | 0, !!$this.$littleEndian);
},
jn_FloatBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4;
    var$3 = $this.$data3;
    $index = $index * 4 | 0;
    var$4 = $this.$littleEndian;
    var$3.setFloat32($index, $value, !!var$4);
},
jn_FloatBufferOverDataView_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_FloatBufferOverDataView)) {
            var$5 = $index * 4 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data3;
                $index = $offset + 1 | 0;
                $destArray.setFloat32(var$5, jn_FloatBufferImpl_get($srcArray, $offset), !!$this.$littleEndian);
                var$5 = var$5 + 4 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 4 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data3.buffer;
        $offset = $srcImpl.$data3.byteOffset + ($offset * 4 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data3.buffer, $this.$data3.byteOffset + ($index * 4 | 0) | 0, var$5)).set($srcArray, 0);
    }
},
jn_FloatBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8, var$9;
    $index = $index * 4 | 0;
    while (true) {
        var$5 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $src.data;
        var$7 = $this.$data3;
        var$8 = $offset + 1 | 0;
        var$9 = var$6[$offset];
        $offset = $this.$littleEndian;
        var$7.setFloat32($index, var$9, !!$offset);
        $index = $index + 4 | 0;
        $length = var$5;
        $offset = var$8;
    }
},
jn_FloatBufferOverDataView_capacityImpl = $this => {
    return $this.$data3.byteLength / 4 | 0;
},
jn_FloatBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data3;
},
cbgu_StreamUtils = $rt_classWithoutFields(),
cbgu_StreamUtils_EMPTY_BYTES = null,
cbgu_StreamUtils_copyStream = ($input, $output) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $rt_createByteArray(4096);
    var$4 = $output.$position0;
    var$5 = 0;
    var$6 = $output;
    while (true) {
        var$7 = ji_InputStream_read($input, var$3);
        if (var$7 == (-1))
            break;
        cbgu_BufferUtils_copy0(var$3, 0, $output, var$7);
        var$5 = var$5 + var$7 | 0;
        jn_Buffer_position(var$6, var$4 + var$5 | 0);
    }
    jn_Buffer_position(var$6, var$4);
},
cbgu_StreamUtils_copyStreamToByteArray = ($input, $estimatedSize) => {
    let $baos, var$4, var$5, var$6;
    $baos = new cbgu_StreamUtils$OptimizedByteArrayOutputStream;
    ji_ByteArrayOutputStream__init_($baos, jl_Math_max(0, $estimatedSize));
    var$4 = $rt_createByteArray(4096);
    var$5 = $baos;
    while (true) {
        var$6 = ji_InputStream_read($input, var$4);
        if (var$6 == (-1))
            break;
        ji_ByteArrayOutputStream_write(var$5, var$4, 0, var$6);
    }
    return cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray($baos);
},
cbgu_StreamUtils_closeQuietly = $c => {
    let $$je;
    a: {
        if ($c !== null)
            try {
                $c.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
},
cbgu_StreamUtils__clinit_ = () => {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
},
ji_IOException = $rt_classWithoutFields(jl_Exception);
function jn_ShortBufferOverDataView() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly4 = 0;
    a.$data5 = null;
    a.$littleEndian1 = 0;
}
let jn_ShortBufferOverDataView_readOnly = $this => {
    return $this.$readOnly4;
},
jn_ShortBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data5.getInt16($index * 2 | 0, !!$this.$littleEndian1);
},
jn_ShortBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_ShortBufferOverDataView)) {
            var$5 = $index * 2 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data5;
                $index = $offset + 1 | 0;
                $destArray.setInt16(var$5, jn_ShortBufferImpl_get($srcArray, $offset), !!$this.$littleEndian1);
                var$5 = var$5 + 2 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 2 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data5.buffer;
        $offset = $srcImpl.$data5.byteOffset + ($offset * 2 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data5.buffer, $this.$data5.byteOffset + ($index * 2 | 0) | 0, var$5)).set($srcArray, 0);
    }
},
jn_ShortBufferOverDataView_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8;
    $index = $index * 2 | 0;
    while (true) {
        var$5 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $src.data;
        var$7 = $this.$data5;
        var$8 = $offset + 1 | 0;
        $offset = var$6[$offset];
        $length = $this.$littleEndian1;
        var$7.setInt16($index, $offset, !!$length);
        $index = $index + 2 | 0;
        $length = var$5;
        $offset = var$8;
    }
},
jn_ShortBufferOverDataView_capacityImpl = $this => {
    return $this.$data5.byteLength / 2 | 0;
},
jn_ShortBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data5;
},
jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException),
jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException),
jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_TeaBlob() {
    let a = this; jl_Object.call(a);
    a.$response = null;
    a.$data15 = null;
}
let cbgur_ArrayReflection = $rt_classWithoutFields(),
dcgbmc_DrawingException = $rt_classWithoutFields(jl_RuntimeException),
dcgb_SoundsManager = $rt_classWithoutFields(dcgb_Manager),
dcgb_SoundsManager_sounds = null,
dcgb_SoundsManager_$callClinit = () => {
    dcgb_SoundsManager_$callClinit = $rt_eraseClinit(dcgb_SoundsManager);
    dcgb_SoundsManager__clinit_();
},
dcgb_SoundsManager__clinit_ = () => {
    dcgb_SoundsManager_sounds = ju_HashMap__init_();
};
function cgxgbt_TeaFileHandle() {
    let a = this; cbgf_FileHandle.call(a);
    a.$file = null;
    a.$type0 = null;
    a.$teaFiles = null;
}
let cgxgbt_TeaFileHandle__init_0 = ($this, $teaFiles, $fileName, $type) => {
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        $teaFiles = new cbgu_GdxRuntimeException;
        $fileName = jl_String_valueOf($type);
        $type = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($type);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($type, $rt_s(655)), $fileName), $rt_s(656));
        jl_RuntimeException__init_($teaFiles, jl_AbstractStringBuilder_toString($type));
        $rt_throw($teaFiles);
    }
    $fileName = jl_String_replace($fileName, $rt_s(433), $rt_s(83));
    if (jl_String_endsWith($fileName, $rt_s(83)))
        $fileName = jl_String_substring($fileName, 0, $fileName.$nativeString.length - 1 | 0);
    $this.$file = $fileName;
    $this.$type0 = $type;
    $this.$teaFiles = $teaFiles;
},
cgxgbt_TeaFileHandle__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbt_TeaFileHandle_type = $this => {
    return $this.$type0;
},
cgxgbt_TeaFileHandle_read = $this => {
    let $exists, $input, var$3, var$4, var$5;
    $exists = cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $this.$type0), $this);
    $input = $this.$type0;
    var$3 = cbg_Files$FileType_Classpath;
    if ($input !== var$3 && !($input === cbg_Files$FileType_Internal && !$exists) && !($input === cbg_Files$FileType_Local && !$exists))
        return cgxgbtf_MemoryFileStorage_read(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $input), $this);
    $input = cgxgbtf_MemoryFileStorage_read(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, var$3), $this);
    if ($input !== null)
        return $input;
    $input = new cbgu_GdxRuntimeException;
    var$3 = $this.$file;
    var$4 = jl_String_valueOf($this.$type0);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(657)), var$3), $rt_s(658)), var$4), 41);
    jl_RuntimeException__init_($input, jl_AbstractStringBuilder_toString(var$5));
    $rt_throw($input);
},
cgxgbt_TeaFileHandle_parent = $this => {
    let var$1, $index, $dir;
    var$1 = $this.$file;
    $index = jl_String_lastIndexOf1(var$1, $rt_s(83), var$1.$nativeString.length);
    $dir = $rt_s(8);
    if ($index > 0)
        $dir = jl_String_substring($this.$file, 0, $index);
    return cgxgbt_TeaFileHandle__init_($this.$teaFiles, $dir, $this.$type0);
},
cgxgbt_TeaFileHandle_exists = $this => {
    let $exists;
    a: {
        $exists = cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $this.$type0), $this);
        cgxgbt_TeaFileHandle$1_$callClinit();
        switch (cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[$this.$type0.$ordinal0]) {
            case 1:
                if (!$exists)
                    break a;
                return 1;
            case 2:
                break a;
            default:
        }
        return $exists;
    }
    return cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, cbg_Files$FileType_Classpath), $this);
},
cgxgbt_TeaFileHandle_length = $this => {
    return cgxgbtf_MemoryFileStorage_length(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $this.$type0), $this);
},
cgxgbt_TeaFileHandle_toString = $this => {
    return $this.$file;
},
cbg_Files$FileType = $rt_classWithoutFields(jl_Enum),
cbg_Files$FileType_Classpath = null,
cbg_Files$FileType_Internal = null,
cbg_Files$FileType_External = null,
cbg_Files$FileType_Absolute = null,
cbg_Files$FileType_Local = null,
cbg_Files$FileType_$VALUES = null,
cbg_Files$FileType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(659), 0);
    cbg_Files$FileType_Classpath = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(660), 1);
    cbg_Files$FileType_Internal = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(661), 2);
    cbg_Files$FileType_External = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(662), 3);
    cbg_Files$FileType_Absolute = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(663), 4);
    cbg_Files$FileType_Local = var$1;
    var$2 = $rt_createArray(cbg_Files$FileType, 5);
    var$3 = var$2.data;
    var$3[0] = cbg_Files$FileType_Classpath;
    var$3[1] = cbg_Files$FileType_Internal;
    var$3[2] = cbg_Files$FileType_External;
    var$3[3] = cbg_Files$FileType_Absolute;
    var$3[4] = var$1;
    cbg_Files$FileType_$VALUES = var$2;
};
function cbggg_BitmapFont$BitmapFontData() {
    let a = this; jl_Object.call(a);
    a.$name5 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped = 0;
    a.$padTop0 = 0.0;
    a.$padRight = 0.0;
    a.$padBottom = 0.0;
    a.$padLeft = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs1 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
let cbggg_BitmapFont$BitmapFontData__init_ = $this => {
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs1 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
},
cbggg_BitmapFont$BitmapFontData__init_0 = () => {
    let var_0 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_(var_0);
    return var_0;
},
cbggg_BitmapFont$BitmapFontData_setGlyphRegion = ($this, $glyph, $region) => {
    let $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, var$13, $x, var$15, $x2, $y, var$18, $y2, $amount;
    $texture = $region.$texture0;
    $invTexWidth = 1.0 / cbgg_Texture_getWidth($texture);
    $invTexHeight = 1.0 / cbgg_Texture_getHeight($texture);
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u0;
    $v = $region.$v0;
    $regionWidth = $region.$regionWidth;
    $regionHeight = $region.$regionHeight;
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX1;
        $offsetY = ($atlasRegion.$originalHeight0 - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY1;
    }
    var$13 = $glyph.$srcX;
    $x = var$13;
    var$15 = $glyph.$width1;
    $x2 = var$13 + var$15 | 0;
    var$13 = $glyph.$srcY;
    $y = var$13;
    var$18 = $glyph.$height2;
    $y2 = var$13 + var$18 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width1 = var$15 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        $offsetX = $x2 - $offsetX;
        if ($offsetX <= $regionWidth)
            $regionWidth = $offsetX;
        else
            $glyph.$width1 = $glyph.$width1 - ($offsetX - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            var$13 = var$18 + $y | 0;
            $glyph.$height2 = var$13;
            if (var$13 < 0)
                $glyph.$height2 = 0;
            $y = 0.0;
        }
        $offsetX = $y2 - $offsetY;
        if ($offsetX <= $regionHeight)
            $regionHeight = $offsetX;
        else {
            $amount = $offsetX - $regionHeight;
            $glyph.$height2 = $glyph.$height2 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u = $u + $x * $invTexWidth;
    $glyph.$u2 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
},
cbggg_BitmapFont$BitmapFontData_setGlyph = ($this, $ch, $glyph) => {
    let var$3, var$4, $page;
    var$3 = $this.$glyphs1.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
},
cbggg_BitmapFont$BitmapFontData_getWrapIndex = ($this, $glyphs, $start) => {
    let $i, $glyphsItems, $ch;
    $i = $start - 1 | 0;
    $glyphsItems = $glyphs.$items.data;
    $ch = $glyphsItems[$i].$id & 65535;
    if (cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $ch))
        return $i;
    if (cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $ch))
        $i = $i + (-1) | 0;
    a: {
        while ($i > 0) {
            $start = $glyphsItems[$i].$id & 65535;
            if (cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $start))
                break a;
            if (cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $start))
                break a;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
},
cbggg_BitmapFont$BitmapFontData_isBreakChar = ($this, $c) => {
    let var$2, var$3, var$4;
    var$2 = $this.$breakChars;
    if (var$2 === null)
        return 0;
    var$2 = var$2.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        if ($c == var$2[var$4])
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
},
cbggg_BitmapFont$BitmapFontData_isWhitespace = ($this, $c) => {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
};
function cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData() {
    let a = this; cbggg_BitmapFont$BitmapFontData.call(a);
    a.$regions0 = null;
    a.$generator = null;
    a.$parameter = null;
    a.$stroker = null;
    a.$packer0 = null;
    a.$glyphs0 = null;
    a.$dirty0 = 0;
}
let cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph = ($this, $ch) => {
    let var$2, $glyph, $face, $baseline, $other, $glyphIndex, $i, $n, $otherIndex, $kerning;
    var$2 = $this.$glyphs1.data[$ch / 512 | 0];
    $glyph = var$2 === null ? null : var$2.data[$ch & 511];
    if ($glyph === null) {
        $face = $this.$generator;
        if ($face !== null) {
            cbgggf_FreeTypeFontGenerator_setPixelSizes($face, 0, $this.$parameter.$size9);
            $baseline = !$this.$flipped ? $this.$ascent :  -$this.$ascent;
            $baseline = ($baseline + $this.$capHeight) / $this.$scaleY;
            $glyph = cbgggf_FreeTypeFontGenerator_createGlyph($this.$generator, $ch, $this, $this.$parameter, $this.$stroker, $baseline, $this.$packer0);
            if ($glyph === null)
                return $this.$missingGlyph;
            $other = cbgu_Array_get($this.$regions0, $glyph.$page);
            $face = $this;
            cbggg_BitmapFont$BitmapFontData_setGlyphRegion($face, $glyph, $other);
            cbggg_BitmapFont$BitmapFontData_setGlyph($face, $ch, $glyph);
            cbgu_Array_add($this.$glyphs0, $glyph);
            $this.$dirty0 = 1;
            $face = $this.$generator.$face;
            if ($this.$parameter.$kerning) {
                $glyphIndex = cbgggf_FreeType$Face_getCharIndex($face, $ch);
                $i = 0;
                $n = $this.$glyphs0.$size0;
                while ($i < $n) {
                    $other = cbgu_Array_get($this.$glyphs0, $i);
                    $otherIndex = cbgggf_FreeType$Face_getCharIndex($face, $other.$id);
                    $kerning = cbgggf_FreeType$Face_getKerning($face, $glyphIndex, $otherIndex, 0);
                    if ($kerning)
                        cbggg_BitmapFont$Glyph_setKerning($glyph, $other.$id, cbgggf_FreeType_toInt($kerning));
                    $otherIndex = cbgggf_FreeType$Face_getKerning($face, $otherIndex, $glyphIndex, 0);
                    if ($otherIndex)
                        cbggg_BitmapFont$Glyph_setKerning($other, $ch, cbgggf_FreeType_toInt($otherIndex));
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    return $glyph;
},
cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyphs = ($this, $run, $str, $start, $end, $lastGlyph) => {
    let var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    var$6 = $this.$packer0;
    if (var$6 !== null)
        var$6.$packToTexture = 1;
    var$7 = $end - $start | 0;
    if (var$7) {
        var$8 = $this.$markupEnabled;
        var$9 = $this.$scaleX;
        var$6 = $run.$glyphs;
        var$10 = $run.$xAdvances;
        if (var$7 < 0) {
            $run = new jl_IllegalArgumentException;
            $str = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($str);
            jl_AbstractStringBuilder_append($str, $rt_s(664));
            jl_RuntimeException__init_($run, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($str, var$7)));
            $rt_throw($run);
        }
        var$11 = var$6.$size0 + var$7 | 0;
        if (var$11 > var$6.$items.data.length)
            cbgu_Array_resize(var$6, jl_Math_max(jl_Math_max(8, var$11), var$6.$size0 * 1.75 | 0));
        $run = $run.$xAdvances;
        var$11 = var$7 + 1 | 0;
        if (var$11 < 0) {
            $run = new jl_IllegalArgumentException;
            $str = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($str);
            jl_AbstractStringBuilder_append($str, $rt_s(664));
            jl_RuntimeException__init_($run, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0($str, var$11)));
            $rt_throw($run);
        }
        var$11 = $run.$size2 + var$11 | 0;
        if (var$11 > $run.$items0.data.length)
            cbgu_FloatArray_resize($run, jl_Math_max(jl_Math_max(8, var$11), $run.$size2 * 1.75 | 0));
        var$12 = $str;
        $run = $this;
        while (true) {
            a: {
                var$13 = $start + 1 | 0;
                var$7 = jl_String_charAt(var$12, $start);
                if (var$7 != 13) {
                    $str = cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData_getGlyph($run, var$7);
                    if ($str === null) {
                        $str = $this.$missingGlyph;
                        if ($str === null)
                            break a;
                    }
                    cbgu_Array_add(var$6, $str);
                    if ($lastGlyph === null)
                        var$14 = $str.$fixedWidth ? 0.0 : ( -$str.$xoffset | 0) * var$9 - $this.$padLeft;
                    else {
                        b: {
                            $start = $lastGlyph.$xadvance;
                            var$15 = $lastGlyph.$kerning0;
                            if (var$15 !== null) {
                                var$15 = var$15.data[var$7 >>> 9 | 0];
                                if (var$15 !== null) {
                                    var$11 = var$15.data[var$7 & 511];
                                    break b;
                                }
                            }
                            var$11 = 0;
                        }
                        var$14 = ($start + var$11 | 0) * var$9;
                    }
                    cbgu_FloatArray_add(var$10, var$14);
                    if (!var$8)
                        $lastGlyph = $str;
                    else if (var$7 != 91)
                        $lastGlyph = $str;
                    else if (var$13 >= $end)
                        $lastGlyph = $str;
                    else if (jl_String_charAt(var$12, var$13) != 91)
                        $lastGlyph = $str;
                    else {
                        var$13 = var$13 + 1 | 0;
                        $lastGlyph = $str;
                    }
                }
            }
            if (var$13 >= $end)
                break;
            $start = var$13;
        }
        if ($lastGlyph !== null)
            cbgu_FloatArray_add(var$10, $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * var$9 : ($lastGlyph.$width1 + $lastGlyph.$xoffset | 0) * var$9 - $this.$padRight);
    }
    if ($this.$dirty0) {
        $this.$dirty0 = 0;
        $run = $this.$packer0;
        $str = $this.$regions0;
        $lastGlyph = $this.$parameter;
        cbggg_PixmapPacker_updateTextureRegions($run, $str, $lastGlyph.$minFilter0, $lastGlyph.$magFilter, $lastGlyph.$genMipMaps);
    }
},
otcin_Buffers = $rt_classWithoutFields();
function ji_ByteArrayOutputStream() {
    let a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count0 = 0;
}
let ji_ByteArrayOutputStream__init_ = ($this, $size) => {
    $this.$buf = $rt_createByteArray($size);
},
ji_ByteArrayOutputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayOutputStream_write = ($this, $b, $off, $len) => {
    let $i, var$5, var$6, var$7, var$8;
    $i = $this.$count0 + $len | 0;
    var$5 = $this.$buf.data.length;
    if (var$5 < $i) {
        var$6 = jl_Math_max($i, (var$5 * 3 | 0) / 2 | 0);
        $this.$buf = ju_Arrays_copyOf0($this.$buf, var$6);
    }
    $i = 0;
    while ($i < $len) {
        var$7 = $b.data;
        var$8 = $this.$buf.data;
        var$6 = $this.$count0;
        $this.$count0 = var$6 + 1 | 0;
        var$5 = $off + 1 | 0;
        var$8[var$6] = var$7[$off];
        $i = $i + 1 | 0;
        $off = var$5;
    }
},
ji_ByteArrayOutputStream_toByteArray = $this => {
    return ju_Arrays_copyOf0($this.$buf, $this.$count0);
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream = $rt_classWithoutFields(ji_ByteArrayOutputStream),
cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray = $this => {
    let var$1, var$2;
    jl_Object_monitorEnterSync($this);
    try {
        var$1 = $this.$count0;
        var$2 = $this.$buf;
        if (var$1 == var$2.data.length)
            return var$2;
        return ji_ByteArrayOutputStream_toByteArray($this);
    } finally {
        jl_Object_monitorExitSync($this);
    }
};
function cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0() {
    let a = this; jl_Object.call(a);
    a.$_00 = null;
    a.$_1 = 0;
    a.$_2 = null;
    a.$_3 = null;
    a.$_4 = 0;
}
let cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0_onTimer$exported$0 = var$1 => {
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_loadBinary(var$1.$_00, var$1.$_1, var$1.$_2, var$1.$_3, var$1.$_4);
},
cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum),
cbgg_TextureData$TextureDataType_Pixmap = null,
cbgg_TextureData$TextureDataType_Custom = null,
cbgg_TextureData$TextureDataType_$VALUES = null,
cbgg_TextureData$TextureDataType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_TextureData$TextureDataType;
    jl_Enum__init_(var$1, $rt_s(665), 0);
    cbgg_TextureData$TextureDataType_Pixmap = var$1;
    var$1 = new cbgg_TextureData$TextureDataType;
    jl_Enum__init_(var$1, $rt_s(666), 1);
    cbgg_TextureData$TextureDataType_Custom = var$1;
    var$2 = $rt_createArray(cbgg_TextureData$TextureDataType, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_TextureData$TextureDataType_Pixmap;
    var$3[1] = var$1;
    cbgg_TextureData$TextureDataType_$VALUES = var$2;
},
cbggg_MipMapGenerator = $rt_classWithoutFields(),
cbggg_MipMapGenerator_useHWMipMap = 0,
cbggg_MipMapGenerator_generateMipMapCPU = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let $width, $height, $level, $tmp_0;
    cbg_Gdx_gl.$glTexImage2D($target, 0, cbgg_Pixmap_getGLInternalFormat($pixmap), cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), 0, cbgg_Pixmap_getGLFormat($pixmap), cbgg_Pixmap_getGLType($pixmap), cbgg_Pixmap_getPixels($pixmap));
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight) {
        $pixmap = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_($pixmap, $rt_s(667));
        $rt_throw($pixmap);
    }
    $width = cbgg_Pixmap_getWidth($pixmap) / 2 | 0;
    $height = cbgg_Pixmap_getHeight($pixmap) / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_($width, $height, cbgg_Pixmap_getFormat($pixmap));
        cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
        cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), 0, 0, $width, $height);
        if ($level > 1)
            cbgg_Pixmap_dispose($pixmap);
        cbg_Gdx_gl.$glTexImage2D($target, $level, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), cbgg_Pixmap_getPixels($tmp_0));
        $width = cbgg_Pixmap_getWidth($tmp_0) / 2 | 0;
        $height = cbgg_Pixmap_getHeight($tmp_0) / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
},
cbggg_MipMapGenerator__clinit_ = () => {
    cbggg_MipMapGenerator_useHWMipMap = 1;
};
function cbggg_BitmapFont$Glyph() {
    let a = this; jl_Object.call(a);
    a.$id = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width1 = 0;
    a.$height2 = 0;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning0 = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
let cbggg_BitmapFont$Glyph__init_0 = $this => {
    $this.$page = 0;
},
cbggg_BitmapFont$Glyph__init_ = () => {
    let var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
},
cbggg_BitmapFont$Glyph_setKerning = ($this, $ch, $value) => {
    let var$3, var$4, $page;
    if ($this.$kerning0 === null)
        $this.$kerning0 = $rt_createArray($rt_arraycls($rt_bytecls), 128);
    var$3 = $this.$kerning0.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
},
cbggg_BitmapFont$Glyph_toString = $this => {
    return jl_Character_toString($this.$id & 65535);
},
jn_NativeBuffer = $rt_classWithoutFields(0),
ji_InputStream = $rt_classWithoutFields(),
ji_InputStream_read = ($this, $b) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    $b = $b.data;
    var$2 = 0;
    var$3 = $b.length;
    var$4 = $this;
    var$5 = jl_Math_min(var$3, var$4.$count1 - var$4.$pos | 0);
    var$6 = 0;
    while (var$6 < var$5) {
        var$3 = var$2 + 1 | 0;
        var$7 = var$4.$buf0.data;
        var$8 = var$4.$pos;
        var$4.$pos = var$8 + 1 | 0;
        $b[var$2] = var$7[var$8];
        var$6 = var$6 + 1 | 0;
        var$2 = var$3;
    }
    if (var$5 <= 0)
        var$5 = (-1);
    return var$5;
},
otjt_Uint8Array = $rt_classWithoutFields(otjt_TypedArray),
otjt_Uint16Array = $rt_classWithoutFields(otjt_TypedArray);
function jusi_WrappingStreamImpl() {
    jusi_SimpleStreamImpl.call(this);
    this.$sourceStream = null;
}
let jusi_WrappingStreamImpl_next = ($this, $consumer) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$sourceStream;
    var$3 = $this;
    var$4 = new jusi_FilteringStreamImpl$wrap$lambda$_1_0;
    var$4.$_022 = var$3;
    var$4.$_18 = $consumer;
    $consumer = var$2;
    var$2 = new jusi_StreamOverSpliterator$AdapterAction;
    var$2.$consumer = var$4;
    var$5 = var$2;
    a: {
        while (true) {
            var$3 = $consumer.$spliterator;
            if (var$3.$iterator1 === null)
                var$3.$iterator1 = juc_CopyOnWriteArrayList_iterator(var$3.$collection);
            if (!juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext(var$3.$iterator1))
                var$6 = 0;
            else {
                var$3 = juc_CopyOnWriteArrayList$ListIteratorImpl_next(var$3.$iterator1);
                var$4 = var$5.$consumer;
                var$7 = var$4.$_022;
                var$8 = var$4.$_18;
                var$5.$wantsMore = var$7.$filter1.$test0(var$3) ? var$8.$test0(var$3) : 1;
                var$6 = 1;
            }
            if (!var$6) {
                var$6 = 0;
                break a;
            }
            if (var$2.$wantsMore)
                continue;
            else
                break;
        }
        var$6 = 1;
    }
    return var$6;
};
function jusi_FilteringStreamImpl() {
    jusi_WrappingStreamImpl.call(this);
    this.$filter1 = null;
}
let cgxgbt_TeaFileHandle$1 = $rt_classWithoutFields(),
cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = null,
cgxgbt_TeaFileHandle$1_$callClinit = () => {
    cgxgbt_TeaFileHandle$1_$callClinit = $rt_eraseClinit(cgxgbt_TeaFileHandle$1);
    cgxgbt_TeaFileHandle$1__clinit_();
},
cgxgbt_TeaFileHandle$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbg_Files$FileType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = var$1;
    var$2[cbg_Files$FileType_Internal.$ordinal0] = 1;
    var$2[cbg_Files$FileType_Classpath.$ordinal0] = 2;
},
ju_ListIterator = $rt_classWithoutFields(0);
function juc_CopyOnWriteArrayList$ListIteratorImpl() {
    let a = this; jl_Object.call(a);
    a.$arr = null;
    a.$current = 0;
    a.$size11 = 0;
}
let juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext = $this => {
    return $this.$current >= $this.$size11 ? 0 : 1;
},
juc_CopyOnWriteArrayList$ListIteratorImpl_next = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    if (juc_CopyOnWriteArrayList$ListIteratorImpl_hasNext($this)) {
        var$1 = $this.$arr.data;
        var$2 = $this.$current;
        $this.$current = var$2 + 1 | 0;
        return var$1[var$2];
    }
    var$3 = new ju_NoSuchElementException;
    var$4 = $this.$current;
    var$2 = $this.$size11;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(668)), var$4), $rt_s(439)), var$2);
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$5));
    $rt_throw(var$3);
},
ju_Spliterator = $rt_classWithoutFields(0);
function jusi_SpliteratorOverCollection() {
    let a = this; jl_Object.call(a);
    a.$collection = null;
    a.$iterator1 = null;
}
function cbggg_Renderable() {
    let a = this; jl_Object.call(a);
    a.$worldTransform = null;
    a.$meshPart = null;
    a.$material = null;
    a.$shader0 = null;
}
function cbgu_FloatArray() {
    let a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size2 = 0;
    a.$ordered1 = 0;
}
let cbgu_FloatArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items0;
    var$3 = $items.data;
    var$4 = $this.$size2;
    if (var$4 == var$3.length)
        $items = cbgu_FloatArray_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size2;
    $this.$size2 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_FloatArray_addAll0 = ($this, $array) => {
    cbgu_FloatArray_addAll($this, $array.$items0, 0, $array.$size2);
},
cbgu_FloatArray_addAll1 = ($this, $array, $offset, $length) => {
    let var$4, var$5;
    if (($offset + $length | 0) <= $array.$size2) {
        cbgu_FloatArray_addAll($this, $array.$items0, $offset, $length);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $rt_s(669));
    var$5 = jl_StringBuilder_append0(var$5, $offset);
    jl_AbstractStringBuilder_append(var$5, $rt_s(2));
    var$5 = jl_StringBuilder_append0(var$5, $length);
    jl_AbstractStringBuilder_append(var$5, $rt_s(3));
    jl_RuntimeException__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$5, $array.$size2)));
    $rt_throw(var$4);
},
cbgu_FloatArray_addAll = ($this, $array, $offset, $length) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items0;
    var$5 = $items.data;
    $sizeNeeded = $this.$size2 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = cbgu_FloatArray_resize($this, jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size2 * 1.75 | 0));
    jl_System_fastArraycopy($array, $offset, $items, $this.$size2, $length);
    $this.$size2 = $this.$size2 + $length | 0;
},
cbgu_FloatArray_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size2)
        return $this.$items0.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(16));
    var$3 = jl_StringBuilder_append0(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$3, $this.$size2)));
    $rt_throw(var$2);
},
cbgu_FloatArray_first = $this => {
    let var$1;
    if ($this.$size2)
        return $this.$items0.data[0];
    var$1 = new jl_IllegalStateException;
    jl_RuntimeException__init_(var$1, $rt_s(17));
    $rt_throw(var$1);
},
cbgu_FloatArray_clear = $this => {
    $this.$size2 = 0;
},
cbgu_FloatArray_resize = ($this, $newSize) => {
    let $newItems, var$3;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    jl_System_fastArraycopy($this.$items0, 0, $newItems, 0, jl_Math_min($this.$size2, var$3.length));
    $this.$items0 = $newItems;
    return $newItems;
},
cbgu_FloatArray_truncate = ($this, $newSize) => {
    if ($this.$size2 > $newSize)
        $this.$size2 = $newSize;
},
jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset),
jnci_UTF8Charset_INSTANCE = null,
jnci_UTF8Charset_$callClinit = () => {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
},
jnci_UTF8Charset_newDecoder = $this => {
    let var$1, var$2;
    var$1 = new jnci_UTF8Decoder;
    var$1.$replacement = $rt_s(670);
    var$2 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction = var$2;
    var$1.$unmappableAction0 = var$2;
    var$1.$charset0 = $this;
    var$1.$averageCharsPerByte = 0.3333333432674408;
    var$1.$maxCharsPerByte = 0.5;
    var$1.$inArray = $rt_createByteArray(512);
    var$1.$outArray0 = $rt_createCharArray(512);
    return var$1;
},
jnci_UTF8Charset_newEncoder = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction0 = var$4;
    var$1.$unmappableAction = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset = $this;
        var$1.$replacement1 = var$2.$clone0();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        var$1.$inArray0 = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_RuntimeException__init_(var$4, $rt_s(671));
    $rt_throw(var$4);
},
jnci_UTF8Charset__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Charset;
    jnci_UTF8Charset_$callClinit();
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(672));
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(672);
    var$1.$aliases = var$2.$clone0();
    jnci_UTF8Charset_INSTANCE = var$1;
};
function cbggg_PixmapPacker() {
    let a = this; jl_Object.call(a);
    a.$packToTexture = 0;
    a.$disposed0 = 0;
    a.$pageWidth = 0;
    a.$pageHeight = 0;
    a.$pageFormat = null;
    a.$padding0 = 0;
    a.$duplicateBorder = 0;
    a.$stripWhitespaceX = 0;
    a.$stripWhitespaceY = 0;
    a.$alphaThreshold = 0;
    a.$transparentColor = null;
    a.$pages = null;
    a.$packStrategy = null;
    a.$c0 = null;
}
let cbggg_PixmapPacker_indexPattern = null,
cbggg_PixmapPacker_$callClinit = () => {
    cbggg_PixmapPacker_$callClinit = $rt_eraseClinit(cbggg_PixmapPacker);
    cbggg_PixmapPacker__clinit_();
},
cbggg_PixmapPacker__init_ = ($this, $pageWidth, $pageHeight, $pageFormat, $padding, $duplicateBorder, $packStrategy) => {
    cbggg_PixmapPacker_$callClinit();
    $this.$transparentColor = cbgg_Color__init_0(0.0, 0.0, 0.0, 0.0);
    $this.$pages = cbgu_Array__init_();
    $this.$c0 = new cbgg_Color;
    $this.$pageWidth = $pageWidth;
    $this.$pageHeight = $pageHeight;
    $this.$pageFormat = $pageFormat;
    $this.$padding0 = $padding;
    $this.$duplicateBorder = $duplicateBorder;
    $this.$stripWhitespaceX = 0;
    $this.$stripWhitespaceY = 0;
    $this.$packStrategy = $packStrategy;
},
cbggg_PixmapPacker__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbggg_PixmapPacker();
    cbggg_PixmapPacker__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbggg_PixmapPacker_pack = ($this, $image) => {
    jl_Object_monitorEnterSync($this);
    try {
        return cbggg_PixmapPacker_pack0($this, null, $image);
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cbggg_PixmapPacker_pack0 = ($this, $name, $image) => {
    let $pixmapToDispose, $rect, var$5, var$6, $originalWidth, $originalHeight, $top, $bottom, $y, $x, $left, $right, $newWidth, $newHeight, $page, $rectX, $rectY, $rectWidth, $rectHeight, $imageWidth, $imageHeight, $pixel;
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$disposed0)
            return null;
        if ($name !== null && cbggg_PixmapPacker_getRect($this, $name) !== null)
            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(673)), $name))));
        $pixmapToDispose = null;
        if ($name !== null && $name.$endsWith($rt_s(674))) {
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_(0, 0, cbgg_Pixmap_getWidth($image) - 2 | 0, cbgg_Pixmap_getHeight($image) - 2 | 0);
            var$5 = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth($image) - 2 | 0, cbgg_Pixmap_getHeight($image) - 2 | 0, cbgg_Pixmap_getFormat($image));
            cbgg_Pixmap_setBlending(var$5, cbgg_Pixmap$Blending_None);
            var$6 = cbggg_PixmapPacker_getSplits($this, $image);
            $rect.$splits = var$6;
            $rect.$pads = cbggg_PixmapPacker_getPads($this, $image, var$6);
            cbgg_Pixmap_drawPixmap1(var$5, $image, 0, 0, 1, 1, cbgg_Pixmap_getWidth($image) - 1 | 0, cbgg_Pixmap_getHeight($image) - 1 | 0);
            $name = ($name.$split($rt_s(127))).data[0];
            $pixmapToDispose = var$5;
        } else if (!$this.$stripWhitespaceX && !$this.$stripWhitespaceY) {
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_(0, 0, cbgg_Pixmap_getWidth($image), cbgg_Pixmap_getHeight($image));
            var$5 = $image;
        } else {
            a: {
                $originalWidth = cbgg_Pixmap_getWidth($image);
                $originalHeight = cbgg_Pixmap_getHeight($image);
                $top = 0;
                $bottom = cbgg_Pixmap_getHeight($image);
                if ($this.$stripWhitespaceY) {
                    $y = 0;
                    b: {
                        c: while (true) {
                            if ($y >= cbgg_Pixmap_getHeight($image))
                                break b;
                            $x = 0;
                            while ($x < cbgg_Pixmap_getWidth($image)) {
                                if ((cbgg_Pixmap_getPixel($image, $x, $y) & 255) > $this.$alphaThreshold)
                                    break c;
                                $x = $x + 1 | 0;
                            }
                            $top = $top + 1 | 0;
                            $y = $y + 1 | 0;
                        }
                    }
                    $y = cbgg_Pixmap_getHeight($image);
                    while (true) {
                        $y = $y + (-1) | 0;
                        if ($y < $top)
                            break;
                        $x = 0;
                        while ($x < cbgg_Pixmap_getWidth($image)) {
                            if ((cbgg_Pixmap_getPixel($image, $x, $y) & 255) > $this.$alphaThreshold)
                                break a;
                            $x = $x + 1 | 0;
                        }
                        $bottom = $bottom + (-1) | 0;
                    }
                }
            }
            d: {
                $left = 0;
                $right = cbgg_Pixmap_getWidth($image);
                if ($this.$stripWhitespaceX) {
                    $x = 0;
                    e: {
                        f: while (true) {
                            if ($x >= cbgg_Pixmap_getWidth($image))
                                break e;
                            $y = $top;
                            while ($y < $bottom) {
                                if ((cbgg_Pixmap_getPixel($image, $x, $y) & 255) > $this.$alphaThreshold)
                                    break f;
                                $y = $y + 1 | 0;
                            }
                            $left = $left + 1 | 0;
                            $x = $x + 1 | 0;
                        }
                    }
                    $x = cbgg_Pixmap_getWidth($image);
                    while (true) {
                        $x = $x + (-1) | 0;
                        if ($x < $left)
                            break;
                        $y = $top;
                        while ($y < $bottom) {
                            if ((cbgg_Pixmap_getPixel($image, $x, $y) & 255) > $this.$alphaThreshold)
                                break d;
                            $y = $y + 1 | 0;
                        }
                        $right = $right + (-1) | 0;
                    }
                }
            }
            $newWidth = $right - $left | 0;
            $newHeight = $bottom - $top | 0;
            var$5 = cbgg_Pixmap__init_($newWidth, $newHeight, cbgg_Pixmap_getFormat($image));
            cbgg_Pixmap_setBlending(var$5, cbgg_Pixmap$Blending_None);
            cbgg_Pixmap_drawPixmap1(var$5, $image, 0, 0, $left, $top, $newWidth, $newHeight);
            $rect = cbggg_PixmapPacker$PixmapPackerRectangle__init_2(0, 0, $newWidth, $newHeight, $left, $top, $originalWidth, $originalHeight);
            $pixmapToDispose = var$5;
        }
        $image = $rect;
        if (cbgm_Rectangle_getWidth($image) <= $this.$pageWidth && cbgm_Rectangle_getHeight($image) <= $this.$pageHeight) {
            $page = $this.$packStrategy.$pack1($this, $name, $rect);
            if ($name !== null) {
                cbgu_OrderedMap_put($page.$rects, $name, $rect);
                cbgu_Array_add($page.$addedRects, $name);
            }
            g: {
                $rectX = $rect.$x1 | 0;
                $rectY = $rect.$y1 | 0;
                $rectWidth = $rect.$width | 0;
                $rectHeight = $rect.$height0 | 0;
                if ($this.$packToTexture && !$this.$duplicateBorder) {
                    $name = $page.$texture1;
                    if ($name !== null && !$page.$dirty) {
                        cbgg_GLTexture_bind($name);
                        cbg_Gdx_gl.$glTexSubImage2D($page.$texture1.$glTarget, 0, $rectX, $rectY, $rectWidth, $rectHeight, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
                        break g;
                    }
                }
                $page.$dirty = 1;
            }
            cbgg_Pixmap_drawPixmap0($page.$image, var$5, $rectX, $rectY);
            if ($this.$duplicateBorder) {
                $imageWidth = cbgg_Pixmap_getWidth(var$5);
                $imageHeight = cbgg_Pixmap_getHeight(var$5);
                $name = $page.$image;
                $y = $rectX - 1 | 0;
                $pixel = $rectY - 1 | 0;
                cbgg_Pixmap_drawPixmap($name, var$5, 0, 0, 1, 1, $y, $pixel, 1, 1);
                $name = $page.$image;
                $originalWidth = $imageWidth - 1 | 0;
                $left = $rectX + $rectWidth | 0;
                cbgg_Pixmap_drawPixmap($name, var$5, $originalWidth, 0, 1, 1, $left, $pixel, 1, 1);
                $name = $page.$image;
                $top = $imageHeight - 1 | 0;
                $newWidth = $rectY + $rectHeight | 0;
                cbgg_Pixmap_drawPixmap($name, var$5, 0, $top, 1, 1, $y, $newWidth, 1, 1);
                cbgg_Pixmap_drawPixmap($page.$image, var$5, $originalWidth, $top, 1, 1, $left, $newWidth, 1, 1);
                cbgg_Pixmap_drawPixmap($page.$image, var$5, 0, 0, $imageWidth, 1, $rectX, $pixel, $rectWidth, 1);
                cbgg_Pixmap_drawPixmap($page.$image, var$5, 0, $top, $imageWidth, 1, $rectX, $newWidth, $rectWidth, 1);
                cbgg_Pixmap_drawPixmap($page.$image, var$5, 0, 0, 1, $imageHeight, $y, $rectY, 1, $rectHeight);
                cbgg_Pixmap_drawPixmap($page.$image, var$5, $originalWidth, 0, 1, $imageHeight, $left, $rectY, 1, $rectHeight);
            }
            if ($pixmapToDispose !== null)
                cbgg_Pixmap_dispose($pixmapToDispose);
            $rect.$page0 = $page;
            return $rect;
        }
        if ($name === null)
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(675)));
        $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(676)), $name))));
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cbggg_PixmapPacker_getPages = $this => {
    return $this.$pages;
},
cbggg_PixmapPacker_getRect = ($this, $name) => {
    let var$2, $rect;
    jl_Object_monitorEnterSync($this);
    try {
        var$2 = cbgu_Array_iterator($this.$pages);
        while (true) {
            if (!cbgu_Array$ArrayIterator_hasNext(var$2))
                return null;
            $rect = cbgu_ObjectMap_get((cbgu_Array$ArrayIterator_next(var$2)).$rects, $name);
            if ($rect !== null)
                break;
        }
        return $rect;
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cbggg_PixmapPacker_updateTextureRegions = ($this, $regions, $minFilter, $magFilter, $useMipMaps) => {
    jl_Object_monitorEnterSync($this);
    try {
        cbggg_PixmapPacker_updatePageTextures($this, $minFilter, $magFilter, $useMipMaps);
        while (true) {
            $useMipMaps = $regions.$size0;
            $minFilter = $this.$pages;
            if ($useMipMaps >= $minFilter.$size0)
                break;
            cbgu_Array_add($regions, cbggg_TextureRegion__init_0((cbgu_Array_get($minFilter, $useMipMaps)).$texture1));
        }
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cbggg_PixmapPacker_updatePageTextures = ($this, $minFilter, $magFilter, $useMipMaps) => {
    let var$4;
    jl_Object_monitorEnterSync($this);
    try {
        var$4 = cbgu_Array_iterator($this.$pages);
        while (cbgu_Array$ArrayIterator_hasNext(var$4)) {
            cbggg_PixmapPacker$Page_updateTexture(cbgu_Array$ArrayIterator_next(var$4), $minFilter, $magFilter, $useMipMaps);
        }
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cbggg_PixmapPacker_getTransparentColor = $this => {
    return $this.$transparentColor;
},
cbggg_PixmapPacker_setTransparentColor = ($this, $color) => {
    cbgg_Color_set($this.$transparentColor, $color);
},
cbggg_PixmapPacker_getSplits = ($this, $raster) => {
    let $startX, $endX, $startY, $endY, var$6;
    $startX = cbggg_PixmapPacker_getSplitPoint($this, $raster, 1, 0, 1, 1);
    $endX = cbggg_PixmapPacker_getSplitPoint($this, $raster, $startX, 0, 0, 1);
    $startY = cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, 1, 1, 0);
    $endY = cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, $startY, 0, 0);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $endX + 1 | 0, 0, 1, 1);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, 0, $endY + 1 | 0, 1, 0);
    if (!$startX && !$endX && !$startY && !$endY)
        return null;
    if (!$startX)
        var$6 = cbgg_Pixmap_getWidth($raster) - 2 | 0;
    else {
        $startX = $startX + (-1) | 0;
        var$6 = (cbgg_Pixmap_getWidth($raster) - 2 | 0) - ($endX - 1 | 0) | 0;
    }
    if (!$startY)
        $endX = cbgg_Pixmap_getHeight($raster) - 2 | 0;
    else {
        $startY = $startY + (-1) | 0;
        $endX = (cbgg_Pixmap_getHeight($raster) - 2 | 0) - ($endY - 1 | 0) | 0;
    }
    return $rt_createIntArrayFromData([$startX, var$6, $startY, $endX]);
},
cbggg_PixmapPacker_getPads = ($this, $raster, $splits) => {
    let $bottom, $right, $startX, $startY, $endX, $endY, var$9, var$10, $pads, var$12, var$13;
    $bottom = cbgg_Pixmap_getHeight($raster) - 1 | 0;
    $right = cbgg_Pixmap_getWidth($raster) - 1 | 0;
    $startX = cbggg_PixmapPacker_getSplitPoint($this, $raster, 1, $bottom, 1, 1);
    $startY = cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, 1, 1, 0);
    $endX = 0;
    $endY = 0;
    if ($startX)
        $endX = cbggg_PixmapPacker_getSplitPoint($this, $raster, $startX + 1 | 0, $bottom, 0, 1);
    if ($startY)
        $endY = cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, $startY + 1 | 0, 0, 0);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $endX + 1 | 0, $bottom, 1, 1);
    cbggg_PixmapPacker_getSplitPoint($this, $raster, $right, $endY + 1 | 0, 1, 0);
    if (!$startX && !$endX && !$startY && !$endY)
        return null;
    if (!$startX && !$endX) {
        $startX = (-1);
        var$9 = (-1);
    } else if ($startX <= 0)
        var$9 = cbgg_Pixmap_getWidth($raster) - 2 | 0;
    else {
        $startX = $startX + (-1) | 0;
        var$9 = (cbgg_Pixmap_getWidth($raster) - 2 | 0) - ($endX - 1 | 0) | 0;
    }
    if (!$startY && !$endY) {
        $startY = (-1);
        var$10 = (-1);
    } else if ($startY <= 0)
        var$10 = cbgg_Pixmap_getHeight($raster) - 2 | 0;
    else {
        $startY = $startY + (-1) | 0;
        var$10 = (cbgg_Pixmap_getHeight($raster) - 2 | 0) - ($endY - 1 | 0) | 0;
    }
    $pads = $rt_createIntArray(4);
    var$12 = $pads.data;
    var$12[0] = $startX;
    var$12[1] = var$9;
    var$12[2] = $startY;
    var$12[3] = var$10;
    if ($splits !== null) {
        a: {
            if ($pads === $splits)
                var$9 = 1;
            else {
                if ($pads !== null && $splits !== null) {
                    $splits = $splits.data;
                    var$9 = var$12.length;
                    if (var$9 == $splits.length) {
                        var$13 = 0;
                        b: {
                            while (true) {
                                if (var$13 >= var$9) {
                                    var$13 = (-1);
                                    break b;
                                }
                                $bottom = var$13 + 0 | 0;
                                if (var$12[$bottom] != $splits[$bottom])
                                    break;
                                var$13 = var$13 + 1 | 0;
                            }
                        }
                        var$9 = var$13 >= 0 ? 0 : 1;
                        break a;
                    }
                }
                var$9 = 0;
            }
        }
        if (var$9)
            return null;
    }
    return $pads;
},
cbggg_PixmapPacker_getSplitPoint = ($this, $raster, $startX, $y, $startPoint, $xAxis) => {
    let $rgba, $next, $end, $breakA, var$10, $colint, var$12, var$13;
    $rgba = $rt_createIntArray(4);
    $next = !$xAxis ? $y : $startX;
    $end = !$xAxis ? cbgg_Pixmap_getHeight($raster) : cbgg_Pixmap_getWidth($raster);
    $breakA = !$startPoint ? 0 : 255;
    var$10 = $rgba.data;
    while (true) {
        if ($next == $end)
            return 0;
        if (!$xAxis)
            $y = $next;
        else
            $startX = $next;
        $colint = cbgg_Pixmap_getPixel($raster, $startX, $y);
        cbgg_Color_rgba8888ToColor($this.$c0, $colint);
        var$12 = $this.$c0;
        var$10[0] = var$12.$r * 255.0 | 0;
        var$10[1] = var$12.$g * 255.0 | 0;
        var$10[2] = var$12.$b * 255.0 | 0;
        var$10[3] = var$12.$a * 255.0 | 0;
        if (var$10[3] == $breakA)
            break;
        if (!$startPoint && !(!var$10[0] && !var$10[1] && !var$10[2] && var$10[3] == 255)) {
            var$12 = jl_System_out();
            var$13 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$13);
            var$13 = jl_StringBuilder_append0(var$13, $startX);
            jl_AbstractStringBuilder_append(var$13, $rt_s(677));
            var$13 = jl_StringBuilder_append0(var$13, $y);
            jl_AbstractStringBuilder_append(var$13, $rt_s(384));
            var$13 = jl_StringBuilder_append(var$13, $rgba);
            jl_AbstractStringBuilder_append(var$13, $rt_s(384));
            var$13 = jl_AbstractStringBuilder_toString(var$13);
            otcic_JsConsolePrintStream_println(var$12, var$13);
        }
        $next = $next + 1 | 0;
    }
    return $next;
},
cbggg_PixmapPacker__clinit_ = () => {
    cbggg_PixmapPacker_indexPattern = jur_Pattern_compile($rt_s(678));
};
function cbgu_LongMap$MapIterator() {
    let a = this; jl_Object.call(a);
    a.$hasNext0 = 0;
    a.$map = null;
    a.$nextIndex0 = 0;
    a.$currentIndex = 0;
    a.$valid0 = 0;
}
let cbgu_LongMap$MapIterator_findNextIndex = $this => {
    let $keyTable, $n, var$3;
    $keyTable = $this.$map.$keyTable0.data;
    $n = $keyTable.length;
    while (true) {
        var$3 = $this.$nextIndex0 + 1 | 0;
        $this.$nextIndex0 = var$3;
        if (var$3 >= $n)
            break;
        if (Long_eq($keyTable[var$3], Long_ZERO))
            continue;
        else {
            $this.$hasNext0 = 1;
            return;
        }
    }
    $this.$hasNext0 = 0;
},
cbgu_LongMap$Values = $rt_classWithoutFields(cbgu_LongMap$MapIterator),
cbgu_LongMap$Values__init_0 = ($this, $map) => {
    $this.$valid0 = 1;
    $this.$map = $map;
    cbgu_LongMap$Values_reset($this);
},
cbgu_LongMap$Values__init_ = var_0 => {
    let var_1 = new cbgu_LongMap$Values();
    cbgu_LongMap$Values__init_0(var_1, var_0);
    return var_1;
},
cbgu_LongMap$Values_reset = $this => {
    $this.$currentIndex = (-2);
    $this.$nextIndex0 = (-1);
    if (!$this.$map.$hasZeroValue0)
        cbgu_LongMap$MapIterator_findNextIndex($this);
    else
        $this.$hasNext0 = 1;
},
cbgg_Colors = $rt_classWithoutFields(),
cbgg_Colors_map = null,
cbgg_Colors_$callClinit = () => {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
},
cbgg_Colors_reset = () => {
    let var$1;
    cbgg_Colors_$callClinit();
    var$1 = cbgg_Colors_map;
    if (var$1.$size7) {
        var$1.$size7 = 0;
        ju_Arrays_fill2(var$1.$keyTable, null);
        ju_Arrays_fill2(var$1.$valueTable, null);
    }
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(679), cbgg_Color_CLEAR);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(680), cbgg_Color_CLEAR_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(681), cbgg_Color_BLACK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(682), cbgg_Color_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(683), cbgg_Color_LIGHT_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(684), cbgg_Color_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(685), cbgg_Color_DARK_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(686), cbgg_Color_BLUE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(687), cbgg_Color_NAVY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(688), cbgg_Color_ROYAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(689), cbgg_Color_SLATE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(690), cbgg_Color_SKY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(691), cbgg_Color_CYAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(692), cbgg_Color_TEAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(693), cbgg_Color_GREEN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(694), cbgg_Color_CHARTREUSE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(695), cbgg_Color_LIME);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(696), cbgg_Color_FOREST);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(697), cbgg_Color_OLIVE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(698), cbgg_Color_YELLOW);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(699), cbgg_Color_GOLD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(700), cbgg_Color_GOLDENROD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(701), cbgg_Color_ORANGE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(702), cbgg_Color_BROWN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(703), cbgg_Color_TAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(704), cbgg_Color_FIREBRICK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(705), cbgg_Color_RED);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(706), cbgg_Color_SCARLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(707), cbgg_Color_CORAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(708), cbgg_Color_SALMON);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(709), cbgg_Color_PINK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(710), cbgg_Color_MAGENTA);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(711), cbgg_Color_PURPLE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(712), cbgg_Color_VIOLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(713), cbgg_Color_MAROON);
},
cbgg_Colors__clinit_ = () => {
    cbgg_Colors_map = cbgu_ObjectMap__init_();
    cbgg_Colors_reset();
};
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
let jnc_IllegalCharsetNameException__init_0 = ($this, $charsetName) => {
    jl_Exception__init_($this);
    $this.$charsetName = $charsetName;
},
jnc_IllegalCharsetNameException__init_ = var_0 => {
    let var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
};
function jusi_SortedStreamImpl() {
    let a = this; jusi_SimpleStreamImpl.call(a);
    a.$sourceStream0 = null;
    a.$array8 = null;
    a.$index6 = 0;
}
function jusi_FindFirstConsumer() {
    jl_Object.call(this);
    this.$result = null;
}
let jusi_FindFirstConsumer_test = ($this, $t) => {
    $this.$result = $t;
    return 0;
},
cbggg_PixmapPacker$PackStrategy = $rt_classWithoutFields(0),
cbggg_PixmapPacker$GuillotineStrategy = $rt_classWithoutFields(),
cbggg_PixmapPacker$GuillotineStrategy__init_0 = $this => {
    return;
},
cbggg_PixmapPacker$GuillotineStrategy__init_ = () => {
    let var_0 = new cbggg_PixmapPacker$GuillotineStrategy();
    cbggg_PixmapPacker$GuillotineStrategy__init_0(var_0);
    return var_0;
},
cbggg_PixmapPacker$GuillotineStrategy_pack = ($this, $packer, $name, $rect) => {
    let $page, $padding, var$6, var$7, $node, var$9, var$10;
    $name = $packer.$pages;
    if ($name.$size0)
        $page = cbgu_Array_peek($name);
    else {
        $page = cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_($packer);
        cbgu_Array_add($packer.$pages, $page);
    }
    $padding = $packer.$padding0;
    var$6 = $rect.$width;
    var$7 = $padding;
    $rect.$width = var$6 + var$7;
    $rect.$height0 = $rect.$height0 + var$7;
    $node = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $page.$root, $rect);
    if ($node === null) {
        $page = cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_($packer);
        cbgu_Array_add($packer.$pages, $page);
        $node = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $page.$root, $rect);
    }
    $node.$full = 1;
    $packer = $node.$rect;
    var$6 = $packer.$x1;
    var$9 = $packer.$y1;
    var$10 = $packer.$width - var$7;
    var$7 = $packer.$height0 - var$7;
    $rect.$x1 = var$6;
    $rect.$y1 = var$9;
    $rect.$width = var$10;
    $rect.$height0 = var$7;
    return $page;
},
cbggg_PixmapPacker$GuillotineStrategy_insert = ($this, $node, $rect) => {
    let $deltaWidth, $newNode, var$5, var$6, var$7, $deltaHeight, var$9, var$10, var$11;
    $deltaWidth = $node.$full;
    if (!$deltaWidth) {
        $newNode = $node.$leftChild;
        if ($newNode !== null && $node.$rightChild !== null) {
            $newNode = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $newNode, $rect);
            if ($newNode === null)
                $newNode = cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node.$rightChild, $rect);
            return $newNode;
        }
    }
    if ($deltaWidth)
        return null;
    $newNode = $node.$rect;
    $deltaWidth = $rt_compare($newNode.$width, $rect.$width);
    if (!$deltaWidth && $newNode.$height0 === $rect.$height0)
        return $node;
    if ($deltaWidth >= 0 && $newNode.$height0 >= $rect.$height0) {
        $node.$leftChild = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
        var$5 = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
        $node.$rightChild = var$5;
        var$6 = $node.$rect;
        var$7 = var$6.$width;
        $deltaHeight = var$7 | 0;
        var$9 = $rect.$width;
        $deltaWidth = $deltaHeight - (var$9 | 0) | 0;
        var$10 = var$6.$height0;
        $deltaHeight = var$10 | 0;
        var$11 = $rect.$height0;
        if ($deltaWidth <= ($deltaHeight - (var$11 | 0) | 0)) {
            $newNode = $node.$leftChild.$rect;
            $newNode.$x1 = var$6.$x1;
            $newNode.$y1 = var$6.$y1;
            $newNode.$width = var$7;
            $newNode.$height0 = var$11;
            $newNode = var$5.$rect;
            $newNode.$x1 = var$6.$x1;
            var$9 = var$6.$y1;
            var$10 = $rect.$height0;
            $newNode.$y1 = var$9 + var$10;
            $newNode.$width = var$6.$width;
            $newNode.$height0 = var$6.$height0 - var$10;
        } else {
            $newNode = $node.$leftChild.$rect;
            $newNode.$x1 = var$6.$x1;
            $newNode.$y1 = var$6.$y1;
            $newNode.$width = var$9;
            $newNode.$height0 = var$10;
            $newNode = var$5.$rect;
            var$9 = var$6.$x1;
            var$10 = $rect.$width;
            $newNode.$x1 = var$9 + var$10;
            $newNode.$y1 = var$6.$y1;
            $newNode.$width = var$6.$width - var$10;
            $newNode.$height0 = var$6.$height0;
        }
        return cbggg_PixmapPacker$GuillotineStrategy_insert($this, $node.$leftChild, $rect);
    }
    return null;
},
cbggg_PixmapPacker$SkylineStrategy = $rt_classWithoutFields(),
cbggg_PixmapPacker$SkylineStrategy__init_0 = $this => {
    return;
},
cbggg_PixmapPacker$SkylineStrategy__init_ = () => {
    let var_0 = new cbggg_PixmapPacker$SkylineStrategy();
    cbggg_PixmapPacker$SkylineStrategy__init_0(var_0);
    return var_0;
},
cbggg_PixmapPacker$SkylineStrategy_pack = ($this, $packer, $name, $rect) => {
    let $padding, $nn, $ii, $pageWidth, $pageHeight, $rectWidth, $rectHeight, $i, $n, $page, $row, var$15, $bestRow, var$17;
    $padding = $packer.$padding0;
    $nn = $packer.$pageWidth;
    $ii = $padding * 2 | 0;
    $pageWidth = $nn - $ii | 0;
    $pageHeight = $packer.$pageHeight - $ii | 0;
    $rectWidth = ($rect.$width | 0) + $padding | 0;
    $rectHeight = ($rect.$height0 | 0) + $padding | 0;
    $i = 0;
    $n = $packer.$pages.$size0;
    a: while (true) {
        if ($i >= $n) {
            $page = new cbggg_PixmapPacker$SkylineStrategy$SkylinePage;
            cbggg_PixmapPacker$Page__init_($page, $packer);
            $page.$rows = cbgu_Array__init_();
            cbgu_Array_add($packer.$pages, $page);
            $row = new cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row;
            $row.$x4 = $padding + $rectWidth | 0;
            $row.$y3 = $padding;
            $row.$height3 = $rectHeight;
            cbgu_Array_add($page.$rows, $row);
            var$15 = $padding;
            $rect.$x1 = var$15;
            $rect.$y1 = var$15;
            return $page;
        }
        $page = cbgu_Array_get($packer.$pages, $i);
        $bestRow = null;
        $ii = 0;
        $nn = $page.$rows.$size0 - 1 | 0;
        while ($ii < $nn) {
            $row = cbgu_Array_get($page.$rows, $ii);
            if (($row.$x4 + $rectWidth | 0) < $pageWidth && ($row.$y3 + $rectHeight | 0) < $pageHeight) {
                var$17 = $row.$height3;
                if ($rectHeight <= var$17 && !($bestRow !== null && var$17 >= $bestRow.$height3))
                    $bestRow = $row;
            }
            $ii = $ii + 1 | 0;
        }
        b: {
            if ($bestRow !== null)
                $row = $bestRow;
            else {
                $row = cbgu_Array_peek($page.$rows);
                $ii = $row.$y3;
                if (($ii + $rectHeight | 0) >= $pageHeight)
                    break b;
                if (($row.$x4 + $rectWidth | 0) < $pageWidth)
                    $row.$height3 = jl_Math_max($row.$height3, $rectHeight);
                else {
                    $ii = $ii + $row.$height3 | 0;
                    if (($ii + $rectHeight | 0) >= $pageHeight)
                        $row = $bestRow;
                    else {
                        $row = new cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row;
                        $row.$y3 = $ii;
                        $row.$height3 = $rectHeight;
                        cbgu_Array_add($page.$rows, $row);
                    }
                }
            }
            if ($row !== null)
                break a;
        }
        $i = $i + 1 | 0;
    }
    $ii = $row.$x4;
    $rect.$x1 = $ii;
    $rect.$y1 = $row.$y3;
    $row.$x4 = $ii + $rectWidth | 0;
    return $page;
},
cbga_Sound = $rt_classWithoutFields(0);
function cgxgbtwh_HowlSound() {
    jl_Object.call(this);
    this.$howl = null;
}
let jl_Readable = $rt_classWithoutFields(0),
jn_CharBuffer = $rt_classWithoutFields(jn_Buffer),
jn_CharBuffer_allocate = $capacity => {
    let $array, var$3, var$4;
    if ($capacity >= 0) {
        $array = $rt_createCharArray($capacity);
        return jn_CharBufferOverTypedArray__init_(0, $capacity, 0, $array.data, $array);
    }
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(642)), $capacity);
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_CharBuffer_wrap = $array => {
    let var$2, var$3, var$4, var$5;
    var$2 = $array.data.length;
    if (var$2 >= 0) {
        var$3 = var$2 + 0 | 0;
        if (var$3 <= var$2) {
            var$4 = jn_CharBufferOverTypedArray__init_(0, var$2, 0, $array.data, $array);
            var$4.$position0 = 0;
            var$4.$limit0 = var$3;
            return var$4;
        }
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$5);
    $rt_throw(var$5);
},
jn_CharBuffer_get = ($this, $dst, $offset, $length) => {
    let var$4, var$5, var$6, var$7;
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$4 = new jn_BufferUnderflowException;
            jl_Exception__init_(var$4);
            $rt_throw(var$4);
        }
        var$5 = $this.$position0;
        var$6 = $this;
        var$7 = new Uint16Array(var$6.$data1.buffer, var$6.$data1.byteOffset + (var$5 * 2 | 0) | 0, $length);
        $dst.data.set(var$7, $offset);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$4);
    $rt_throw(var$4);
},
jn_CharBuffer_put0 = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl5($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
},
jn_CharBuffer_put = ($this, $src) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = 0;
    var$3 = $src.$nativeString.length;
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (var$3 >= var$2 && var$3 <= $src.$nativeString.length) {
        var$4 = var$3 - var$2 | 0;
        if (jn_Buffer_remaining($this) < var$4) {
            $src = new jn_BufferOverflowException;
            jl_Exception__init_($src);
            $rt_throw($src);
        }
        var$5 = $this.$position0;
        var$6 = $this;
        while (true) {
            var$7 = var$3 + (-1) | 0;
            if (var$3 <= 0)
                break;
            var$8 = var$6.$data1;
            var$9 = var$5 + 1 | 0;
            var$10 = var$2 + 1 | 0;
            var$8[var$5] = jl_String_charAt($src, var$2);
            var$3 = var$7;
            var$5 = var$9;
            var$2 = var$10;
        }
        $this.$position0 = $this.$position0 + var$4 | 0;
        return $this;
    }
    $src = new jl_IndexOutOfBoundsException;
    jl_Exception__init_($src);
    $rt_throw($src);
},
jn_CharBuffer_array = $this => {
    let var$1, var$2;
    var$1 = $this.$array6;
    if (var$1 !== null)
        return var$1;
    var$2 = new jl_UnsupportedOperationException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
juf_IntFunction = $rt_classWithoutFields(0),
jusi_SortedStreamImpl$_init_$lambda$_0_0 = $rt_classWithoutFields(),
cbgggf_FreeTypeFontGenerator$1 = $rt_classWithoutFields(),
cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting = null,
cbgggf_FreeTypeFontGenerator$1_$callClinit = () => {
    cbgggf_FreeTypeFontGenerator$1_$callClinit = $rt_eraseClinit(cbgggf_FreeTypeFontGenerator$1);
    cbgggf_FreeTypeFontGenerator$1__clinit_();
},
cbgggf_FreeTypeFontGenerator$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgggf_FreeTypeFontGenerator$Hinting_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgggf_FreeTypeFontGenerator$1_$SwitchMap$com$badlogic$gdx$graphics$g2d$freetype$FreeTypeFontGenerator$Hinting = var$1;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_None.$ordinal0] = 1;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_Slight.$ordinal0] = 2;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_Medium.$ordinal0] = 3;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_Full.$ordinal0] = 4;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_AutoSlight.$ordinal0] = 5;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_AutoMedium.$ordinal0] = 6;
    var$2[cbgggf_FreeTypeFontGenerator$Hinting_AutoFull.$ordinal0] = 7;
},
cbgggf_FreeType$Size = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$Size_getMetrics = $this => {
    let var$1;
    var$1 = new cbgggf_FreeType$SizeMetrics;
    cbgggf_FreeType$Pointer__init_(var$1, Module._c_Size_getMetrics($this.$address));
    return var$1;
},
cbgggf_FreeType$SizeMetrics = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$SizeMetrics_getAscender = $this => {
    return Module._c_SizeMetrics_getAscender($this.$address);
},
cbgggf_FreeType$SizeMetrics_getDescender = $this => {
    return Module._c_SizeMetrics_getDescender($this.$address);
},
cbgggf_FreeType$SizeMetrics_getHeight = $this => {
    return Module._c_SizeMetrics_getHeight($this.$address);
},
cbgggf_FreeType$GlyphMetrics = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$GlyphMetrics_getHeight = $this => {
    return Module._c_GlyphMetrics_getHeight($this.$address);
},
cbgggf_FreeType$GlyphMetrics_getHoriAdvance = $this => {
    return Module._c_GlyphMetrics_getHoriAdvance($this.$address);
},
cbgggf_FreeType$Stroker = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$Stroker_set = ($this, $radius, $lineCap, $lineJoin, $miterLimit) => {
    Module._c_Stroker_set($this.$address, $radius, $lineCap, $lineJoin, $miterLimit);
},
cbgggf_FreeType$Stroker_dispose = $this => {
    Module._c_Stroker_done($this.$address);
},
cgxgbtwh_Howl = $rt_classWithoutFields(),
cgxgbtwh_Howl_create$js_body$_1 = var$1 => {
    var blob = new Blob([var$1]);
    var howlSource = URL.createObjectURL(blob);
    return new Howl({ src : [howlSource], format : ['ogg', 'webm', 'mp3', 'wav'] });
};
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name7 = null;
}
let jnc_CodingErrorAction_IGNORE = null,
jnc_CodingErrorAction_REPLACE = null,
jnc_CodingErrorAction_REPORT = null,
jnc_CodingErrorAction__init_0 = ($this, var$1) => {
    $this.$name7 = var$1;
},
jnc_CodingErrorAction__init_ = var_0 => {
    let var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
},
jnc_CodingErrorAction__clinit_ = () => {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(714));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(715));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(716));
};
function jnc_CharsetEncoder() {
    let a = this; jl_Object.call(a);
    a.$charset = null;
    a.$replacement1 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
let jnc_CharsetEncoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_RuntimeException__init_(var$2, $rt_s(717));
    $rt_throw(var$2);
},
jnc_CharsetEncoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_RuntimeException__init_(var$2, $rt_s(717));
    $rt_throw(var$2);
},
jnc_CharsetEncoder_encode = ($this, $in, $out, $endOfInput) => {
    let var$4, $e, $result, $remaining, $action, var$9, $$je;
    a: {
        var$4 = $this.$status;
        if (var$4 != 3) {
            if ($endOfInput)
                break a;
            if (var$4 != 2)
                break a;
        }
        $in = new jl_IllegalStateException;
        jl_Exception__init_($in);
        $rt_throw($in);
    }
    $this.$status = !$endOfInput ? 1 : 2;
    $e = $this;
    while (true) {
        try {
            $result = jnci_BufferedEncoder_encodeLoop($e, $in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $in = new jnc_CoderMalfunctionError;
                jl_Throwable__init_0($in, $e);
                $rt_throw($in);
            } else {
                throw $$e;
            }
        }
        if (jnc_CoderResult_isUnderflow($result)) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if (jnc_CoderResult_isOverflow($result))
            break;
        $action = !jnc_CoderResult_isUnmappable($result) ? $this.$malformedAction0 : $this.$unmappableAction;
        b: {
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            $remaining = jn_Buffer_remaining($out);
            var$9 = $this.$replacement1;
            var$4 = var$9.data.length;
            if ($remaining < var$4)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, var$9, 0, var$4);
        }
        jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
    }
    return $result;
},
jnc_CharsetEncoder_encode0 = ($this, $in) => {
    let $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    $this.$status = 0;
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (true) {
        var$4 = $this.$status;
        if (var$4 != 2 && var$4 != 4) {
            $in = new jl_IllegalStateException;
            jl_Exception__init_($in);
            $rt_throw($in);
        }
        $in = jnc_CoderResult_UNDERFLOW;
        if ($in === $in)
            $this.$status = 3;
        if (jnc_CoderResult_isUnderflow($in))
            break;
        if (!jnc_CoderResult_isOverflow($in))
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_Buffer_flip($output);
    return $output;
},
jnc_CharsetEncoder_allocateMore = ($this, $buffer) => {
    let $array, $result;
    $array = jn_ByteBuffer_array($buffer);
    $result = jn_ByteBuffer_wrap0(ju_Arrays_copyOf0($array, $array.data.length * 2 | 0));
    jn_Buffer_position($result, $buffer.$position0);
    return $result;
},
jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException),
jl_Error = $rt_classWithoutFields(jl_Throwable),
jl_AssertionError = $rt_classWithoutFields(jl_Error),
ju_Comparator$NaturalOrder = $rt_classWithoutFields(),
ju_Comparator$NaturalOrder_INSTANCE = null,
ju_Comparator$NaturalOrder_compare = ($this, $o1, $o2) => {
    return $o1.$compareTo0($o2);
},
ju_Comparator$NaturalOrder__clinit_ = () => {
    ju_Comparator$NaturalOrder_INSTANCE = new ju_Comparator$NaturalOrder;
},
jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer),
jn_CharBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_CharBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getChar($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_CharBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_CharBufferOverTypedArray() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$data1 = null;
    a.$array6 = null;
}
let jn_CharBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_CharBufferImpl__init_($this, $position, $limit);
    $this.$readOnly1 = $readOnly;
    $this.$data1 = $data;
    $this.$array6 = $array;
},
jn_CharBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_CharBufferOverTypedArray();
    jn_CharBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_CharBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly1;
},
jn_CharBufferOverTypedArray_getChar = ($this, $index) => {
    return $this.$data1[$index] & 65535;
},
jn_CharBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data1.length;
},
jn_CharBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_CharBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data1;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_CharBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data1.buffer;
        $offset = $srcImpl.$data1.byteOffset + ($index * 2 | 0) | 0;
        $slice = new Uint16Array($slice, $offset, $length);
        $this.$data1.set($slice, $index);
    }
};
function jnc_CoderResult() {
    let a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length5 = 0;
}
let jnc_CoderResult_UNDERFLOW = null,
jnc_CoderResult_OVERFLOW = null,
jnc_CoderResult__init_0 = ($this, $kind, $length) => {
    $this.$kind = $kind;
    $this.$length5 = $length;
},
jnc_CoderResult__init_ = (var_0, var_1) => {
    let var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
},
jnc_CoderResult_isUnderflow = $this => {
    return $this.$kind ? 0 : 1;
},
jnc_CoderResult_isOverflow = $this => {
    return $this.$kind != 1 ? 0 : 1;
},
jnc_CoderResult_isError = $this => {
    return !jnc_CoderResult_isMalformed($this) && !jnc_CoderResult_isUnmappable($this) ? 0 : 1;
},
jnc_CoderResult_isMalformed = $this => {
    return $this.$kind != 2 ? 0 : 1;
},
jnc_CoderResult_isUnmappable = $this => {
    return $this.$kind != 3 ? 0 : 1;
},
jnc_CoderResult_length = $this => {
    let var$1;
    if (jnc_CoderResult_isError($this))
        return $this.$length5;
    var$1 = new jl_UnsupportedOperationException;
    jl_Exception__init_(var$1);
    $rt_throw(var$1);
},
jnc_CoderResult_malformedForLength = $length => {
    return jnc_CoderResult__init_(2, $length);
},
jnc_CoderResult_throwException = $this => {
    let var$1, var$2;
    switch ($this.$kind) {
        case 0:
            var$1 = new jnc_BufferUnderflowException;
            jl_Exception__init_(var$1);
            $rt_throw(var$1);
        case 1:
            var$1 = new jnc_BufferOverflowException;
            jl_Exception__init_(var$1);
            $rt_throw(var$1);
        case 2:
            var$1 = new jnc_MalformedInputException;
            var$2 = $this.$length5;
            jl_Exception__init_(var$1);
            var$1.$length7 = var$2;
            $rt_throw(var$1);
        case 3:
            var$1 = new jnc_UnmappableCharacterException;
            var$2 = $this.$length5;
            jl_Exception__init_(var$1);
            var$1.$length6 = var$2;
            $rt_throw(var$1);
        default:
    }
},
jnc_CoderResult__clinit_ = () => {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
},
jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error);
function ji_ByteArrayInputStream() {
    let a = this; ji_InputStream.call(a);
    a.$buf0 = null;
    a.$pos = 0;
    a.$mark0 = 0;
    a.$count1 = 0;
}
let ji_ByteArrayInputStream__init_ = ($this, $buf) => {
    let var$2;
    var$2 = $buf.data.length;
    $this.$buf0 = $buf;
    $this.$pos = 0;
    $this.$mark0 = 0;
    $this.$count1 = 0 + var$2 | 0;
},
ji_ByteArrayInputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayInputStream_close = $this => {
    return;
};
function cbgu_StringBuilder() {
    let a = this; jl_Object.call(a);
    a.$chars0 = null;
    a.$length4 = 0;
}
let cbgu_StringBuilder_digits = null,
cbgu_StringBuilder__init_0 = ($this, $capacity) => {
    let var$2;
    if ($capacity >= 0) {
        $this.$chars0 = $rt_createCharArray($capacity);
        return;
    }
    var$2 = new jl_NegativeArraySizeException;
    jl_Exception__init_(var$2);
    $rt_throw(var$2);
},
cbgu_StringBuilder__init_ = var_0 => {
    let var_1 = new cbgu_StringBuilder();
    cbgu_StringBuilder__init_0(var_1, var_0);
    return var_1;
},
cbgu_StringBuilder_enlargeBuffer = ($this, $min) => {
    let var$2, var$3, $newSize, $newData;
    var$2 = $this.$chars0;
    var$3 = var$2.data.length;
    $newSize = ((var$3 >> 1) + var$3 | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_fastArraycopy(var$2, 0, $newData, 0, $this.$length4);
    $this.$chars0 = $newData;
},
cbgu_StringBuilder_appendNull = $this => {
    let $newSize, var$2, var$3;
    $newSize = $this.$length4 + 4 | 0;
    if ($newSize > $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars0.data;
    var$3 = $this.$length4;
    $newSize = var$3 + 1 | 0;
    $this.$length4 = $newSize;
    var$2[var$3] = 110;
    var$3 = $newSize + 1 | 0;
    $this.$length4 = var$3;
    var$2[$newSize] = 117;
    $newSize = var$3 + 1 | 0;
    $this.$length4 = $newSize;
    var$2[var$3] = 108;
    $this.$length4 = $newSize + 1 | 0;
    var$2[$newSize] = 108;
},
cbgu_StringBuilder_append0 = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$length4;
    if (var$2 == $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, var$2 + 1 | 0);
    var$3 = $this.$chars0.data;
    var$4 = $this.$length4;
    $this.$length4 = var$4 + 1 | 0;
    var$3[var$4] = $ch;
},
cbgu_StringBuilder_append00 = ($this, $string) => {
    let $adding, $newSize, var$4, var$5, var$6, var$7;
    if ($string === null) {
        cbgu_StringBuilder_appendNull($this);
        return;
    }
    $adding = $string.$nativeString.length;
    $newSize = $this.$length4 + $adding | 0;
    if ($newSize > $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$4 = $this.$chars0;
    var$5 = $this.$length4;
    if (0 <= $adding && $adding <= $string.$nativeString.length && var$5 >= 0) {
        var$6 = var$4.data;
        var$7 = $adding - 0 | 0;
        if ((var$5 + var$7 | 0) <= var$6.length) {
            $rt_stringToCharArray($string.$nativeString, 0, var$4.data, var$5, var$7);
            $this.$length4 = $newSize;
            return;
        }
    }
    $string = new jl_IndexOutOfBoundsException;
    jl_Exception__init_($string);
    $rt_throw($string);
},
cbgu_StringBuilder_toString = $this => {
    let var$1;
    var$1 = $this.$length4;
    if (!var$1)
        return $rt_s(8);
    return jl_String__init_($this.$chars0, 0, var$1);
},
cbgu_StringBuilder_append1 = ($this, $value) => {
    return cbgu_StringBuilder_append2($this, $value, 0, 48);
},
cbgu_StringBuilder_append2 = ($this, $value, $minLength, $prefix) => {
    let var$4, var$5, $j;
    if ($value == (-2147483648)) {
        cbgu_StringBuilder_append00($this, $rt_s(718));
        return $this;
    }
    if ($value < 0) {
        cbgu_StringBuilder_append0($this, 45);
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            var$4 = $value >= 0 ? 1 : 2;
            var$5 = $value;
            while (true) {
                var$5 = var$5 / 10 | 0;
                if (!var$5)
                    break;
                var$4 = var$4 + 1 | 0;
            }
            $j = $minLength - var$4 | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                cbgu_StringBuilder_append0($this, $prefix);
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))]);
        if ($value >= 100000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0]);
        if ($value >= 10000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0]);
        if ($value >= 1000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0]);
        if ($value >= 100000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
    }
    if ($value >= 1000)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
    if ($value >= 100)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
    if ($value >= 10)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
    cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
    return $this;
},
cbgu_StringBuilder_append = ($this, $obj) => {
    if ($obj === null)
        cbgu_StringBuilder_appendNull($this);
    else
        cbgu_StringBuilder_append00($this, $obj.$toString());
    return $this;
},
cbgu_StringBuilder__clinit_ = () => {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
},
jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length7 = 0;
}
let jnc_MalformedInputException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length7;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(719)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length6 = 0;
}
let jnc_UnmappableCharacterException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length6;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(720)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function cbgu_Sort() {
    jl_Object.call(this);
    this.$timSort = null;
}
let cbgu_Sort_instance = null,
cbgm_Shape2D = $rt_classWithoutFields(0);
function cbgm_Rectangle() {
    let a = this; jl_Object.call(a);
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$width = 0.0;
    a.$height0 = 0.0;
}
let cbgm_Rectangle_tmp = null,
cbgm_Rectangle_tmp2 = null,
cbgm_Rectangle__init_ = ($this, $x, $y, $width, $height) => {
    $this.$x1 = $x;
    $this.$y1 = $y;
    $this.$width = $width;
    $this.$height0 = $height;
},
cbgm_Rectangle__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Rectangle();
    cbgm_Rectangle__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Rectangle_getWidth = $this => {
    return $this.$width;
},
cbgm_Rectangle_getHeight = $this => {
    return $this.$height0;
},
cbgm_Rectangle_toString = $this => {
    let var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    jl_AbstractStringBuilder_append(var$1, $rt_s(721));
    var$1 = jl_StringBuilder_append2(var$1, $this.$x1);
    jl_AbstractStringBuilder_append(var$1, $rt_s(722));
    var$1 = jl_StringBuilder_append2(var$1, $this.$y1);
    jl_AbstractStringBuilder_append(var$1, $rt_s(722));
    var$1 = jl_StringBuilder_append2(var$1, $this.$width);
    jl_AbstractStringBuilder_append(var$1, $rt_s(722));
    var$1 = jl_StringBuilder_append2(var$1, $this.$height0);
    jl_AbstractStringBuilder_append(var$1, $rt_s(723));
    return jl_AbstractStringBuilder_toString(var$1);
},
cbgm_Rectangle_hashCode = $this => {
    return (31 * ((31 * ((31 * (31 + cbgu_NumberUtils_floatToRawIntBits($this.$height0) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$width) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$x1) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$y1) | 0;
},
cbgm_Rectangle_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$height0) != cbgu_NumberUtils_floatToRawIntBits($other.$height0))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$width) != cbgu_NumberUtils_floatToRawIntBits($other.$width))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$x1) != cbgu_NumberUtils_floatToRawIntBits($other.$x1))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$y1) == cbgu_NumberUtils_floatToRawIntBits($other.$y1))
        return 1;
    return 0;
},
cbgm_Rectangle__clinit_ = () => {
    cbgm_Rectangle_tmp = new cbgm_Rectangle;
    cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
};
function cbggg_PixmapPacker$PixmapPackerRectangle() {
    let a = this; cbgm_Rectangle.call(a);
    a.$page0 = null;
    a.$splits = null;
    a.$pads = null;
    a.$offsetX0 = 0;
    a.$offsetY = 0;
    a.$originalWidth = 0;
    a.$originalHeight = 0;
}
let cbggg_PixmapPacker$PixmapPackerRectangle__init_0 = ($this, $x, $y, $width, $height) => {
    cbgm_Rectangle__init_($this, $x, $y, $width, $height);
    $this.$offsetX0 = 0;
    $this.$offsetY = 0;
    $this.$originalWidth = $width;
    $this.$originalHeight = $height;
},
cbggg_PixmapPacker$PixmapPackerRectangle__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_PixmapPacker$PixmapPackerRectangle();
    cbggg_PixmapPacker$PixmapPackerRectangle__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_PixmapPacker$PixmapPackerRectangle__init_1 = ($this, $x, $y, $width, $height, $left, $top, $originalWidth, $originalHeight) => {
    cbgm_Rectangle__init_($this, $x, $y, $width, $height);
    $this.$offsetX0 = $left;
    $this.$offsetY = $top;
    $this.$originalWidth = $originalWidth;
    $this.$originalHeight = $originalHeight;
},
cbggg_PixmapPacker$PixmapPackerRectangle__init_2 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7) => {
    let var_8 = new cbggg_PixmapPacker$PixmapPackerRectangle();
    cbggg_PixmapPacker$PixmapPackerRectangle__init_1(var_8, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
    return var_8;
};
function cbggg_PixmapPacker$Page() {
    let a = this; jl_Object.call(a);
    a.$rects = null;
    a.$image = null;
    a.$texture1 = null;
    a.$addedRects = null;
    a.$dirty = 0;
}
let cbggg_PixmapPacker$Page__init_ = ($this, $packer) => {
    let var$2;
    $this.$rects = cbgu_OrderedMap__init_();
    $this.$addedRects = cbgu_Array__init_();
    var$2 = cbgg_Pixmap__init_($packer.$pageWidth, $packer.$pageHeight, $packer.$pageFormat);
    $this.$image = var$2;
    cbgg_Pixmap_setBlending(var$2, cbgg_Pixmap$Blending_None);
    cbgg_Pixmap_setColor($this.$image, $packer.$transparentColor);
    cbgg_Pixmap_fill($this.$image);
},
cbggg_PixmapPacker$Page__init_0 = var_0 => {
    let var_1 = new cbggg_PixmapPacker$Page();
    cbggg_PixmapPacker$Page__init_(var_1, var_0);
    return var_1;
},
cbggg_PixmapPacker$Page_updateTexture = ($this, $minFilter, $magFilter, $useMipMaps) => {
    let var$4, var$5, var$6;
    var$4 = $this.$texture1;
    if (var$4 !== null) {
        if (!$this.$dirty)
            return 0;
        cbgg_Texture_load(var$4, var$4.$data2);
    } else {
        var$5 = new cbggg_PixmapPacker$Page$1;
        var$6 = new cbggg_PixmapTextureData;
        var$4 = $this.$image;
        cbggg_PixmapTextureData__init_(var$6, var$4, cbgg_Pixmap_getFormat(var$4), $useMipMaps, 0, 1);
        var$5.$this$016 = $this;
        cbgg_Texture__init_0(var$5, var$6);
        $this.$texture1 = var$5;
        cbgg_GLTexture_setFilter(var$5, $minFilter, $magFilter);
    }
    $this.$dirty = 0;
    return 1;
};
function jusi_SimpleStreamImpl$ArrayFillingConsumer() {
    let a = this; jl_Object.call(a);
    a.$array7 = null;
    a.$index3 = 0;
}
let jusi_SimpleStreamImpl$ArrayFillingConsumer_test = ($this, $t) => {
    let var$2, var$3;
    var$2 = $this.$array7.data;
    var$3 = $this.$index3;
    $this.$index3 = var$3 + 1 | 0;
    var$2[var$3] = $t;
    return 1;
};
function jusi_SimpleStreamImpl$toArray$lambda$_21_0() {
    jl_Object.call(this);
    this.$_013 = null;
}
let jusi_SimpleStreamImpl$toArray$lambda$_21_0_test = (var$0, var$1) => {
    return ju_ArrayList_add(var$0.$_013, var$1);
};
function cbggg_BitmapFontCache() {
    let a = this; jl_Object.call(a);
    a.$font0 = null;
    a.$integer = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount0 = 0;
    a.$x7 = 0.0;
    a.$y7 = 0.0;
    a.$color1 = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
let cbggg_BitmapFontCache_tempColor = null,
cbggg_BitmapFontCache_draw = ($this, $spriteBatch) => {
    let $regions, $j, $n, var$5, $vertices, var$7, var$8, var$9, var$10, var$11, var$12;
    $regions = $this.$font0.$regions;
    $j = 0;
    $n = $this.$pageVertices.data.length;
    var$5 = $spriteBatch;
    while ($j < $n) {
        if ($this.$idx0.data[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            var$7 = (cbgu_Array_get($regions, $j)).$texture0;
            var$8 = 0;
            var$9 = $this.$idx0.data[$j];
            if (!var$5.$drawing) {
                $spriteBatch = new jl_IllegalStateException;
                jl_RuntimeException__init_($spriteBatch, $rt_s(564));
                $rt_throw($spriteBatch);
            }
            var$10 = var$5.$vertices0.data.length;
            if (var$7 !== var$5.$lastTexture) {
                cbggg_SpriteBatch_switchTexture(var$5, var$7);
                var$11 = var$10;
            } else {
                var$11 = var$10 - var$5.$idx | 0;
                if (!var$11) {
                    cbggg_SpriteBatch_flush(var$5);
                    var$11 = var$10;
                }
            }
            var$11 = jl_Math_min(var$11, var$9);
            jl_System_fastArraycopy($vertices, var$8, var$5.$vertices0, var$5.$idx, var$11);
            var$5.$idx = var$5.$idx + var$11 | 0;
            var$12 = var$9 - var$11 | 0;
            while (var$12 > 0) {
                var$8 = var$8 + var$11 | 0;
                cbggg_SpriteBatch_flush(var$5);
                var$11 = jl_Math_min(var$10, var$12);
                jl_System_fastArraycopy($vertices, var$8, var$5.$vertices0, 0, var$11);
                var$5.$idx = var$5.$idx + var$11 | 0;
                var$12 = var$12 - var$11 | 0;
            }
        }
        $j = $j + 1 | 0;
    }
},
cbggg_BitmapFontCache_requireGlyphs = ($this, $layout) => {
    let $tempGlyphCount, $i, $n, $glyphs, $glyphItems, $ii, $nn, var$9, $i_0, $n_0;
    a: {
        if ($this.$pageVertices.data.length == 1)
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount);
        else {
            $tempGlyphCount = $this.$tempGlyphCount;
            ju_Arrays_fill($tempGlyphCount, 0);
            $i = 0;
            $n = $layout.$runs.$size0;
            while ($i < $n) {
                $glyphs = (cbgu_Array_get($layout.$runs, $i)).$glyphs;
                $glyphItems = $glyphs.$items;
                $ii = 0;
                $nn = $glyphs.$size0;
                while ($ii < $nn) {
                    var$9 = $tempGlyphCount.data;
                    $i_0 = $glyphItems.data[$ii].$page;
                    var$9[$i_0] = var$9[$i_0] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            $tempGlyphCount = $tempGlyphCount.data;
            $i_0 = 0;
            $n_0 = $tempGlyphCount.length;
            while (true) {
                if ($i_0 >= $n_0)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i_0, $tempGlyphCount[$i_0]);
                $i_0 = $i_0 + 1 | 0;
            }
        }
    }
},
cbggg_BitmapFontCache_requirePageGlyphs = ($this, $page, $glyphCount) => {
    let var$3, var$4, $vertexCount, var$6, var$7, $newVertices, $vertices;
    var$3 = $this.$pageGlyphIndices;
    if (var$3 !== null) {
        var$3 = var$3.data;
        if ($glyphCount > var$3[$page].$items1.data.length) {
            var$4 = var$3[$page];
            $vertexCount = $glyphCount - var$3[$page].$size1 | 0;
            if ($vertexCount < 0) {
                var$4 = new jl_IllegalArgumentException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(664));
                jl_RuntimeException__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append0(var$6, $vertexCount)));
                $rt_throw(var$4);
            }
            var$7 = var$4.$size1 + $vertexCount | 0;
            if (var$7 > var$4.$items1.data.length)
                cbgu_IntArray_resize(var$4, jl_Math_max(jl_Math_max(8, var$7), var$4.$size1 * 1.75 | 0));
        }
    }
    var$3 = $this.$idx0.data;
    $vertexCount = var$3[$page] + ($glyphCount * 20 | 0) | 0;
    $newVertices = $this.$pageVertices.data;
    $vertices = $newVertices[$page];
    if ($vertices === null)
        $newVertices[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_fastArraycopy($vertices, 0, $newVertices, 0, var$3[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
},
cbggg_BitmapFontCache_setPageCount = ($this, $pageCount) => {
    let $newPageVertices, $newPageGlyphIndices, $newIdx, $i;
    $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls), $pageCount);
    $newPageGlyphIndices = $this.$pageVertices;
    jl_System_fastArraycopy($newPageGlyphIndices, 0, $newPageVertices, 0, $newPageGlyphIndices.data.length);
    $this.$pageVertices = $newPageVertices;
    $newIdx = $rt_createIntArray($pageCount);
    $newPageVertices = $this.$idx0;
    jl_System_fastArraycopy($newPageVertices, 0, $newIdx, 0, $newPageVertices.data.length);
    $this.$idx0 = $newIdx;
    $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
    $i = 0;
    $newIdx = $this.$pageGlyphIndices;
    if ($newIdx !== null) {
        $i = $newIdx.data.length;
        jl_System_fastArraycopy($newIdx, 0, $newPageGlyphIndices, 0, $i);
    }
    $newIdx = $newPageGlyphIndices.data;
    while ($i < $pageCount) {
        $newIdx[$i] = cbgu_IntArray__init_1();
        $i = $i + 1 | 0;
    }
    $this.$pageGlyphIndices = $newPageGlyphIndices;
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
},
cbggg_BitmapFontCache_addGlyph = ($this, $glyph, $x, $y, $color) => {
    let var$5, $scaleX, $scaleY, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $vertices, $idx, var$19, var$20;
    var$5 = $this.$font0.$data14;
    $scaleX = var$5.$scaleX;
    $scaleY = var$5.$scaleY;
    $x = $x + $glyph.$xoffset * $scaleX;
    $y = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width1 * $scaleX;
    $height = $glyph.$height2 * $scaleY;
    $u = $glyph.$u;
    $u2 = $glyph.$u2;
    $v = $glyph.$v;
    $v2 = $glyph.$v2;
    if ($this.$integer) {
        $x = jl_Math_round($x);
        $y = jl_Math_round($y);
        $width = jl_Math_round($width);
        $height = jl_Math_round($height);
    }
    $x2 = $x + $width;
    $y2 = $y + $height;
    $page = $glyph.$page;
    $vertices = $this.$idx0.data;
    $idx = $vertices[$page];
    $vertices[$page] = $vertices[$page] + 20 | 0;
    $vertices = $this.$pageGlyphIndices;
    if ($vertices !== null) {
        $glyph = $vertices.data[$page];
        var$19 = $this.$glyphCount0;
        $this.$glyphCount0 = var$19 + 1 | 0;
        cbgu_IntArray_add($glyph, var$19);
    }
    $vertices = $this.$pageVertices.data[$page].data;
    var$20 = $idx + 1 | 0;
    $vertices[$idx] = $x;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $y;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $color;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $u;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $v;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $x;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $y2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $color;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $u;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $v2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $x2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $y2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $color;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $u2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $v2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $x2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $y;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $color;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $u2;
    $vertices[var$20] = $v;
},
cbggg_BitmapFontCache__clinit_ = () => {
    cbggg_BitmapFontCache_tempColor = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
};
function jnci_BufferedEncoder() {
    let a = this; jnc_CharsetEncoder.call(a);
    a.$inArray0 = null;
    a.$outArray = null;
}
let jnci_BufferedEncoder_encodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, var$7, $i, var$9, $outPos, $result, $outSize, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    var$7 = $this;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$9 = $inArray.data;
                    var$9[$i - $inPos | 0] = var$9[$i];
                    $i = $i + 1 | 0;
                }
                var$9 = $inArray.data;
                $outPos = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $outPos | 0, var$9.length);
                jn_CharBuffer_get($in, $inArray, $outPos, $inSize - $outPos | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                $result = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$9 = $outArray.data;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$9.length);
            $controller = new jnci_BufferedEncoder$Controller;
            $controller.$in = $in;
            $controller.$out0 = $out;
            $result = jnci_UTF8Encoder_arrayEncode(var$7, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            $outPos = $controller.$outPosition0;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize)
                    $result = jnc_CoderResult_UNDERFLOW;
                else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize)
                    $result = jnc_CoderResult_OVERFLOW;
            }
            jn_ByteBuffer_put($out, $outArray, 0, $outPos);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_UTF8Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $ch, $low, var$13, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 2))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 3))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                $inPos = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch >> 6 & 63) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if (jn_Buffer_hasRemaining($controller.$in))
                        break a;
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = $inPos + (-2) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 4))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$13 = $low + 1 | 0;
                var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                $outPos = var$13 + 1 | 0;
                var$10[var$13] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = $inPos;
            }
            $inPos = var$9;
            $outPos = $low;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition = var$9;
    $controller.$outPosition0 = $outPos;
    return $result;
},
cbgm_MathUtils$Sin = $rt_classWithoutFields(),
cbgm_MathUtils$Sin_table = null,
cbgm_MathUtils$Sin__clinit_ = () => {
    let $i, var$2;
    cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    var$2 = cbgm_MathUtils$Sin_table.data;
    var$2[0] = 0.0;
    var$2[4096] = 1.0;
    var$2[8192] = 0.0;
    var$2[12288] = (-1.0);
},
dcgbu_InputUtil = $rt_classWithoutFields(dcgbu_Util),
dcgbu_InputUtil_isTouched = () => {
    let var$1, var$2;
    var$1 = cbg_Gdx_input;
    var$2 = 0;
    a: {
        while (var$2 < 20) {
            if (var$1.$touched.data[var$2]) {
                var$2 = 1;
                break a;
            }
            var$2 = var$2 + 1 | 0;
        }
        var$2 = 0;
    }
    return var$2;
},
dcgbu_InputUtil_touchInRange = $range => {
    $range = $range.data;
    return cgxgbt_TeaInput_getX(cbg_Gdx_input) >= $range[0] && cgxgbt_TeaInput_getX(cbg_Gdx_input) <= $range[2] && cgxgbt_TeaInput_getY(cbg_Gdx_input) >= $range[1] && cgxgbt_TeaInput_getY(cbg_Gdx_input) <= $range[3] ? 1 : 0;
};
function dcgccsf_ShapeType() {
    let a = this; jl_Enum.call(a);
    a.$width7 = 0;
    a.$height8 = 0;
    a.$totalUnit = 0;
    a.$chance = 0;
}
let dcgccsf_ShapeType_N_1x2 = null,
dcgccsf_ShapeType_N_2x1 = null,
dcgccsf_ShapeType_N_2x2 = null,
dcgccsf_ShapeType_L_SHAPE_1_1 = null,
dcgccsf_ShapeType_L_SHAPE_2_1 = null,
dcgccsf_ShapeType_L_SHAPE_3_1 = null,
dcgccsf_ShapeType_L_SHAPE_4_1 = null,
dcgccsf_ShapeType_L_SHAPE_1_2 = null,
dcgccsf_ShapeType_L_SHAPE_2_2 = null,
dcgccsf_ShapeType_L_SHAPE_3_2 = null,
dcgccsf_ShapeType_L_SHAPE_4_2 = null,
dcgccsf_ShapeType_T_SHAPE_1_1 = null,
dcgccsf_ShapeType_T_SHAPE_1_2 = null,
dcgccsf_ShapeType_T_SHAPE_2_1 = null,
dcgccsf_ShapeType_T_SHAPE_2_2 = null,
dcgccsf_ShapeType_I_4x1 = null,
dcgccsf_ShapeType_I_1x4 = null,
dcgccsf_ShapeType_Z_SHAPE = null,
dcgccsf_ShapeType_O_3x3 = null,
dcgccsf_ShapeType_PLUS_3x3 = null,
dcgccsf_ShapeType_BIG_L_3x3_1 = null,
dcgccsf_ShapeType_BIG_L_3x3_2 = null,
dcgccsf_ShapeType_BIG_L_3x3_3 = null,
dcgccsf_ShapeType_BIG_L_3x3_4 = null,
dcgccsf_ShapeType_B_2x2_1 = null,
dcgccsf_ShapeType_B_2x2_2 = null,
dcgccsf_ShapeType_$VALUES = null,
dcgccsf_ShapeType_values = () => {
    return dcgccsf_ShapeType_$VALUES.$clone0();
},
dcgccsf_ShapeType__init_0 = ($this, var$1, var$2, $width, $height, $totalUnit, $chance) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$width7 = $width;
    $this.$height8 = $height;
    $this.$totalUnit = $totalUnit;
    $this.$chance = $chance;
},
dcgccsf_ShapeType__init_ = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new dcgccsf_ShapeType();
    dcgccsf_ShapeType__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
dcgccsf_ShapeType_getData = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    a: {
        dcgccsf_ShapeType$1_$callClinit();
        switch (dcgccsf_ShapeType$1_$SwitchMap$dev$cas$game$core$content$standard$format$ShapeType.data[jl_Enum_ordinal($this)]) {
            case 1:
                var$1 = $rt_createArray($rt_arraycls($rt_intcls), 2);
                var$2 = var$1.data;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[0] = var$3;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[1] = var$3;
                break a;
            case 2:
                var$1 = $rt_createArray($rt_arraycls($rt_intcls), 1);
                var$1.data[0] = $rt_createIntArrayFromData([1, 1]);
                break a;
            case 3:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1]), $rt_createIntArrayFromData([1, 1])]);
                break a;
            case 4:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 0]), $rt_createIntArrayFromData([1, 0]), $rt_createIntArrayFromData([1, 1])]);
                break a;
            case 5:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1]), $rt_createIntArrayFromData([1, 0]), $rt_createIntArrayFromData([1, 0])]);
                break a;
            case 6:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1]), $rt_createIntArrayFromData([0, 1]), $rt_createIntArrayFromData([0, 1])]);
                break a;
            case 7:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 1]), $rt_createIntArrayFromData([0, 1]), $rt_createIntArrayFromData([1, 1])]);
                break a;
            case 8:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([0, 0, 1])]);
                break a;
            case 9:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([1, 0, 0])]);
                break a;
            case 10:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 0, 1]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 11:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 0, 0]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 12:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([0, 1, 0])]);
                break a;
            case 13:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 1, 0]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 14:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 1]), $rt_createIntArrayFromData([1, 1]), $rt_createIntArrayFromData([0, 1])]);
                break a;
            case 15:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 0]), $rt_createIntArrayFromData([1, 1]), $rt_createIntArrayFromData([1, 0])]);
                break a;
            case 16:
                var$1 = $rt_createArray($rt_arraycls($rt_intcls), 1);
                var$1.data[0] = $rt_createIntArrayFromData([1, 1, 1, 1]);
                break a;
            case 17:
                var$1 = $rt_createArray($rt_arraycls($rt_intcls), 4);
                var$2 = var$1.data;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[0] = var$3;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[1] = var$3;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[2] = var$3;
                var$3 = $rt_createIntArray(1);
                var$3.data[0] = 1;
                var$2[3] = var$3;
                break a;
            case 18:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 0]), $rt_createIntArrayFromData([0, 1, 1])]);
                break a;
            case 19:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 1, 0]), $rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([0, 1, 0])]);
                break a;
            case 20:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 0, 0]), $rt_createIntArrayFromData([1, 0, 0]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 21:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([1, 0, 0]), $rt_createIntArrayFromData([1, 0, 0])]);
                break a;
            case 22:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 0, 1]), $rt_createIntArrayFromData([0, 0, 1]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 23:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([1, 0, 0]), $rt_createIntArrayFromData([1, 0, 0])]);
                break a;
            case 24:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([1, 1, 1]), $rt_createIntArrayFromData([1, 1, 1])]);
                break a;
            case 25:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([0, 1]), $rt_createIntArrayFromData([1, 0])]);
                break a;
            case 26:
                var$1 = $rt_wrapArray($rt_arraycls($rt_intcls), [$rt_createIntArrayFromData([1, 0]), $rt_createIntArrayFromData([0, 1])]);
                break a;
            default:
        }
        var$4 = new jl_IllegalStateException;
        var$5 = jl_String_valueOf($this);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(724)), var$5);
        jl_IllegalStateException__init_(var$4, jl_StringBuilder_toString(var$6));
        $rt_throw(var$4);
    }
    return var$1;
},
dcgccsf_ShapeType_$values = () => {
    let var$1, var$2;
    var$1 = $rt_createArray(dcgccsf_ShapeType, 26);
    var$2 = var$1.data;
    var$2[0] = dcgccsf_ShapeType_N_1x2;
    var$2[1] = dcgccsf_ShapeType_N_2x1;
    var$2[2] = dcgccsf_ShapeType_N_2x2;
    var$2[3] = dcgccsf_ShapeType_L_SHAPE_1_1;
    var$2[4] = dcgccsf_ShapeType_L_SHAPE_2_1;
    var$2[5] = dcgccsf_ShapeType_L_SHAPE_3_1;
    var$2[6] = dcgccsf_ShapeType_L_SHAPE_4_1;
    var$2[7] = dcgccsf_ShapeType_L_SHAPE_1_2;
    var$2[8] = dcgccsf_ShapeType_L_SHAPE_2_2;
    var$2[9] = dcgccsf_ShapeType_L_SHAPE_3_2;
    var$2[10] = dcgccsf_ShapeType_L_SHAPE_4_2;
    var$2[11] = dcgccsf_ShapeType_T_SHAPE_1_1;
    var$2[12] = dcgccsf_ShapeType_T_SHAPE_1_2;
    var$2[13] = dcgccsf_ShapeType_T_SHAPE_2_1;
    var$2[14] = dcgccsf_ShapeType_T_SHAPE_2_2;
    var$2[15] = dcgccsf_ShapeType_I_4x1;
    var$2[16] = dcgccsf_ShapeType_I_1x4;
    var$2[17] = dcgccsf_ShapeType_Z_SHAPE;
    var$2[18] = dcgccsf_ShapeType_O_3x3;
    var$2[19] = dcgccsf_ShapeType_PLUS_3x3;
    var$2[20] = dcgccsf_ShapeType_BIG_L_3x3_1;
    var$2[21] = dcgccsf_ShapeType_BIG_L_3x3_2;
    var$2[22] = dcgccsf_ShapeType_BIG_L_3x3_3;
    var$2[23] = dcgccsf_ShapeType_BIG_L_3x3_4;
    var$2[24] = dcgccsf_ShapeType_B_2x2_1;
    var$2[25] = dcgccsf_ShapeType_B_2x2_2;
    return var$1;
},
dcgccsf_ShapeType__clinit_ = () => {
    dcgccsf_ShapeType_N_1x2 = dcgccsf_ShapeType__init_($rt_s(725), 0, 1, 2, 2, 10);
    dcgccsf_ShapeType_N_2x1 = dcgccsf_ShapeType__init_($rt_s(726), 1, 2, 1, 2, 10);
    dcgccsf_ShapeType_N_2x2 = dcgccsf_ShapeType__init_($rt_s(727), 2, 2, 2, 4, 10);
    dcgccsf_ShapeType_L_SHAPE_1_1 = dcgccsf_ShapeType__init_($rt_s(728), 3, 2, 3, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_2_1 = dcgccsf_ShapeType__init_($rt_s(729), 4, 2, 3, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_3_1 = dcgccsf_ShapeType__init_($rt_s(730), 5, 2, 3, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_4_1 = dcgccsf_ShapeType__init_($rt_s(731), 6, 2, 3, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_1_2 = dcgccsf_ShapeType__init_($rt_s(732), 7, 3, 2, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_2_2 = dcgccsf_ShapeType__init_($rt_s(733), 8, 3, 2, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_3_2 = dcgccsf_ShapeType__init_($rt_s(734), 9, 3, 2, 4, 3);
    dcgccsf_ShapeType_L_SHAPE_4_2 = dcgccsf_ShapeType__init_($rt_s(735), 10, 3, 2, 4, 3);
    dcgccsf_ShapeType_T_SHAPE_1_1 = dcgccsf_ShapeType__init_($rt_s(736), 11, 3, 2, 4, 3);
    dcgccsf_ShapeType_T_SHAPE_1_2 = dcgccsf_ShapeType__init_($rt_s(737), 12, 3, 2, 4, 3);
    dcgccsf_ShapeType_T_SHAPE_2_1 = dcgccsf_ShapeType__init_($rt_s(738), 13, 2, 3, 4, 3);
    dcgccsf_ShapeType_T_SHAPE_2_2 = dcgccsf_ShapeType__init_($rt_s(739), 14, 2, 3, 4, 3);
    dcgccsf_ShapeType_I_4x1 = dcgccsf_ShapeType__init_($rt_s(740), 15, 4, 1, 4, 7);
    dcgccsf_ShapeType_I_1x4 = dcgccsf_ShapeType__init_($rt_s(741), 16, 1, 4, 4, 7);
    dcgccsf_ShapeType_Z_SHAPE = dcgccsf_ShapeType__init_($rt_s(742), 17, 3, 2, 4, 7);
    dcgccsf_ShapeType_O_3x3 = dcgccsf_ShapeType__init_($rt_s(743), 18, 3, 3, 9, 5);
    dcgccsf_ShapeType_PLUS_3x3 = dcgccsf_ShapeType__init_($rt_s(744), 19, 3, 3, 5, 2);
    dcgccsf_ShapeType_BIG_L_3x3_1 = dcgccsf_ShapeType__init_($rt_s(745), 20, 3, 3, 5, 2);
    dcgccsf_ShapeType_BIG_L_3x3_2 = dcgccsf_ShapeType__init_($rt_s(746), 21, 3, 3, 5, 2);
    dcgccsf_ShapeType_BIG_L_3x3_3 = dcgccsf_ShapeType__init_($rt_s(747), 22, 3, 3, 5, 2);
    dcgccsf_ShapeType_BIG_L_3x3_4 = dcgccsf_ShapeType__init_($rt_s(748), 23, 3, 3, 5, 2);
    dcgccsf_ShapeType_B_2x2_1 = dcgccsf_ShapeType__init_($rt_s(749), 24, 2, 2, 2, 1);
    dcgccsf_ShapeType_B_2x2_2 = dcgccsf_ShapeType__init_($rt_s(750), 25, 2, 2, 2, 1);
    dcgccsf_ShapeType_$VALUES = dcgccsf_ShapeType_$values();
},
dcgccss_StateUtil = $rt_classWithoutFields(),
dcgccss_StateUtil_getClosestTile = $position => {
    let $relX, $iy, $relY, var$5, $ix, $bestDist2, $dx, var$9, var$10, $dy, $cx, $cy, var$14, $dx2, $dy2, $dist2;
    if ($position === null)
        return null;
    $relX = $position.$x2 - 1.0;
    dcgccso_TileBoard_$callClinit();
    $relX = $relX - dcgccso_TileBoard_renderX;
    dcgccso_Tile_$callClinit();
    $iy = dcgccso_Tile_WIDTH;
    $relX = $relX + ($iy / 2 | 0);
    $relY = $position.$y2 - 1.0 - dcgccso_TileBoard_renderY + (dcgccso_Tile_HEIGHT / 2 | 0);
    if ($relX >= 0.0 && $relY >= 0.0) {
        var$5 = dcgccso_TileBoard_size;
        if ($relX < var$5.$width0 && $relY < var$5.$height1) {
            $ix = jl_Math_floor($relX / $iy) | 0;
            $iy = jl_Math_floor($relY / dcgccso_Tile_HEIGHT) | 0;
            $bestDist2 = 3.4028234663852886E38;
            $dx = 0;
            var$9 = $ix;
            var$10 = $iy;
            while ($dx <= 1) {
                $dy = 0;
                while ($dy <= 1) {
                    $cx = $ix + $dx | 0;
                    $cy = $iy + $dy | 0;
                    if ($cx >= 0 && $cy >= 0 && $cx <= 7 && $cy <= 7) {
                        $relX = $position.$x2 - dcgccso_TileBoard_renderX + 4.0;
                        var$14 = dcgccso_Tile_WIDTH;
                        $dx2 = $relX + $rt_imul($cx, var$14) + var$14 / 2.0;
                        $relX = $position.$y2 - dcgccso_TileBoard_renderY + 2.0;
                        var$14 = dcgccso_Tile_HEIGHT;
                        $dy2 = $relX + $rt_imul($cy, var$14) + var$14 / 2.0;
                        $dist2 = $dx2 * $dx2 + $dy2 * $dy2;
                        if ($dist2 < $bestDist2) {
                            $bestDist2 = $dist2;
                            var$9 = $cx;
                            var$10 = $cy;
                        }
                    }
                    $dy = $dy + 1 | 0;
                }
                $dx = $dx + 1 | 0;
            }
            return dcgccsf_TilePosition__init_(var$9, var$10);
        }
    }
    return null;
},
dcgccss_StateUtil_canStickShape = ($shape, $oriPos, $inLoop) => {
    let $canPut, $readyToPut, $data, $x, var$8, var$9, $y, $pos, $$je;
    $canPut = 1;
    $readyToPut = ju_ArrayList__init_();
    $data = dcgccsf_ShapeType_getData($shape.$type5);
    $x = 0;
    a: while (true) {
        var$8 = $data.data;
        var$9 = var$8.length;
        if ($x >= var$9) {
            if (!$canPut)
                return null;
            if ($inLoop)
                return ju_ArrayList__init_();
            $shape.$pixmap = null;
            $shape.$texture = null;
            $shape.$placed = 1;
            dcgb_ObjectManager_remove($shape);
            return $readyToPut;
        }
        $y = 0;
        while ($y < var$8[$x].data.length) {
            if (var$8[$x].data[$y])
                b: {
                    try {
                        $pos = dcgccsf_TilePosition__init_(dcgccsf_TilePosition_x($oriPos) + $y | 0, ((dcgccsf_TilePosition_y($oriPos) + var$9 | 0) - $x | 0) - 1 | 0);
                        if (dcgccss_StateUtil_withValue(dcgccsf_TilePosition_x($pos), dcgccsf_TilePosition_y($pos))) {
                            $canPut = 0;
                            break b;
                        }
                        if ($inLoop)
                            break b;
                        ju_ArrayList_add($readyToPut, dcgccso_Tile__init_(dcgccsf_TileType_DISPLAYED, $shape.$color0, $pos));
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IndexOutOfBoundsException) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    return null;
},
dcgccss_StateUtil_withValue = ($x, $y) => {
    let $tile;
    dcgccss_ItemManager_$callClinit();
    $tile = dcgccss_ItemManager_tiles.data[$x].data[$y];
    return $tile !== null && $tile.$state0 !== dcgccsf_TileType_EMPTY ? 1 : 0;
},
dcgccss_StateUtil_checkShapeCanPut = $shape => {
    let $x, $y;
    $x = 0;
    while ($x < 8) {
        $y = 0;
        while ($y < 8) {
            if (dcgccss_StateUtil_canStickShape($shape, dcgccsf_TilePosition__init_($x, $y), 1) !== null)
                return 1;
            $y = $y + 1 | 0;
        }
        $x = $x + 1 | 0;
    }
    return 0;
},
dcgccss_StateUtil_resetGame = () => {
    let var$1, var$2, var$3;
    dcgccss_ItemManager_$callClinit();
    var$1 = 0;
    while (true) {
        var$2 = dcgccss_ItemManager_tiles.data;
        if (var$1 >= var$2.length)
            break;
        var$3 = 0;
        while (var$3 < var$2[var$1].data.length) {
            var$2[var$1].data[var$3] = null;
            var$3 = var$3 + 1 | 0;
        }
        var$1 = var$1 + 1 | 0;
    }
    var$1 = 0;
    while (true) {
        var$2 = dcgccss_ItemManager_shapes.data;
        if (var$1 >= var$2.length)
            break;
        var$2[var$1] = null;
        var$1 = var$1 + 1 | 0;
    }
    dcgccss_ItemManager_initShapes();
    dcgccso_Score_score = Long_ZERO;
    dcgccso_Score_bufferScore = Long_ZERO;
    dcgccso_Score_remainder = 0.0;
    dcgccso_Effect_combo = 0;
};
function cgxgbta_AssetLoadImpl$6() {
    let a = this; jl_Object.call(a);
    a.$val$listener0 = null;
    a.$val$path1 = null;
    a.$val$fileHandle = null;
    a.$this$09 = null;
}
let cgxgbta_AssetLoadImpl$6_onProgress = ($this, $total, $loaded) => {
    let var$3;
    var$3 = $this.$val$listener0;
    if (var$3 !== null)
        var$3.$onProgress($total, $loaded);
},
cgxgbta_AssetLoadImpl$6_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
    a: {
        var$1 = var$2;
        var$2 = $this.$this$09.$assetInQueue;
        var$3 = $this.$val$path1;
        var$2 = var$2.$backingMap;
        var$4 = 0;
        var$5 = null;
        if (var$3 === null) {
            var$6 = var$2.$elementData.data[0];
            while (var$6 !== null) {
                if (var$6.$key === null)
                    break a;
                var$3 = var$6.$next3;
                var$5 = var$6;
                var$6 = var$3;
            }
        } else {
            var$7 = jl_String_hashCode(var$3);
            var$8 = var$2.$elementData.data;
            var$4 = var$7 & (var$8.length - 1 | 0);
            var$6 = var$8[var$4];
            while (var$6 !== null && !(var$6.$origKeyHash == var$7 && ju_HashMap_areEqualKeys(var$3, var$6.$key))) {
                var$9 = var$6.$next3;
                var$5 = var$6;
                var$6 = var$9;
            }
        }
    }
    if (var$6 === null)
        var$6 = null;
    else {
        if (var$5 !== null)
            var$5.$next3 = var$6.$next3;
        else
            var$2.$elementData.data[var$4] = var$6.$next3;
        var$2.$modCount0 = var$2.$modCount0 + 1 | 0;
        var$2.$elementCount = var$2.$elementCount - 1 | 0;
    }
    var$8 = cgxgbtdt_TypedArrays_toByteArray(var$1.$data15);
    var$2 = $this.$val$fileHandle;
    var$3 = cgxgbt_TeaFiles_getFileDB(var$2.$teaFiles, var$2.$type0);
    var$6 = ji_ByteArrayOutputStream__init_0(jl_Math_max(512, jl_Math_min(4096, 8192)));
    var$5 = new cgxgbtf_FileDB$1;
    var$5.$this$013 = var$3;
    var$5.$val$buffer = var$6;
    var$5.$val$file = var$2;
    var$5.$val$append = 0;
    var$5.$val$bufferSize = 4096;
    b: {
        c: {
            try {
                cgxgbtf_FileDB$1_write(var$5, var$8);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$1 = $$je;
                    break c;
                } else{
                    var$1 = $$je;
                    break b;
                }
            }
            cbgu_StreamUtils_closeQuietly(var$5);
            var$2 = $this.$val$listener0;
            if (var$2 !== null)
                var$2.$onSuccess($this.$val$path1, var$1);
            return;
        }
        try {
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_String_valueOf($this.$val$fileHandle);
            var$6 = jl_String_valueOf(cgxgbt_TeaFileHandle_type($this.$val$fileHandle));
            var$9 = jl_StringBuilder__init_();
            jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(751)), var$3), $rt_s(658)), var$6), 41);
            cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$9), var$1);
            $rt_throw(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$1 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly(var$5);
    $rt_throw(var$1);
};
function cbgggf_FreeType$Glyph() {
    cbgggf_FreeType$Pointer.call(this);
    this.$rendered = 0;
}
let cbgggf_FreeType$Glyph_dispose = $this => {
    Module._c_Glyph_done($this.$address);
},
cbgggf_FreeType$Glyph_strokeBorder = ($this, $stroker, $inside) => {
    $this.$address = Module._c_Glyph_strokeBorder($this.$address, $stroker.$address, $inside != 1 ? 0 : 1);
},
cbgggf_FreeType$Glyph_toBitmap = ($this, $renderMode) => {
    let $bitmap, var$3, var$4;
    $bitmap = Module._c_Glyph_toBitmap($this.$address, $renderMode);
    if ($bitmap) {
        $this.$address = $bitmap;
        $this.$rendered = 1;
        return;
    }
    var$3 = new cbgu_GdxRuntimeException;
    $renderMode = Module._c_FreeType_getLastErrorCode();
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(752)), $renderMode);
    jl_RuntimeException__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
cbgggf_FreeType$Glyph_getBitmap = $this => {
    let var$1;
    if (!$this.$rendered) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_(var$1, $rt_s(753));
        $rt_throw(var$1);
    }
    var$1 = new cbgggf_FreeType$Bitmap;
    cbgggf_FreeType$Pointer__init_(var$1, Module._c_Glyph_getBitmap($this.$address));
    return var$1;
},
cbgggf_FreeType$Glyph_getLeft = $this => {
    let var$1;
    if ($this.$rendered)
        return Module._c_Glyph_getLeft($this.$address);
    var$1 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$1, $rt_s(753));
    $rt_throw(var$1);
},
cbgggf_FreeType$Glyph_getTop = $this => {
    let var$1;
    if ($this.$rendered)
        return Module._c_Glyph_getTop($this.$address);
    var$1 = new cbgu_GdxRuntimeException;
    jl_RuntimeException__init_(var$1, $rt_s(753));
    $rt_throw(var$1);
},
cbgggf_FreeType$Bitmap = $rt_classWithoutFields(cbgggf_FreeType$Pointer),
cbgggf_FreeType$Bitmap_getRows = $this => {
    return Module._c_Bitmap_getRows($this.$address);
},
cbgggf_FreeType$Bitmap_getWidth = $this => {
    return Module._c_Bitmap_getWidth($this.$address);
},
cbgggf_FreeType$Bitmap_getPitch = $this => {
    return Module._c_Bitmap_getPitch($this.$address);
},
cbgggf_FreeType$Bitmap_getBuffer = $this => {
    let $offset, $length;
    if (!cbgggf_FreeType$Bitmap_getRows($this))
        return cbgu_BufferUtils_newByteBuffer(1);
    $offset = Module._c_Bitmap_getBufferAddress($this.$address);
    $length = Module._c_Bitmap_getBufferSize($this.$address);
    return jn_ByteBuffer_wrap(cgxgbtdt_TypedArrays_toByteArray(cbgggf_FreeType$Bitmap_getBuffer$js_body$_10($this.$address, $offset, $length)), 0, $length);
},
cbgggf_FreeType$Bitmap_getPixmap = ($this, $format, $color, $gamma) => {
    let $width, $rows, $src, $y, $rowBytes, $pixmap, $rgba, $srcRow, $dstRow, $dst, var$14, var$15, $i, $x, $b, $ii, $n, $rgb, $a, var$23, var$24, $alpha;
    $width = cbgggf_FreeType$Bitmap_getWidth($this);
    $rows = cbgggf_FreeType$Bitmap_getRows($this);
    $src = cbgggf_FreeType$Bitmap_getBuffer($this);
    $y = Module._c_Bitmap_getPixelMode($this.$address);
    $rowBytes = jl_Math_abs(cbgggf_FreeType$Bitmap_getPitch($this));
    if ($color === cbgg_Color_WHITE && $y == cbgggf_FreeType_FT_PIXEL_MODE_GRAY && $rowBytes == $width && $gamma === 1.0) {
        $pixmap = cbgg_Pixmap__init_($width, $rows, cbgg_Pixmap$Format_Alpha);
        cbgu_BufferUtils_copy1($src, cbgg_Pixmap_getPixels($pixmap), (cbgg_Pixmap_getPixels($pixmap)).$capacityImpl());
    } else {
        $pixmap = cbgg_Pixmap__init_($width, $rows, cbgg_Pixmap$Format_RGBA8888);
        $rgba = ($color.$r * 255.0 | 0) << 24 | ($color.$g * 255.0 | 0) << 16 | ($color.$b * 255.0 | 0) << 8 | $color.$a * 255.0 | 0;
        $srcRow = $rt_createByteArray($rowBytes);
        $dstRow = $rt_createIntArray($width);
        $dst = jn_ByteBufferJsImpl_asIntBuffer(cbgg_Pixmap_getPixels($pixmap));
        if ($y == cbgggf_FreeType_FT_PIXEL_MODE_MONO) {
            var$14 = $srcRow.data;
            var$15 = $dstRow.data;
            $y = 0;
            while ($y < $rows) {
                jn_ByteBuffer_get($src, $srcRow);
                $i = 0;
                $x = 0;
                while ($x < $width) {
                    $b = var$14[$i];
                    $ii = 0;
                    $n = jl_Math_min(8, $width - $x | 0);
                    while ($ii < $n) {
                        if ($b & 1 << (7 - $ii | 0))
                            var$15[$x + $ii | 0] = $rgba;
                        else
                            var$15[$x + $ii | 0] = 0;
                        $ii = $ii + 1 | 0;
                    }
                    $i = $i + 1 | 0;
                    $x = $x + 8 | 0;
                }
                jn_IntBuffer_put($dst, $dstRow);
                $y = $y + 1 | 0;
            }
        } else {
            var$15 = $srcRow.data;
            var$14 = $dstRow.data;
            $rgb = $rgba & (-256);
            $a = $rgba & 255;
            $y = 0;
            $rgba = $rgb | $a;
            var$23 = $a;
            var$24 = $gamma;
            while ($y < $rows) {
                jn_ByteBuffer_get($src, $srcRow);
                $x = 0;
                while ($x < $width) {
                    $alpha = var$15[$x] & 255;
                    if (!$alpha)
                        var$14[$x] = $rgb;
                    else if ($alpha == 255)
                        var$14[$x] = $rgba;
                    else
                        var$14[$x] = $rgb | var$23 * jl_Math_pow($alpha / 255.0, var$24) | 0;
                    $x = $x + 1 | 0;
                }
                jn_IntBuffer_put($dst, $dstRow);
                $y = $y + 1 | 0;
            }
            $dst = $pixmap.$nativePixmap.$nativePixmap0;
            (cbggg_Gdx2DPixmapNative_getHeapData($dst, 0)).set(cgxgbtdt_TypedArrays_getInt8Array($dst.$buffer4));
        }
    }
    if ($format === cbgg_Pixmap_getFormat($pixmap))
        $color = $pixmap;
    else {
        $color = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), $format);
        cbgg_Pixmap_setBlending($color, cbgg_Pixmap$Blending_None);
        cbgg_Pixmap_drawPixmap0($color, $pixmap, 0, 0);
        cbgg_Pixmap_setBlending($color, cbgg_Pixmap$Blending_SourceOver);
        cbgg_Pixmap_dispose($pixmap);
    }
    $format = $color.$nativePixmap;
    $y = $color.$color;
    $format = $format.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_draw_rect($format.$basePtr, 0, 0, 1000, 1000, $y);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($format);
    return $color;
},
cbgggf_FreeType$Bitmap_getBuffer$js_body$_10 = (var$1, var$2, var$3) => {
    var buff = Module.HEAP8.subarray(var$2, var$2 + var$3);
    return buff;
},
jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException),
dcgbmc_SurfaceComponent$1 = $rt_classWithoutFields(),
dcgbmc_SurfaceComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition = null,
dcgbmc_SurfaceComponent$1_$callClinit = () => {
    dcgbmc_SurfaceComponent$1_$callClinit = $rt_eraseClinit(dcgbmc_SurfaceComponent$1);
    dcgbmc_SurfaceComponent$1__clinit_();
},
dcgbmc_SurfaceComponent$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((dcgbmf_RenderPosition_values()).data.length);
    var$2 = var$1.data;
    dcgbmc_SurfaceComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition = var$1;
    var$2[dcgbmf_RenderPosition_TOP_LEFT.$ordinal0] = 1;
    var$2[dcgbmf_RenderPosition_TOP_CENTER.$ordinal0] = 2;
    var$2[dcgbmf_RenderPosition_TOP_RIGHT.$ordinal0] = 3;
    var$2[dcgbmf_RenderPosition_CENTER_LEFT.$ordinal0] = 4;
    var$2[dcgbmf_RenderPosition_CENTER.$ordinal0] = 5;
    var$2[dcgbmf_RenderPosition_CENTER_RIGHT.$ordinal0] = 6;
    var$2[dcgbmf_RenderPosition_BOTTOM_LEFT.$ordinal0] = 7;
    var$2[dcgbmf_RenderPosition_BOTTOM_CENTER.$ordinal0] = 8;
    var$2[dcgbmf_RenderPosition_BOTTOM_RIGHT.$ordinal0] = 9;
};
function jnc_CharsetDecoder() {
    let a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction0 = null;
    a.$state = 0;
}
let jnc_CharsetDecoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_RuntimeException__init_(var$2, $rt_s(754));
    $rt_throw(var$2);
},
jnc_CharsetDecoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_RuntimeException__init_(var$2, $rt_s(754));
    $rt_throw(var$2);
},
jnc_CharsetDecoder_decode = ($this, $in, $out, $endOfInput) => {
    let var$4, var$5, $result, $e, $$je;
    var$4 = $this.$state;
    if (!(var$4 == 2 && !$endOfInput) && var$4 != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        var$5 = $this;
        while (true) {
            try {
                $result = jnci_BufferedDecoder_decodeLoop(var$5, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $in = new jnc_CoderMalfunctionError;
                    jl_Throwable__init_0($in, $e);
                    $rt_throw($in);
                } else {
                    throw $$e;
                }
            }
            if (jnc_CoderResult_isOverflow($result))
                return $result;
            if (jnc_CoderResult_isUnderflow($result)) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_Buffer_position($in, $in.$position0 + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put($out, $this.$replacement);
                }
                return $result;
            }
            if (jnc_CoderResult_isMalformed($result)) {
                $e = $this.$malformedAction;
                if ($e === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
            } else if (jnc_CoderResult_isUnmappable($result)) {
                $e = $this.$unmappableAction0;
                if ($e === jnc_CodingErrorAction_REPORT)
                    break;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
            }
        }
        return $result;
    }
    $in = new jl_IllegalStateException;
    jl_Exception__init_($in);
    $rt_throw($in);
},
jnc_CharsetDecoder_decode0 = ($this, $in) => {
    let var$2, $out, $result, var$5;
    var$2 = $this.$state;
    if (var$2 && var$2 != 3) {
        $in = new jl_IllegalStateException;
        jl_Exception__init_($in);
        $rt_throw($in);
    }
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        $this.$state = 0;
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode($this, $in, $out, 0);
        if (jnc_CoderResult_isUnderflow($result))
            break;
        if (jnc_CoderResult_isOverflow($result))
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetDecoder_decode($this, $in, $out, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (true) {
        var$5 = $this.$state;
        if (var$5 != 3 && var$5 != 2) {
            $in = new jl_IllegalStateException;
            jl_Exception__init_($in);
            $rt_throw($in);
        }
        $this.$state = 3;
        if (jnc_CoderResult_isUnderflow(jnc_CoderResult_UNDERFLOW))
            break;
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_Buffer_flip($out);
    return $out;
},
jnc_CharsetDecoder_expand = ($this, $buffer) => {
    let $array, $result;
    $array = jn_CharBuffer_array($buffer);
    $result = jn_CharBuffer_wrap(ju_Arrays_copyOf1($array, jl_Math_max(8, $array.data.length * 2 | 0)));
    jn_Buffer_position($result, $buffer.$position0);
    return $result;
},
dcgccsf_ShapeType$1 = $rt_classWithoutFields(),
dcgccsf_ShapeType$1_$SwitchMap$dev$cas$game$core$content$standard$format$ShapeType = null,
dcgccsf_ShapeType$1_$callClinit = () => {
    dcgccsf_ShapeType$1_$callClinit = $rt_eraseClinit(dcgccsf_ShapeType$1);
    dcgccsf_ShapeType$1__clinit_();
},
dcgccsf_ShapeType$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((dcgccsf_ShapeType_values()).data.length);
    var$2 = var$1.data;
    dcgccsf_ShapeType$1_$SwitchMap$dev$cas$game$core$content$standard$format$ShapeType = var$1;
    var$2[dcgccsf_ShapeType_N_1x2.$ordinal0] = 1;
    var$2[dcgccsf_ShapeType_N_2x1.$ordinal0] = 2;
    var$2[dcgccsf_ShapeType_N_2x2.$ordinal0] = 3;
    var$2[dcgccsf_ShapeType_L_SHAPE_1_1.$ordinal0] = 4;
    var$2[dcgccsf_ShapeType_L_SHAPE_2_1.$ordinal0] = 5;
    var$2[dcgccsf_ShapeType_L_SHAPE_3_1.$ordinal0] = 6;
    var$2[dcgccsf_ShapeType_L_SHAPE_4_1.$ordinal0] = 7;
    var$2[dcgccsf_ShapeType_L_SHAPE_1_2.$ordinal0] = 8;
    var$2[dcgccsf_ShapeType_L_SHAPE_2_2.$ordinal0] = 9;
    var$2[dcgccsf_ShapeType_L_SHAPE_3_2.$ordinal0] = 10;
    var$2[dcgccsf_ShapeType_L_SHAPE_4_2.$ordinal0] = 11;
    var$2[dcgccsf_ShapeType_T_SHAPE_1_1.$ordinal0] = 12;
    var$2[dcgccsf_ShapeType_T_SHAPE_1_2.$ordinal0] = 13;
    var$2[dcgccsf_ShapeType_T_SHAPE_2_1.$ordinal0] = 14;
    var$2[dcgccsf_ShapeType_T_SHAPE_2_2.$ordinal0] = 15;
    var$2[dcgccsf_ShapeType_I_4x1.$ordinal0] = 16;
    var$2[dcgccsf_ShapeType_I_1x4.$ordinal0] = 17;
    var$2[dcgccsf_ShapeType_Z_SHAPE.$ordinal0] = 18;
    var$2[dcgccsf_ShapeType_PLUS_3x3.$ordinal0] = 19;
    var$2[dcgccsf_ShapeType_BIG_L_3x3_1.$ordinal0] = 20;
    var$2[dcgccsf_ShapeType_BIG_L_3x3_2.$ordinal0] = 21;
    var$2[dcgccsf_ShapeType_BIG_L_3x3_3.$ordinal0] = 22;
    var$2[dcgccsf_ShapeType_BIG_L_3x3_4.$ordinal0] = 23;
    var$2[dcgccsf_ShapeType_O_3x3.$ordinal0] = 24;
    var$2[dcgccsf_ShapeType_B_2x2_1.$ordinal0] = 25;
    var$2[dcgccsf_ShapeType_B_2x2_2.$ordinal0] = 26;
};
function jnci_BufferedEncoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in = null;
    a.$out0 = null;
    a.$inPosition = 0;
    a.$outPosition0 = 0;
}
let jnci_BufferedEncoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out0) < $sz ? 0 : 1;
};
function cbgu_TimSort() {
    let a = this; jl_Object.call(a);
    a.$a0 = null;
    a.$c = null;
    a.$minGallop = 0;
    a.$tmp = null;
    a.$tmpCount = 0;
    a.$stackSize = 0;
    a.$runBase = null;
    a.$runLen = null;
}
let cbgu_TimSort_binarySort = ($a, $lo, $hi, $start, $c) => {
    let var$6, var$7, $pivot, $right, var$10, $mid, $n;
    if ($start == $lo)
        $start = $start + 1 | 0;
    var$6 = $c;
    while ($start < $hi) {
        var$7 = $a.data;
        $pivot = var$7[$start];
        $right = $start;
        var$10 = $lo;
        while (var$10 < $right) {
            $mid = (var$10 + $right | 0) >>> 1 | 0;
            if (cbgggu_DefaultRenderableSorter_compare(var$6, $pivot, var$7[$mid]) < 0)
                $right = $mid;
            else
                var$10 = $mid + 1 | 0;
        }
        a: {
            b: {
                $n = $start - var$10 | 0;
                switch ($n) {
                    case 1:
                        break b;
                    case 2:
                        var$7[var$10 + 2 | 0] = var$7[var$10 + 1 | 0];
                        break b;
                    default:
                }
                jl_System_fastArraycopy($a, var$10, $a, var$10 + 1 | 0, $n);
                break a;
            }
            var$7[var$10 + 1 | 0] = var$7[var$10];
        }
        var$7[var$10] = $pivot;
        $start = $start + 1 | 0;
    }
},
cbgu_TimSort_countRunAndMakeAscending = ($a, $lo, $hi, $c) => {
    let $runHi, var$6, var$7, var$8, var$9, var$10, var$11;
    $runHi = $lo + 1 | 0;
    if ($runHi == $hi)
        return 1;
    a: {
        $a = $a.data;
        var$6 = $runHi + 1 | 0;
        var$7 = $a[$runHi];
        var$8 = $a[$lo];
        var$9 = $c;
        if (cbgggu_DefaultRenderableSorter_compare(var$9, var$7, var$8) >= 0)
            while (var$6 < $hi) {
                if (cbgggu_DefaultRenderableSorter_compare(var$9, $a[var$6], $a[var$6 - 1 | 0]) < 0)
                    break a;
                var$6 = var$6 + 1 | 0;
            }
        else {
            while (var$6 < $hi && cbgggu_DefaultRenderableSorter_compare(var$9, $a[var$6], $a[var$6 - 1 | 0]) < 0) {
                var$6 = var$6 + 1 | 0;
            }
            $runHi = var$6 + (-1) | 0;
            var$10 = $lo;
            while (var$10 < $runHi) {
                $c = $a[var$10];
                $hi = var$10 + 1 | 0;
                $a[var$10] = $a[$runHi];
                var$11 = $runHi + (-1) | 0;
                $a[$runHi] = $c;
                var$10 = $hi;
                $runHi = var$11;
            }
        }
    }
    return var$6 - $lo | 0;
},
cbgu_TimSort_mergeAt = ($this, $i) => {
    let var$2, $base1, var$4, $len1, var$6, $base2, $len2, $k;
    var$2 = $this.$runBase.data;
    $base1 = var$2[$i];
    var$4 = $this.$runLen.data;
    $len1 = var$4[$i];
    var$6 = $i + 1 | 0;
    $base2 = var$2[var$6];
    $len2 = var$4[var$6];
    var$4[$i] = $len1 + $len2 | 0;
    $k = $this.$stackSize;
    if ($i == ($k - 3 | 0)) {
        $i = $i + 2 | 0;
        var$2[var$6] = var$2[$i];
        var$4[var$6] = var$4[$i];
    }
    $this.$stackSize = $k - 1 | 0;
    var$2 = $this.$a0;
    $k = cbgu_TimSort_gallopRight(var$2.data[$base2], var$2, $base1, $len1, 0, $this.$c);
    $i = $base1 + $k | 0;
    $k = $len1 - $k | 0;
    if (!$k)
        return;
    var$2 = $this.$a0;
    $base1 = cbgu_TimSort_gallopLeft(var$2.data[($i + $k | 0) - 1 | 0], var$2, $base2, $len2, $len2 - 1 | 0, $this.$c);
    if (!$base1)
        return;
    if ($k > $base1)
        cbgu_TimSort_mergeHi($this, $i, $k, $base2, $base1);
    else
        cbgu_TimSort_mergeLo($this, $i, $k, $base2, $base1);
},
cbgu_TimSort_gallopLeft = ($key, $a, $base, $len, $hint, $c) => {
    let $lastOfs, $ofs, $m, var$10, var$11, $maxOfs;
    $a = $a.data;
    $lastOfs = 0;
    $ofs = 1;
    $m = $base + $hint | 0;
    var$10 = $a[$m];
    var$11 = $c;
    if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, var$10) > 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs);
            if ($len >= 0)
                break;
            if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$m + $ofs | 0]) <= 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs = $ofs;
        $len = $lastOfs + $hint | 0;
        $lastOfs = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs);
            if ($len >= 0)
                break;
            if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$m - $ofs | 0]) > 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs = $ofs;
        $len = $hint - $maxOfs | 0;
        $lastOfs = $hint - $lastOfs | 0;
    }
    $hint = $len + 1 | 0;
    while ($hint < $lastOfs) {
        $m = $hint + (($lastOfs - $hint | 0) >>> 1 | 0) | 0;
        if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$base + $m | 0]) > 0) {
            $hint = $m + 1 | 0;
            $m = $lastOfs;
        }
        $lastOfs = $m;
    }
    return $lastOfs;
},
cbgu_TimSort_gallopRight = ($key, $a, $base, $len, $hint, $c) => {
    let $ofs, $lastOfs, $m, var$10, var$11, $maxOfs, $maxOfs_0;
    $a = $a.data;
    $ofs = 1;
    $lastOfs = 0;
    $m = $base + $hint | 0;
    var$10 = $a[$m];
    var$11 = $c;
    if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, var$10) >= 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs);
            if ($len >= 0)
                break;
            if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$m + $ofs | 0]) < 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs = $ofs;
        $len = $lastOfs + $hint | 0;
        $hint = $maxOfs + $hint | 0;
    } else {
        $maxOfs_0 = $hint + 1 | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs_0);
            if ($len >= 0)
                break;
            if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$m - $ofs | 0]) >= 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs_0;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs_0 = $ofs;
        $len = $hint - $maxOfs_0 | 0;
        $hint = $hint - $lastOfs | 0;
    }
    $ofs = $len + 1 | 0;
    while ($ofs < $hint) {
        $m = $ofs + (($hint - $ofs | 0) >>> 1 | 0) | 0;
        if (cbgggu_DefaultRenderableSorter_compare(var$11, $key, $a[$base + $m | 0]) < 0)
            $hint = $m;
        else
            $ofs = $m + 1 | 0;
    }
    return $hint;
},
cbgu_TimSort_mergeLo = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, var$9, var$10, var$11, $c, $minGallop, var$14, $count1, $count2, var$17, var$18, var$19;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len1);
    jl_System_fastArraycopy($a, $base1, $tmp_0, 0, $len1);
    $cursor1 = 0;
    var$9 = $base1 + 1 | 0;
    var$10 = $base2 + 1 | 0;
    var$6[$base1] = var$6[$base2];
    var$11 = $len2 + (-1) | 0;
    if (!var$11) {
        jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, $len1);
        return;
    }
    if ($len1 == 1) {
        $tmp_0 = $tmp_0.data;
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = $tmp_0[$cursor1];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    var$14 = $c;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            $base1 = var$9;
            $base2 = var$10;
            var$17 = $cursor1;
            while (true) {
                var$18 = $tmp_0.data;
                if (cbgggu_DefaultRenderableSorter_compare(var$14, var$6[$base2], var$18[var$17]) < 0) {
                    var$9 = $base1 + 1 | 0;
                    var$10 = $base2 + 1 | 0;
                    var$6[$base1] = var$6[$base2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    var$11 = var$11 + (-1) | 0;
                    if (!var$11)
                        break a;
                    $base2 = var$10;
                    $cursor1 = var$17;
                } else {
                    var$9 = $base1 + 1 | 0;
                    $cursor1 = var$17 + 1 | 0;
                    var$6[$base1] = var$18[var$17];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $len1 = $len1 + (-1) | 0;
                    if ($len1 == 1) {
                        var$17 = $cursor1;
                        var$10 = $base2;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                $base1 = var$9;
                var$17 = $cursor1;
            }
            var$10 = $base2;
            while (true) {
                $base1 = cbgu_TimSort_gallopRight(var$6[var$10], $tmp_0, $cursor1, $len1, 0, $c);
                if (!$base1) {
                    $base2 = var$9;
                    var$17 = $cursor1;
                } else {
                    jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, $base1);
                    var$9 = var$9 + $base1 | 0;
                    var$17 = $cursor1 + $base1 | 0;
                    $len1 = $len1 - $base1 | 0;
                    if ($len1 <= 1)
                        break a;
                    $base2 = var$9;
                }
                var$9 = $base2 + 1 | 0;
                $cursor1 = var$10 + 1 | 0;
                var$6[$base2] = var$6[var$10];
                var$11 = var$11 + (-1) | 0;
                if (!var$11) {
                    var$10 = $cursor1;
                    break a;
                }
                $base2 = cbgu_TimSort_gallopLeft(var$18[var$17], $a, $cursor1, var$11, 0, $c);
                if (!$base2) {
                    $len2 = var$9;
                    var$10 = $cursor1;
                } else {
                    jl_System_fastArraycopy($a, $cursor1, $a, var$9, $base2);
                    var$9 = var$9 + $base2 | 0;
                    var$10 = $cursor1 + $base2 | 0;
                    var$11 = var$11 - $base2 | 0;
                    if (!var$11)
                        break b;
                    $len2 = var$9;
                }
                var$9 = $len2 + 1 | 0;
                $cursor1 = var$17 + 1 | 0;
                var$6[$len2] = var$18[var$17];
                $len1 = $len1 + (-1) | 0;
                if ($len1 == 1) {
                    var$17 = $cursor1;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!(($base1 < 7 ? 0 : 1) | ($base2 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len1 == 1) {
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$18[var$17];
    } else {
        if (!$len1) {
            var$19 = new jl_IllegalArgumentException;
            jl_RuntimeException__init_(var$19, $rt_s(755));
            $rt_throw(var$19);
        }
        jl_System_fastArraycopy($tmp_0, var$17, $a, var$9, $len1);
    }
},
cbgu_TimSort_mergeHi = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, $cursor2, $dest, var$11, var$12, $c, $minGallop, var$15, $count1, $count2, var$18, var$19;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len2);
    jl_System_fastArraycopy($a, $base2, $tmp_0, 0, $len2);
    $cursor1 = ($base1 + $len1 | 0) - 1 | 0;
    $cursor2 = $len2 - 1 | 0;
    $dest = ($base2 + $len2 | 0) - 1 | 0;
    var$11 = $dest + (-1) | 0;
    var$12 = $cursor1 + (-1) | 0;
    var$6[$dest] = var$6[$cursor1];
    $cursor1 = $len1 + (-1) | 0;
    if (!$cursor1) {
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - $cursor2 | 0, $len2);
        return;
    }
    if ($len2 == 1) {
        $tmp_0 = $tmp_0.data;
        $base1 = var$11 - $cursor1 | 0;
        jl_System_fastArraycopy($a, (var$12 - $cursor1 | 0) + 1 | 0, $a, $base1 + 1 | 0, $cursor1);
        var$6[$base1] = $tmp_0[$cursor2];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    var$15 = $c;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            $dest = var$11;
            while (true) {
                var$18 = $tmp_0.data;
                if (cbgggu_DefaultRenderableSorter_compare(var$15, var$18[$cursor2], var$6[var$12]) < 0) {
                    var$11 = $dest + (-1) | 0;
                    $base2 = var$12 + (-1) | 0;
                    var$6[$dest] = var$6[var$12];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $cursor1 = $cursor1 + (-1) | 0;
                    if (!$cursor1)
                        break a;
                    var$12 = $base2;
                    $len1 = $cursor2;
                } else {
                    var$11 = $dest + (-1) | 0;
                    $len1 = $cursor2 + (-1) | 0;
                    var$6[$dest] = var$18[$cursor2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    $len2 = $len2 + (-1) | 0;
                    if ($len2 == 1) {
                        $base2 = var$12;
                        $cursor2 = $len1;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                $dest = var$11;
                $cursor2 = $len1;
            }
            $cursor2 = $len1;
            while (true) {
                $count2 = $cursor1 - cbgu_TimSort_gallopRight(var$18[$cursor2], $a, $base1, $cursor1, $cursor1 - 1 | 0, $c) | 0;
                if (!$count2) {
                    $len1 = var$11;
                    $base2 = var$12;
                } else {
                    var$11 = var$11 - $count2 | 0;
                    $base2 = var$12 - $count2 | 0;
                    $cursor1 = $cursor1 - $count2 | 0;
                    jl_System_fastArraycopy($a, $base2 + 1 | 0, $a, var$11 + 1 | 0, $count2);
                    if (!$cursor1)
                        break a;
                    $len1 = var$11;
                }
                var$11 = $len1 + (-1) | 0;
                var$12 = $cursor2 + (-1) | 0;
                var$6[$len1] = var$18[$cursor2];
                $len2 = $len2 + (-1) | 0;
                if ($len2 == 1) {
                    $cursor2 = var$12;
                    break a;
                }
                $len1 = $len2 - cbgu_TimSort_gallopLeft(var$6[$base2], $tmp_0, 0, $len2, $len2 - 1 | 0, $c) | 0;
                if (!$len1) {
                    $count1 = var$11;
                    $cursor2 = var$12;
                } else {
                    var$11 = var$11 - $len1 | 0;
                    $cursor2 = var$12 - $len1 | 0;
                    $len2 = $len2 - $len1 | 0;
                    jl_System_fastArraycopy($tmp_0, $cursor2 + 1 | 0, $a, var$11 + 1 | 0, $len1);
                    if ($len2 <= 1)
                        break b;
                    $count1 = var$11;
                }
                var$11 = $count1 + (-1) | 0;
                var$12 = $base2 + (-1) | 0;
                var$6[$count1] = var$6[$base2];
                $cursor1 = $cursor1 + (-1) | 0;
                if (!$cursor1) {
                    $base2 = var$12;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!(($count2 < 7 ? 0 : 1) | ($len1 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len2 == 1) {
        $base1 = var$11 - $cursor1 | 0;
        jl_System_fastArraycopy($a, ($base2 - $cursor1 | 0) + 1 | 0, $a, $base1 + 1 | 0, $cursor1);
        var$6[$base1] = var$18[$cursor2];
    } else {
        if (!$len2) {
            var$19 = new jl_IllegalArgumentException;
            jl_RuntimeException__init_(var$19, $rt_s(755));
            $rt_throw(var$19);
        }
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - ($len2 - 1 | 0) | 0, $len2);
    }
},
cbgu_TimSort_ensureCapacity = ($this, $minCapacity) => {
    let var$2;
    $this.$tmpCount = jl_Math_max($this.$tmpCount, $minCapacity);
    if ($this.$tmp.data.length < $minCapacity) {
        var$2 = $minCapacity | $minCapacity >> 1;
        var$2 = var$2 | var$2 >> 2;
        var$2 = var$2 | var$2 >> 4;
        var$2 = var$2 | var$2 >> 8;
        var$2 = (var$2 | var$2 >> 16) + 1 | 0;
        if (var$2 >= 0)
            $minCapacity = jl_Math_min(var$2, $this.$a0.data.length >>> 1 | 0);
        $this.$tmp = $rt_createArray(jl_Object, $minCapacity);
    }
    return $this.$tmp;
};
function jusi_SimpleStreamImpl$forEachOrdered$lambda$_19_0() {
    jl_Object.call(this);
    this.$_026 = null;
}
function jusi_FilteringStreamImpl$wrap$lambda$_1_0() {
    let a = this; jl_Object.call(a);
    a.$_022 = null;
    a.$_18 = null;
}
function jusi_StreamOverSpliterator$AdapterAction() {
    let a = this; jl_Object.call(a);
    a.$consumer = null;
    a.$wantsMore = 0;
}
function cbggg_TextureAtlas$AtlasRegion() {
    let a = this; cbggg_TextureRegion.call(a);
    a.$offsetX1 = 0.0;
    a.$offsetY1 = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight0 = 0;
}
let otcir_Converter = $rt_classWithoutFields();
function cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_014 = null;
}
let cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3;
    var$1 = var$1.$_014;
    var$2 = jl_System_err();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(756)), var$1);
    var$1 = jl_AbstractStringBuilder_toString(var$3);
    otcic_JsConsolePrintStream_println(var$2, var$1);
};
function jnci_BufferedDecoder() {
    let a = this; jnc_CharsetDecoder.call(a);
    a.$inArray = null;
    a.$outArray0 = null;
}
let jnci_BufferedDecoder_decodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, var$7, $i, var$9, $result, var$11, $outSize, $controller, $outPos, var$15;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    var$7 = $this;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$9 = $inArray.data;
                    var$9[$i - $inPos | 0] = var$9[$i];
                    $i = $i + 1 | 0;
                }
                var$9 = $inArray.data;
                $i = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $i | 0, var$9.length);
                jn_ByteBuffer_get0($in, $inArray, $i, $inSize - $i | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                $result = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$9 = $outArray.data;
            $i = jn_Buffer_remaining($out);
            var$11 = var$9.length;
            $outSize = jl_Math_min($i, var$11);
            $controller = new jnci_BufferedDecoder$Controller;
            $controller.$in0 = $in;
            $controller.$out1 = $out;
            $result = jnci_UTF8Decoder_arrayDecode(var$7, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && 0 == $controller.$outPosition)
                $result = jnc_CoderResult_UNDERFLOW;
            $i = $controller.$outPosition;
            if ($out.$readOnly()) {
                $in = new jn_ReadOnlyBufferException;
                jl_Exception__init_($in);
                $rt_throw($in);
            }
            if (jn_Buffer_remaining($out) < $i) {
                $in = new jn_BufferOverflowException;
                jl_Exception__init_($in);
                $rt_throw($in);
            }
            if ($i < 0)
                break;
            if ((0 + $i | 0) > var$11)
                break;
            $outPos = $out.$position0;
            $controller = $out;
            var$15 = new Uint16Array($outArray.data.buffer, 0, $i);
            $controller.$data1.set(var$15, $outPos);
            $out.$position0 = $out.$position0 + $i | 0;
            if ($result !== null)
                break a;
        }
        $in = new jl_IndexOutOfBoundsException;
        jl_Exception__init_($in);
        $rt_throw($in);
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_UTF8Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12, $b2, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 2))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = $inPos + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = $inPos;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 3))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if (jn_Buffer_remaining($controller.$out1) < 2 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        $inPos = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        $b4 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        var$10 = $b4 + 1 | 0;
                        $b4 = var$9[$b4];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        $inPos = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = $inPos + 1 | 0;
                        var$9[$inPos] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$inPosition0 = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
jnci_UTF8Decoder_checkMidByte = ($this, $b) => {
    return ($b & 192) != 128 ? 0 : 1;
},
dcgccso_Effect = $rt_classWithoutFields(dcgbmc_GameComponent),
dcgccso_Effect_combo = 0,
dcgccso_Effect__clinit_ = () => {
    dcgccso_Effect_combo = 0;
};
function jnci_BufferedDecoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out1 = null;
    a.$inPosition0 = 0;
    a.$outPosition = 0;
}
let jnci_BufferedDecoder$Controller_hasMoreInput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$in0) < $sz ? 0 : 1;
};
function jl_Byte() {
    jl_Number.call(this);
    this.$value5 = 0;
}
let jl_Byte_TYPE = null,
jl_Byte_byteCache = null,
jl_Byte__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    jl_Byte_TYPE = $rt_cls($rt_bytecls);
    var$1 = $rt_createArray(jl_Byte, 256);
    var$2 = var$1.data;
    var$3 = 0;
    var$4 = var$2.length;
    while (var$3 < var$4) {
        var$5 = new jl_Byte;
        var$5.$value5 = (var$3 - 128 | 0) << 24 >> 24;
        var$2[var$3] = var$5;
        var$3 = var$3 + 1 | 0;
    }
    jl_Byte_byteCache = var$1;
},
jl_ArrayIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_ArrayIndexOutOfBoundsException__init_ = ($this, $index) => {
    jl_RuntimeException__init_($this, jl_Integer_toString($index));
},
jl_ArrayIndexOutOfBoundsException__init_0 = var_0 => {
    let var_1 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_(var_1, var_0);
    return var_1;
};
function cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage() {
    cbggg_PixmapPacker$Page.call(this);
    this.$root = null;
}
let cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_0 = ($this, $packer) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbggg_PixmapPacker$Page__init_($this, $packer);
    var$2 = cbggg_PixmapPacker$GuillotineStrategy$Node__init_();
    $this.$root = var$2;
    var$2 = var$2.$rect;
    var$3 = $packer.$padding0;
    var$4 = var$3;
    var$2.$x1 = var$4;
    var$2.$y1 = var$4;
    var$5 = $packer.$pageWidth;
    var$6 = var$3 * 2 | 0;
    var$2.$width = var$5 - var$6 | 0;
    var$2.$height0 = $packer.$pageHeight - var$6 | 0;
},
cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_ = var_0 => {
    let var_1 = new cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage();
    cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage__init_0(var_1, var_0);
    return var_1;
};
function cbggg_PixmapPacker$GuillotineStrategy$Node() {
    let a = this; jl_Object.call(a);
    a.$leftChild = null;
    a.$rightChild = null;
    a.$rect = null;
    a.$full = 0;
}
let cbggg_PixmapPacker$GuillotineStrategy$Node__init_0 = $this => {
    $this.$rect = new cbgm_Rectangle;
},
cbggg_PixmapPacker$GuillotineStrategy$Node__init_ = () => {
    let var_0 = new cbggg_PixmapPacker$GuillotineStrategy$Node();
    cbggg_PixmapPacker$GuillotineStrategy$Node__init_0(var_0);
    return var_0;
};
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage() {
    cbggg_PixmapPacker$Page.call(this);
    this.$rows = null;
}
function cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row() {
    let a = this; jl_Object.call(a);
    a.$x4 = 0;
    a.$y3 = 0;
    a.$height3 = 0;
}
function cbgm_Vector4() {
    let a = this; jl_Object.call(a);
    a.$x6 = 0.0;
    a.$y6 = 0.0;
    a.$z0 = 0.0;
    a.$w = 0.0;
}
let cbgm_Vector4_X = null,
cbgm_Vector4_Y = null,
cbgm_Vector4_Z = null,
cbgm_Vector4_W = null,
cbgm_Vector4_Zero = null,
cbgm_Vector4__init_0 = ($this, $x, $y, $z, $w) => {
    $this.$x6 = $x;
    $this.$y6 = $y;
    $this.$z0 = $z;
    $this.$w = $w;
},
cbgm_Vector4__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Vector4();
    cbgm_Vector4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Vector4__clinit_ = () => {
    cbgm_Vector4_X = cbgm_Vector4__init_(1.0, 0.0, 0.0, 0.0);
    cbgm_Vector4_Y = cbgm_Vector4__init_(0.0, 1.0, 0.0, 0.0);
    cbgm_Vector4_Z = cbgm_Vector4__init_(0.0, 0.0, 1.0, 0.0);
    cbgm_Vector4_W = cbgm_Vector4__init_(0.0, 0.0, 0.0, 1.0);
    cbgm_Vector4_Zero = cbgm_Vector4__init_(0.0, 0.0, 0.0, 0.0);
},
jn_LongBuffer = $rt_classWithoutFields(jn_Buffer),
jn_LongBuffer_put = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl6($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
},
jn_DoubleBuffer = $rt_classWithoutFields(jn_Buffer),
jn_DoubleBuffer_put = ($this, $src) => {
    if ($this.$readOnly()) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    if (jn_Buffer_remaining($this) < jn_Buffer_remaining($src)) {
        $src = new jn_BufferOverflowException;
        jl_Exception__init_($src);
        $rt_throw($src);
    }
    $this.$putImpl7($this.$position0, $src, $src.$position0, jn_Buffer_remaining($src));
    $this.$position0 = $this.$position0 + jn_Buffer_remaining($src) | 0;
    return $this;
};
function cgxgbtf_FileDB$1() {
    let a = this; ji_OutputStream.call(a);
    a.$val$buffer = null;
    a.$val$file = null;
    a.$val$append = 0;
    a.$val$bufferSize = 0;
    a.$this$013 = null;
}
let cgxgbtf_FileDB$1_write = ($this, $b) => {
    let var$2, var$3, var$4;
    var$2 = $b.data;
    var$3 = $this.$val$buffer;
    var$4 = var$2.length;
    ji_ByteArrayOutputStream_write(var$3, $b, 0, var$4);
},
cgxgbtf_FileDB$1_close = $this => {
    let $data, var$2, var$3, var$4, var$5, var$6;
    $data = ji_ByteArrayOutputStream_toByteArray($this.$val$buffer);
    var$2 = $data.data;
    var$3 = $this.$this$013;
    var$4 = $this.$val$file;
    var$5 = $this.$val$append;
    var$6 = jl_Math_max(var$2.length, $this.$val$bufferSize);
    cgxgbtf_MemoryFileStorage_writeInternal(var$3, var$4, $data, var$5, var$6);
},
dcgccss_StateManager = $rt_classWithoutFields(),
dcgccss_StateManager_detectRemoveLine = () => {
    let $rowsToRemove, $y, $fullRow, $x, $colsToRemove, $y_0, $fullCol, $x_0;
    $rowsToRemove = ju_ArrayList__init_();
    $y = 0;
    while ($y < 8) {
        $fullRow = 1;
        $x = 0;
        a: {
            while ($x < 8) {
                if (!dcgccss_StateUtil_withValue($x, $y)) {
                    $fullRow = 0;
                    break a;
                }
                $x = $x + 1 | 0;
            }
        }
        if ($fullRow)
            ju_ArrayList_add($rowsToRemove, jl_Integer_valueOf($y));
        $y = $y + 1 | 0;
    }
    $colsToRemove = ju_ArrayList__init_();
    $x = 0;
    $y_0 = $colsToRemove;
    while ($x < 8) {
        $fullCol = 1;
        $y = 0;
        b: {
            while ($y < 8) {
                if (!dcgccss_StateUtil_withValue($x, $y)) {
                    $fullCol = 0;
                    break b;
                }
                $y = $y + 1 | 0;
            }
        }
        if ($fullCol)
            ju_ArrayList_add($y_0, jl_Integer_valueOf($x));
        $x = $x + 1 | 0;
    }
    $y_0 = ju_AbstractList_iterator($colsToRemove);
    while (ju_AbstractList$1_hasNext($y_0)) {
        $x_0 = ju_AbstractList$1_next($y_0);
        $y = 0;
        while ($y < 8) {
            dcgccss_ItemManager_removeTile($x_0.$value, $y);
            dcgccso_Controller_removeTileTimes = dcgccso_Controller_removeTileTimes + 1 | 0;
            $y = $y + 1 | 0;
        }
        dcgccss_StateManager_onRemoveLine();
    }
    $colsToRemove = ju_AbstractList_iterator($rowsToRemove);
    while (ju_AbstractList$1_hasNext($colsToRemove)) {
        $y_0 = ju_AbstractList$1_next($colsToRemove);
        $x = 0;
        while ($x < 8) {
            dcgccss_ItemManager_removeTile($x, $y_0.$value);
            dcgccso_Controller_removeTileTimes = dcgccso_Controller_removeTileTimes + 1 | 0;
            $x = $x + 1 | 0;
        }
        dcgccss_StateManager_onRemoveLine();
    }
},
dcgccss_StateManager_onRemoveLine = () => {
    let var$1, var$2, var$3;
    var$1 = dcgccso_Effect_combo;
    dcgccso_Score_increase(10 * (var$1 + 1 | 0) | 0, 10 + (10 * var$1 | 0) | 0);
    dcgccso_Effect_combo = dcgccso_Effect_combo + 1 | 0;
    dcgccss_ItemManager_$callClinit();
    var$2 = dcgccss_ItemManager_shockAnimation;
    dcgbm_Camera2D_$callClinit();
    var$3 = dcgbm_Camera2D_camera;
    if (var$3 !== null) {
        var$3 = var$3.$position1;
        var$2.$originX = var$3.$x0;
        var$2.$originY = var$3.$y0;
    }
    var$2.$elapsed = 0.0;
    var$2.$playing = 1;
},
dcgccss_StateUtil$onShapeDragStop$lambda$_2_0 = $rt_classWithoutFields(),
dcgccss_StateUtil$onShapeDragStop$lambda$_2_0_accept = (var$0, var$1) => {
    let var$2, var$3;
    var$1 = var$1;
    dcgccss_ItemManager_$callClinit();
    var$2 = dcgccss_ItemManager_tiles.data;
    var$3 = var$1.$position2;
    var$2[var$3.$x5].data[var$3.$y4] = var$1;
    dcgb_ObjectManager_add(var$1);
};
function jn_CharBufferOverDataView() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly12 = 0;
    a.$data9 = null;
    a.$littleEndian2 = 0;
}
let jn_CharBufferOverDataView_readOnly = $this => {
    return $this.$readOnly12;
},
jn_CharBufferOverDataView_getChar = ($this, $index) => {
    return $this.$data9.getUint16($index * 2 | 0, !!$this.$littleEndian2) & 65535;
},
jn_CharBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_CharBufferOverDataView)) {
            var$5 = $index * 2 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data9;
                $index = $offset + 1 | 0;
                $destArray.setUint16(var$5, jn_CharBufferImpl_get($srcArray, $offset), !!$this.$littleEndian2);
                var$5 = var$5 + 2 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 2 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data9.buffer;
        $offset = $srcImpl.$data9.byteOffset + ($offset * 2 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data9.buffer, $this.$data9.byteOffset + ($index * 2 | 0) | 0, var$5)).set($srcArray, 0);
    }
},
jn_LongBufferImpl = $rt_classWithoutFields(jn_LongBuffer),
jn_LongBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_LongBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement2($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_LongBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_LongBufferOverDataView() {
    let a = this; jn_LongBufferImpl.call(a);
    a.$readOnly8 = 0;
    a.$data11 = null;
    a.$littleEndian4 = 0;
}
let jn_LongBufferOverDataView_readOnly = $this => {
    return $this.$readOnly8;
},
jn_LongBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data11.getBigInt64($index * 8 | 0, !!$this.$littleEndian4);
},
jn_LongBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_LongBufferOverDataView)) {
            var$5 = $index * 8 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data11;
                $index = $offset + 1 | 0;
                $destArray.setBigInt64(var$5, jn_LongBufferImpl_get($srcArray, $offset), !!$this.$littleEndian4);
                var$5 = var$5 + 8 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 8 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data11.buffer;
        $offset = $srcImpl.$data11.byteOffset + ($offset * 8 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data11.buffer, $this.$data11.byteOffset + ($index * 8 | 0) | 0, var$5)).set($srcArray, 0);
    }
};
function jn_LongBufferOverTypedArray() {
    let a = this; jn_LongBufferImpl.call(a);
    a.$readOnly11 = 0;
    a.$data13 = null;
    a.$array10 = null;
}
let jn_LongBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly11;
},
jn_LongBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data13[$index];
},
jn_LongBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_LongBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data13;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_LongBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data13.buffer;
        $offset = $srcImpl.$data13.byteOffset + ($index * 8 | 0) | 0;
        $slice = new BigInt64Array($slice, $offset, $length);
        $this.$data13.set($slice, $index);
    }
},
jn_DoubleBufferImpl = $rt_classWithoutFields(jn_DoubleBuffer),
jn_DoubleBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_DoubleBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement3($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(654)), $index), $rt_s(641)), var$3), 41);
    jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_DoubleBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_DoubleBufferOverDataView() {
    let a = this; jn_DoubleBufferImpl.call(a);
    a.$readOnly7 = 0;
    a.$data10 = null;
    a.$littleEndian3 = 0;
}
let jn_DoubleBufferOverDataView_readOnly = $this => {
    return $this.$readOnly7;
},
jn_DoubleBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data10.getFloat64($index * 8 | 0, !!$this.$littleEndian3);
},
jn_DoubleBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcArray, var$7, $destArray, $srcImpl;
    a: {
        if (!($src instanceof jn_DoubleBufferOverDataView)) {
            var$5 = $index * 8 | 0;
            $srcArray = $src;
            while (true) {
                var$7 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $destArray = $this.$data10;
                $index = $offset + 1 | 0;
                $destArray.setFloat64(var$5, jn_DoubleBufferImpl_get($srcArray, $offset), !!$this.$littleEndian3);
                var$5 = var$5 + 8 | 0;
                $length = var$7;
                $offset = $index;
            }
        }
        var$5 = $length * 8 | 0;
        $srcImpl = $src;
        $srcArray = $srcImpl.$data10.buffer;
        $offset = $srcImpl.$data10.byteOffset + ($offset * 8 | 0) | 0;
        $srcArray = new Int8Array($srcArray, $offset, var$5);
        (new Int8Array($this.$data10.buffer, $this.$data10.byteOffset + ($index * 8 | 0) | 0, var$5)).set($srcArray, 0);
    }
};
function jn_DoubleBufferOverTypedArray() {
    let a = this; jn_DoubleBufferImpl.call(a);
    a.$readOnly9 = 0;
    a.$data12 = null;
    a.$array12 = null;
}
let jn_DoubleBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly9;
},
jn_DoubleBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data12[$index];
},
jn_DoubleBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, $srcImpl, var$7, var$8, $slice;
    a: {
        if (!($src instanceof jn_DoubleBufferOverTypedArray)) {
            $src = $src;
            while (true) {
                var$5 = $length + (-1) | 0;
                if ($length <= 0)
                    break a;
                $srcImpl = $this.$data12;
                var$7 = $index + 1 | 0;
                var$8 = $offset + 1 | 0;
                $srcImpl[$index] = jn_DoubleBufferImpl_get($src, $offset);
                $length = var$5;
                $index = var$7;
                $offset = var$8;
            }
        }
        $srcImpl = $src;
        $slice = $srcImpl.$data12.buffer;
        $offset = $srcImpl.$data12.byteOffset + ($index * 8 | 0) | 0;
        $slice = new Float64Array($slice, $offset, $length);
        $this.$data12.set($slice, $index);
    }
};
function cbggg_Attribute() {
    jl_Object.call(this);
    this.$type7 = Long_ZERO;
}
let cbggg_Attribute_types = null,
cbggg_Attribute__clinit_ = () => {
    cbggg_Attribute_types = cbgu_Array__init_();
};
function cbggga_BlendingAttribute() {
    cbggg_Attribute.call(this);
    this.$blended = 0;
}
let cbggga_BlendingAttribute_Type = Long_ZERO,
cbggga_BlendingAttribute_$callClinit = () => {
    cbggga_BlendingAttribute_$callClinit = $rt_eraseClinit(cbggga_BlendingAttribute);
    cbggga_BlendingAttribute__clinit_();
},
cbggga_BlendingAttribute__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = 0;
    a: {
        while (true) {
            var$2 = cbggg_Attribute_types;
            if (var$1 >= var$2.$size0)
                break;
            if (!jl_String_compareTo(cbgu_Array_get(var$2, var$1), $rt_s(757))) {
                var$3 = Long_shl(Long_fromInt(1), var$1);
                break a;
            }
            var$1 = var$1 + 1 | 0;
        }
        var$3 = Long_ZERO;
    }
    if (Long_le(var$3, Long_ZERO)) {
        var$2 = cbggg_Attribute_types;
        if (var$2.$size0 >= 64) {
            var$2 = new cbgu_GdxRuntimeException;
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_append(var$4, $rt_s(758));
            jl_AbstractStringBuilder_append(var$4, $rt_s(757));
            jl_AbstractStringBuilder_append(var$4, $rt_s(759));
            jl_RuntimeException__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
            $rt_throw(var$2);
        }
        cbgu_Array_add(var$2, $rt_s(757));
        var$3 = Long_shl(Long_fromInt(1), cbggg_Attribute_types.$size0 - 1 | 0);
    }
    cbggga_BlendingAttribute_Type = var$3;
};
function cbgggm_MeshPart() {
    jl_Object.call(this);
    this.$center = null;
}
function cbggg_PixmapPacker$Page$1() {
    cbgg_Texture.call(this);
    this.$this$016 = null;
}
let cbggg_PixmapPacker$Page$1_dispose = $this => {
    cbgg_Texture_dispose($this);
    cbgg_Pixmap_dispose($this.$this$016.$image);
},
cbgu_ScreenUtils = $rt_classWithoutFields();
function cbg_Graphics$BufferFormat() {
    let a = this; jl_Object.call(a);
    a.$r0 = 0;
    a.$g0 = 0;
    a.$b0 = 0;
    a.$a1 = 0;
    a.$depth = 0;
    a.$stencil0 = 0;
    a.$samples = 0;
    a.$coverageSampling = 0;
}
function dcgbmc_SceneComponent$loadObjects$lambda$_4_0() {
    jl_Object.call(this);
    this.$_025 = null;
}
let dcgbmc_SceneComponent$loadObjects$lambda$_4_0_accept = (var$0, var$1) => {
    var$1 = var$1;
    if (!var$1.$isInitialized)
        dcgb_ObjectManager_add(var$1);
},
dcgbmc_TextComponent$1 = $rt_classWithoutFields(),
dcgbmc_TextComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition = null,
dcgbmc_TextComponent$1_$callClinit = () => {
    dcgbmc_TextComponent$1_$callClinit = $rt_eraseClinit(dcgbmc_TextComponent$1);
    dcgbmc_TextComponent$1__clinit_();
},
dcgbmc_TextComponent$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((dcgbmf_RenderPosition_values()).data.length);
    var$2 = var$1.data;
    dcgbmc_TextComponent$1_$SwitchMap$dev$cas$game$base$mod$format$RenderPosition = var$1;
    var$2[dcgbmf_RenderPosition_TOP_LEFT.$ordinal0] = 1;
    var$2[dcgbmf_RenderPosition_TOP_CENTER.$ordinal0] = 2;
    var$2[dcgbmf_RenderPosition_TOP_RIGHT.$ordinal0] = 3;
    var$2[dcgbmf_RenderPosition_CENTER_LEFT.$ordinal0] = 4;
    var$2[dcgbmf_RenderPosition_CENTER.$ordinal0] = 5;
    var$2[dcgbmf_RenderPosition_CENTER_RIGHT.$ordinal0] = 6;
    var$2[dcgbmf_RenderPosition_BOTTOM_LEFT.$ordinal0] = 7;
    var$2[dcgbmf_RenderPosition_BOTTOM_CENTER.$ordinal0] = 8;
    var$2[dcgbmf_RenderPosition_BOTTOM_RIGHT.$ordinal0] = 9;
    var$2[dcgbmf_RenderPosition_NONE.$ordinal0] = 10;
    var$2[dcgbmf_RenderPosition_CUSTOM.$ordinal0] = 11;
};
function jl_Boolean() {
    jl_Object.call(this);
    this.$value2 = 0;
}
let jl_Boolean_TRUE = null,
jl_Boolean_FALSE = null,
jl_Boolean_TYPE = null,
jl_Boolean__init_0 = ($this, $value) => {
    $this.$value2 = $value;
},
jl_Boolean__init_ = var_0 => {
    let var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
},
jl_Boolean_booleanValue = $this => {
    return $this.$value2;
},
jl_Boolean__clinit_ = () => {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
};
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "filesystem", 6, "types", 0, "badlogic", 8, "gdx", 9, "utils", 10, "reflect", 9, "graphics", 12, "glutils", 12, "g2d", -1, "java", 15, "util", 16, "regex", 15, "nio", 18, "charset", 15, "lang", 20, "reflect", -1, "dev", 22, "cas", 23, "game", 24, "core", 25, "content", 26, "standard", 27, "object", 24, "base", 29, "mod", 30, "component", 31, "animation", 30, "widget", 29, "storage", -1, "org", 35, "teavm", 36, "classlib",
37, "impl", 38, "unicode"
]);
$rt_metadata([jl_Object, "Object", 20, 0, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString)],
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_GlyphLayout, "GlyphLayout", 14, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cbggg_TextureRegion, "TextureRegion", 14, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_BitmapFont, "BitmapFont", 14, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Color, "Color", 12, jl_Object, [], 0, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode", $rt_wrapFunction0(cbgg_Color_hashCode), "$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, 0, 0,
cbgg_Texture, "Texture", 12, cbgg_GLTexture, [], 0, 3, 0, cbgg_Texture_$callClinit, ["$dispose", $rt_wrapFunction0(cbgg_Texture_dispose), "$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Array, "Array", 10, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Predicate, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgg_VertexAttribute, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, 0,
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 20, jl_Object, [jlr_AnnotatedElement, jlr_Type], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString)],
otji_JS, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage)],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_RuntimeException, "RuntimeException", 20, jl_Exception, [], 0, 3, 0, 0, 0,
jl_ClassCastException, "ClassCastException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_CharSequence, "CharSequence", 20, jl_Object, [], 3, 3, 0, 0, 0,
jl_String, "String", 20, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_String_toString), "$equals", $rt_wrapFunction1(jl_String_equals), "$hashCode", $rt_wrapFunction0(jl_String_hashCode), "$compareTo0", $rt_wrapFunction1(jl_String_compareTo0)],
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, 0,
jl_Integer, "Integer", 20, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Integer_toString0), "$hashCode", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals), "$compareTo0", $rt_wrapFunction1(jl_Integer_compareTo)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert2", $rt_wrapFunction4(jl_StringBuilder_insert), "$append7", $rt_wrapFunction3(jl_StringBuilder_append5), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert1", $rt_wrapFunction2(jl_StringBuilder_insert0), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert1)],
otcir_FieldInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcir_MethodInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcir_ClassList, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgt_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, dcgt_TeaVMLauncher_$callClinit, 0]);
$rt_metadata([otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, 0,
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_ApplicationAdapter, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, 0,
dcg_Main, 0, cbg_ApplicationAdapter, [], 0, 3, 0, 0, 0,
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 14, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
cbgu_IntArray, "IntArray", 10, jl_Object, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String$_clinit_$lambda$_115_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, 0,
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtu_TeaBaseUrlProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtu_TeaDefaultBaseUrlProvider, 0, jl_Object, [cgxgbtu_TeaBaseUrlProvider], 0, 3, 0, 0, 0,
dcgb_GameTemplate, 0, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([dcgb_GameMain, 0, jl_Object, [dcgb_GameTemplate], 0, 3, 0, 0, 0,
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Enum_toString)],
cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_IllegalArgumentException, "IllegalArgumentException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otji_JSWrapper, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl, 0, jl_Object, [cgxgbta_AssetDownloader], 0, 3, 0, 0, 0,
cgxgbta_AssetInstance, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl, 0, jl_Object, [cgxgbta_AssetLoader], 0, 3, 0, 0, 0,
cgxjc_JMultiplatform, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxjc_JPlatformMap, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_AbstractInput, 0, jl_Object, [cbg_Input], 1, 3, 0, 0, 0,
cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaInput, 0, cbg_AbstractInput, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, 0,
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, 0,
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, 0,
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, 0,
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 3, 3, 0, 0, 0,
cgxgbt_DefaultTeaAudio, 0, jl_Object, [cgxgbt_TeaAudio], 0, 3, 0, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$3, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgu_ReflectionPool, "ReflectionPool", 10, cbgu_Pool, [], 0, 3, 0, 0, 0,
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtg_WebGLContextAttributesWrapper, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20_glActiveTexture), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData),
"$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray),
"$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform",
$rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetIntegerv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv),
"$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6,
var_7, var_8, var_9); }, "$glTexSubImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexSubImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttribPointer",
function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport)],
cbgg_GL30, 0, jl_Object, [cbgg_GL20], 3, 3, 0, 0, 0]);
$rt_metadata([cgxgbt_TeaGL30, "TeaGL30", 5, cgxgbt_TeaGL20, [cbgg_GL30], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30_glBindVertexArray), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glGenVertexArrays), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetFloatv),
"$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetIntegerv)],
cgxgbt_TeaGL30Debug, "TeaGL30Debug", 5, cgxgbt_TeaGL30, [], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glBindVertexArray), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGenVertexArrays), "$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glActiveTexture),
"$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnable),
"$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetIntegerv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameterf), "$glTexSubImage2D", function(var_1,
var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexSubImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferData),
"$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL30Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnableVertexAttribArray),
"$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetProgramInfoLog),
"$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1i),
"$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL30Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, 0,
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glActiveTexture), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays),
"$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetIntegerv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5,
var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf), "$glTexSubImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexSubImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer),
"$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray),
"$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv),
"$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource),
"$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, 0,
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, 0,
ju_HashSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgxgbtf_MemoryFileStorage, 0, cgxgbtf_FileDB, [], 0, 3, 0, 0, ["$putFile", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_removeFile)],
cgxgbtft_InternalStorage, "InternalStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0,
cgxgbtft_ClasspathStorage, "ClasspathStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0,
cgxgbtft_LocalDBStorage, "LocalDBStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$putFile", $rt_wrapFunction2(cgxgbtft_LocalDBStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtft_LocalDBStorage_removeFile)],
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_0, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbta_AssetLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$4, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtwh_HowlerAudioManager, 0, jl_Object, [cbg_LifecycleListener], 0, 3, 0, 0, 0,
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, 0,
cgxgbt_TeaGL20$CustomIntMap, 0, jl_Object, [otj_JSObject], 0, 0, 0, 0, 0,
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_ReflectionException, "ReflectionException", 11, jl_Exception, [], 0, 3, 0, 0, 0,
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, 0,
otji_IDBFactory, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otji_EventHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0]);
$rt_metadata([jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
jl_NoSuchMethodException, "NoSuchMethodException", 20, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jur_RandomGenerator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Random, 0, jl_Object, [jur_RandomGenerator, ji_Serializable], 0, 3, 0, 0, 0,
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, 0,
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, 0,
jl_NumberFormatException, "NumberFormatException", 20, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jl_IllegalStateException, "IllegalStateException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, 0,
jl_NullPointerException, "NullPointerException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$getType1", $rt_wrapFunction0(jur_AbstractSet_getType), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first1", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, "Constructor", 21, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jlr_Constructor_toString)],
otcir_MethodCaller, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, 0,
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jur_FSet, "FSet", 17, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$matches", $rt_wrapFunction3(jur_FSet_matches), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 17, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 20, jl_Exception, [], 0, 3, 0, 0, 0,
otcir_MethodCaller$forJs$lambda$_1_0, 0, jl_Object, [otcir_MethodCaller], 0, 3, 0, 0, 0,
ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, 0,
jur_NonCapFSet, "NonCapFSet", 17, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
jur_AheadFSet, "AheadFSet", 17, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
jur_BehindFSet, "BehindFSet", 17, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jur_AtomicFSet, "AtomicFSet", 17, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
jur_FinalSet, "FinalSet", 17, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_EmptySet, "EmptySet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find0", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
jur_JointSet, "JointSet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first1", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_NonCapJointSet, "NonCapJointSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 17, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 17, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 17, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
jur_PositiveLookBehind, "PositiveLookBehind", 17, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jur_NegativeLookBehind, "NegativeLookBehind", 17, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jur_SingleSet, "SingleSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find0", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first1", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jl_NegativeArraySizeException, "NegativeArraySizeException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0]);
$rt_metadata([jl_ArrayStoreException, "ArrayStoreException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, 0, ["$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$getInstance0", $rt_wrapFunction0(jur_AbstractCharClass_getInstance), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI)],
ju_MissingResourceException, "MissingResourceException", 16, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_CharClass, "CharClass", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass_contains), "$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance0", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$first1", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 17, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 17, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 17, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_AltQuantifierSet, "AltQuantifierSet", 17, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 17, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, 0, 0,
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_Quantifier, "Quantifier", 17, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
jur_CompositeRangeSet, "CompositeRangeSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first1", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
jur_SupplRangeSet, "SupplRangeSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first1", $rt_wrapFunction1(jur_SupplRangeSet_first), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 17, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
jur_UCIRangeSet, "UCIRangeSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
jur_RangeSet, "RangeSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first1", $rt_wrapFunction1(jur_RangeSet_first)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first1", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
jur_CharSet, "CharSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$charCount", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find0", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$first1", $rt_wrapFunction1(jur_CharSet_first)],
jur_UCICharSet, "UCICharSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
jur_CICharSet, "CICharSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_DecomposedCharSet, "DecomposedCharSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$first1", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 17, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 17, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 17, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 17, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 17, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 17, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 17, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 17, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 17, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 17, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 17, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 17, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 17, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 17, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 17, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 17, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 17, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 17, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 17, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
jur_SOLSet, "SOLSet", 17, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
jur_WordBoundary, "WordBoundary", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
jur_PreviousMatch, "PreviousMatch", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)]]);
$rt_metadata([jur_EOLSet, "EOLSet", 17, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
jur_EOISet, "EOISet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
jur_DotAllSet, "DotAllSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
jur_DotSet, "DotSet", 17, jur_JointSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_UEOLSet, "UEOLSet", 17, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 17, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_BackReferenceSet, "BackReferenceSet", 17, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find0", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first1", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 17, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert2", $rt_wrapFunction4(jl_StringBuffer_insert0), "$append7", $rt_wrapFunction3(jl_StringBuffer_append0), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert1", $rt_wrapFunction2(jl_StringBuffer_insert1), "$insert", $rt_wrapFunction2(jl_StringBuffer_insert)],
jur_SequenceSet, "SequenceSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find0", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first1", $rt_wrapFunction1(jur_SequenceSet_first)],
jur_UCISequenceSet, "UCISequenceSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_CISequenceSet, "CISequenceSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jur_UCISupplCharSet, "UCISupplCharSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 17, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
jur_SupplCharSet, "SupplCharSet", 17, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find0", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$first1", $rt_wrapFunction1(jur_SupplCharSet_first)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, 0,
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 39, jl_Object, [], 0, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0,
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 20, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$1, "AbstractCharClass$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
jur_CharClass$18, "CharClass$18", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$6_contains)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$9_contains)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$10_contains)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$14_contains)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$16_contains)],
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, 0,
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otjf_JSMapping, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
otjf_JSSupplier, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2, 0, jl_Object, [otjf_JSSupplier], 0, 3, 0, 0, 0,
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0]);
$rt_metadata([cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
cgxgbt_TeaWindowListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjc_JSPromise$Executor, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0, 0, jl_Object, [otjc_JSPromise$Executor], 0, 3, 0, 0, 0,
otji_IDBObjectStoreParameters, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, 0,
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [jl_Appendable], 0, 3, 0, 0, 0,
otcic_JsConsolePrintStream, 0, ji_PrintStream, [], 1, 3, 0, 0, 0,
otcic_JSStderrPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStderrPrintStream_print)],
cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, 0,
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otji_JSWrapper$Helper, 0, jl_Object, [], 0, 0, 0, otji_JSWrapper$Helper_$callClinit, 0,
otjc_JSUndefined, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjc_JSFinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_0, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_1, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 17, jur_SingleSet, [], 0, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
cgxgbt_TeaApplication$6, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$6_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jur_UnicodeCategory, "UnicodeCategory", 17, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 17, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$2, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
otcic_JSStdoutPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStdoutPrintStream_print)],
cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$4, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbtdt_TypedArrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cgxgbtf_FileData, "FileData", 6, jl_Object, [], 0, 3, 0, 0, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_TypedArray, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
otjt_Int8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbgu_GdxRuntimeException, "GdxRuntimeException", 10, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ju_NoSuchElementException, "NoSuchElementException", 16, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$5_onSuccess)],
cgxgbta_AssetType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbtfi_IndexedDBFileData, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
ju_ConcurrentModificationException, "ConcurrentModificationException", 16, jl_RuntimeException, [], 0, 3, 0, 0, 0,
dcgb_Manager, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgb_ObjectManager, 0, dcgb_Manager, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$1, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$3, 0, jl_Object, [], 32, 0, 0, cgxgbta_AssetDownloadImpl$3_$callClinit, 0,
dcgb_GameBase, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgb_GameLifeCycle, 0, jl_Object, [dcgb_GameBase], 0, 3, 0, 0, ["$init", $rt_wrapFunction0(dcgb_GameLifeCycle_init), "$update", $rt_wrapFunction0(dcgb_GameLifeCycle_update), "$dispose", $rt_wrapFunction0(dcgb_GameLifeCycle_dispose), "$test", $rt_wrapFunction0(dcgb_GameLifeCycle_test), "$render", $rt_wrapFunction0(dcgb_GameLifeCycle_render)],
dcgb_GameObject, 0, dcgb_GameLifeCycle, [], 1, 3, 0, 0, 0,
dcgc_RootObject, "RootObject", 25, dcgb_GameObject, [], 0, 3, 0, 0, 0,
otjb_TimerHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, 0,
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgbm_Camera2D, "Camera2D", 30, dcgb_GameObject, [], 0, 3, 0, dcgbm_Camera2D_$callClinit, ["$test", $rt_wrapFunction0(dcgbm_Camera2D_test), "$update", $rt_wrapFunction0(dcgbm_Camera2D_update)],
dcgbmc_GameComponent, 0, dcgb_GameObject, [], 1, 3, 0, 0, 0]);
$rt_metadata([dcgbmc_SceneBase, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmc_SceneComponent, 0, dcgbmc_GameComponent, [dcgbmc_SceneBase], 1, 3, 0, 0, 0,
dcgbmc_Widget, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbm_UserInterface, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmw_Scene, 0, dcgbmc_SceneComponent, [dcgbmc_Widget, dcgbm_UserInterface], 0, 3, 0, 0, 0,
dcgccs_StandardScene, "StandardScene", 27, dcgbmw_Scene, [], 0, 3, 0, 0, ["$init", $rt_wrapFunction0(dcgccs_StandardScene_init)],
dcgb_SceneManager, 0, dcgb_Manager, [], 0, 3, 0, dcgb_SceneManager_$callClinit, 0,
dcgb_Storage, 0, jl_Object, [], 0, 3, 0, dcgb_Storage_$callClinit, 0,
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, 0,
juf_Predicate, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgb_ObjectManager$render$lambda$_9_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$test0", $rt_wrapFunction1(dcgb_ObjectManager$render$lambda$_9_0_test)],
juf_ToIntFunction, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgb_ObjectManager$render$lambda$_9_1, 0, jl_Object, [juf_ToIntFunction], 0, 3, 0, 0, 0,
juf_Consumer, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgb_ObjectManager$render$lambda$_9_2, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, 0,
juc_CopyOnWriteArrayList, 0, jl_Object, [ju_List, ju_RandomAccess, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
dcgbmw_Background, "Background", 33, dcgbmc_GameComponent, [dcgbmc_Widget, dcgbm_UserInterface], 0, 3, 0, 0, ["$render", $rt_wrapFunction0(dcgbmw_Background_render)],
dcgccss_TileColorManager, 0, dcgb_Manager, [], 0, 3, 0, dcgccss_TileColorManager_$callClinit, 0,
dcgbmc_SizeComponent, 0, dcgbmc_GameComponent, [], 0, 3, 0, 0, 0,
dcgbmc_DrawableComponent, 0, dcgbmc_SizeComponent, [], 0, 3, 0, 0, ["$dispose", $rt_wrapFunction0(dcgbmc_DrawableComponent_dispose)],
dcgccso_TileBoard, "TileBoard", 28, dcgbmc_DrawableComponent, [], 0, 3, 0, dcgccso_TileBoard_$callClinit, ["$init", $rt_wrapFunction0(dcgccso_TileBoard_init), "$render", $rt_wrapFunction0(dcgccso_TileBoard_render)],
dcgccso_Tile, "Tile", 28, dcgbmc_DrawableComponent, [], 0, 3, 0, dcgccso_Tile_$callClinit, ["$init", $rt_wrapFunction0(dcgccso_Tile_init), "$render", $rt_wrapFunction0(dcgccso_Tile_render)],
dcgccsf_TileType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jl_Record, 0, jl_Object, [], 1, 3, 0, 0, 0,
dcgccsf_TilePosition, 0, jl_Record, [], 32772, 3, 0, 0, 0,
dcgccso_ShapeSelectBar, "ShapeSelectBar", 28, dcgbmc_DrawableComponent, [], 0, 3, 0, 0, ["$init", $rt_wrapFunction0(dcgccso_ShapeSelectBar_init), "$render", $rt_wrapFunction0(dcgccso_ShapeSelectBar_render), "$update", $rt_wrapFunction0(dcgccso_ShapeSelectBar_update)],
dcgccso_Controller, "Controller", 28, dcgbmc_GameComponent, [], 0, 3, 0, 0, ["$init", $rt_wrapFunction0(dcgccso_Controller_init), "$update", $rt_wrapFunction0(dcgccso_Controller_update), "$render", $rt_wrapFunction0(dcgccso_Controller_render), "$test", $rt_wrapFunction0(dcgccso_Controller_test)],
dcgbmc_RenderableWidget, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmc_SurfaceComponent, "SurfaceComponent", 31, dcgbmc_DrawableComponent, [dcgbmc_Widget, dcgbmc_RenderableWidget], 0, 3, 0, 0, ["$render", $rt_wrapFunction0(dcgbmc_SurfaceComponent_render), "$dispose", $rt_wrapFunction0(dcgbmc_SurfaceComponent_dispose)],
dcgbmf_Size, 0, jl_Record, [], 32772, 3, 0, 0, 0,
dcgbmf_RenderPosition, 0, jl_Enum, [], 12, 3, 0, 0, 0,
dcgbmf_Padding, 0, jl_Record, [], 32772, 3, 0, 0, 0,
dcgbmf_RenderFormat, 0, jl_Enum, [], 12, 3, 0, 0, 0,
dcgbc_Colors, 0, jl_Object, [], 0, 3, 0, dcgbc_Colors_$callClinit, 0,
dcgbmc_InputComponent, 0, dcgbmc_SurfaceComponent, [dcgbmc_Widget], 0, 3, 0, 0, ["$update", $rt_wrapFunction0(dcgbmc_InputComponent_update)],
dcgbmc_ImageComponent, 0, dcgbmc_InputComponent, [], 0, 3, 0, 0, 0,
dcgbmw_Widget, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmw_ImageButton, "ImageButton", 33, dcgbmc_ImageComponent, [dcgbmw_Widget, dcgbm_UserInterface], 0, 3, 0, 0, ["$init", $rt_wrapFunction0(dcgbmw_ImageButton_init), "$render", $rt_wrapFunction0(dcgbmw_ImageButton_render)],
dcgbs_Data, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgbu_GraphicUtil, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgbma_Action, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbma_VoidAction, 0, jl_Object, [dcgbma_Action], 3, 3, 0, 0, 0,
dcgccs_StandardScene$_init_$lambda$_0_0, 0, jl_Object, [dcgbma_VoidAction], 0, 3, 0, 0, 0,
dcgbmc_TextComponent, 0, dcgbmc_SizeComponent, [dcgbmc_RenderableWidget], 1, 3, 0, 0, ["$dispose", $rt_wrapFunction0(dcgbmc_TextComponent_dispose)],
dcgbmw_Text, 0, dcgbmc_TextComponent, [dcgbmc_Widget, dcgbm_UserInterface], 0, 3, 0, 0, 0,
dcgccso_Score, "Score", 28, dcgbmw_Text, [], 0, 3, 0, 0, ["$update", $rt_wrapFunction0(dcgccso_Score_update), "$render", $rt_wrapFunction0(dcgccso_Score_render)],
dcgbmc_ThreadComponent, "ThreadComponent", 31, dcgbmc_GameComponent, [], 0, 3, 0, 0, 0,
dcgb_TransferSceneException, "TransferSceneException", 29, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0]);
$rt_metadata([cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, 0,
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, 0,
ju_Comparator$comparingInt$lambda$_14_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$compare", $rt_wrapFunction2(ju_Comparator$comparingInt$lambda$_14_0_compare)],
cbggg_ModelBatch, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 0, 3, 0, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgb_Constant, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgccss_ItemManager, 0, dcgb_Manager, [], 0, 3, 0, dcgccss_ItemManager_$callClinit, 0,
dcgbs_FileHandleException, "FileHandleException", 34, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbggg_PixmapNativeInterface, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, 0,
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_PixmapTextureData, "PixmapTextureData", 13, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$disposePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_disposePixmap), "$consumePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_consumePixmap), "$getWidth", $rt_wrapFunction0(cbggg_PixmapTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_PixmapTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_PixmapTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_PixmapTextureData_useMipMaps),
"$isManaged", $rt_wrapFunction0(cbggg_PixmapTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_PixmapTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_PixmapTextureData_consumeCustomData), "$isPrepared", $rt_wrapFunction0(cbggg_PixmapTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_PixmapTextureData_prepare)],
dcgb_ObjectManager$get$lambda$_5_0, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, 0,
dcgb_ObjectManager$get$lambda$_5_1, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$test0", $rt_wrapFunction1(dcgb_ObjectManager$get$lambda$_5_1_test)],
ju_Optional, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggu_ModelBuilder, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Attributes, 0, jl_Object, [jl_Iterable, ju_Comparator, jl_Comparable], 0, 3, 0, 0, 0,
cbggg_Environment, 0, cbggg_Attributes, [], 0, 3, 0, 0, 0,
jur_Matcher$1, "Matcher$1", 17, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, 0,
dcgbu_Util, 0, jl_Object, [], 1, 3, 0, 0, 0,
dcgbu_ColorUtil, 0, dcgbu_Util, [], 0, 3, 0, 0, 0,
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
dcgbu_TypeUtil, 0, dcgbu_Util, [], 0, 3, 0, 0, 0,
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_Gdx2DPixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, 0,
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, 0,
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
otjde_Registration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, 0,
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, 0,
dcgbmf_Gesture, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmc_DraggableComponent, 0, dcgbmc_DrawableComponent, [dcgbmf_Gesture], 0, 3, 0, dcgbmc_DraggableComponent_$callClinit, 0,
dcgccso_Shape, 0, dcgbmc_DraggableComponent, [], 0, 3, 0, dcgccso_Shape_$callClinit, 0,
dcgbmca_Animation, 0, jl_Object, [], 3, 3, 0, 0, 0,
dcgbmca_ShockAnimation, "ShockAnimation", 32, dcgbmc_GameComponent, [dcgbmca_Animation], 0, 3, 0, 0, ["$update", $rt_wrapFunction0(dcgbmca_ShockAnimation_update)],
dcgbu_TypeUtil$1, 0, jl_Object, [], 32, 0, 0, dcgbu_TypeUtil$1_$callClinit, 0,
cbggg_FileTextureData, "FileTextureData", 13, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$isPrepared", $rt_wrapFunction0(cbggg_FileTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FileTextureData_prepare), "$consumePixmap", $rt_wrapFunction0(cbggg_FileTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_FileTextureData_disposePixmap), "$getWidth", $rt_wrapFunction0(cbggg_FileTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_FileTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_FileTextureData_getFormat),
"$useMipMaps", $rt_wrapFunction0(cbggg_FileTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_FileTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_FileTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_FileTextureData_consumeCustomData)],
cbggg_Gdx2DPixmapNative, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgu_FlushablePool, 0, cbgu_Pool, [], 1, 3, 0, 0, 0,
cbggg_ModelBatch$RenderablePool, 0, cbgu_FlushablePool, [], 0, 3, 0, 0, 0,
cbgggu_RenderableSorter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggu_DefaultRenderableSorter, 0, jl_Object, [cbgggu_RenderableSorter, ju_Comparator], 0, 3, 0, 0, 0]);
$rt_metadata([cbgggu_RenderContext, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggu_TextureBinder, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggu_DefaultTextureBinder, 0, jl_Object, [cbgggu_TextureBinder], 4, 3, 0, 0, 0,
cbgggu_ShaderProvider, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbgggu_BaseShaderProvider, 0, jl_Object, [cbgggu_ShaderProvider], 1, 3, 0, 0, 0,
cbgggu_DefaultShaderProvider, 0, cbgggu_BaseShaderProvider, [], 0, 3, 0, 0, 0,
cbgg_Mesh, "Mesh", 12, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Mesh_$callClinit, 0,
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgggf_FreeTypeFontGenerator, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggf_FreeTypeFontGenerator$FreeTypeFontParameter, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, 0,
cbggg_ShaderProgram, "ShaderProgram", 13, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, 0,
cbgggf_FreeTypeFontGenerator$Hinting, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgggu_TextureDescriptor, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
cbgggs_DefaultShader$Config, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, 0,
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, 0,
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jn_ByteBuffer_toString), "$hashCode", $rt_wrapFunction0(jn_ByteBuffer_hashCode), "$equals", $rt_wrapFunction1(jn_ByteBuffer_equals), "$limit", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position", $rt_wrapFunction1(jn_ByteBuffer_position), "$compareTo0", $rt_wrapFunction1(jn_ByteBuffer_compareTo)],
cbgggf_FreeType, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position", $rt_wrapFunction1(jn_FloatBuffer_position)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_JSBufferHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_ArrayBufferViewProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_ByteBufferJsImpl, "ByteBufferJsImpl", 18, jn_ByteBuffer, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$capacityImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_ByteBufferJsImpl_getArrayBufferView)],
cbgggf_FreeType$Pointer, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgggf_FreeType$Library, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgu_LongMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgggf_FreeType$Face, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggf_FreeType$GlyphSlot, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, 0,
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, 0,
jn_IntBufferOverTypedArray, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_IntBufferOverTypedArray_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverTypedArray_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverTypedArray_capacityImpl), "$putImpl4", $rt_wrapFunction4(jn_IntBufferOverTypedArray_putImpl), "$putImpl3", $rt_wrapFunction4(jn_IntBufferOverTypedArray_putImpl0)],
otjt_Int32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0]);
$rt_metadata([jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, 0,
jn_FloatBufferOverTypedArray, "FloatBufferOverTypedArray", 18, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverTypedArray_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_capacityImpl), "$putImpl0", $rt_wrapFunction4(jn_FloatBufferOverTypedArray_putImpl0), "$putImpl", $rt_wrapFunction4(jn_FloatBufferOverTypedArray_putImpl),
"$getArrayBufferView0", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_getArrayBufferView)],
otjt_Float32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, 0,
jn_ShortBufferOverTypedArray, "ShortBufferOverTypedArray", 18, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_readOnly), "$getElement1", $rt_wrapFunction1(jn_ShortBufferOverTypedArray_getElement), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_capacityImpl), "$putImpl2", $rt_wrapFunction4(jn_ShortBufferOverTypedArray_putImpl), "$putImpl1", $rt_wrapFunction4(jn_ShortBufferOverTypedArray_putImpl0), "$getArrayBufferView0",
$rt_wrapFunction0(jn_ShortBufferOverTypedArray_getArrayBufferView)],
otjt_Int16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jus_BaseStream, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
jus_Stream, 0, jl_Object, [jus_BaseStream], 3, 3, 0, 0, 0,
jusi_SimpleStreamImpl, 0, jl_Object, [jus_Stream], 1, 3, 0, 0, 0,
jusi_StreamOverSpliterator, 0, jusi_SimpleStreamImpl, [], 0, 3, 0, 0, 0,
jn_IntBufferOverDataView, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_IntBufferOverDataView_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverDataView_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverDataView_putElement), "$putImpl3", $rt_wrapFunction4(jn_IntBufferOverDataView_putImpl), "$putImpl4", $rt_wrapFunction4(jn_IntBufferOverDataView_putImpl0), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverDataView_capacityImpl)],
jn_FloatBufferOverDataView, "FloatBufferOverDataView", 18, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_FloatBufferOverDataView_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverDataView_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverDataView_putElement), "$putImpl", $rt_wrapFunction4(jn_FloatBufferOverDataView_putImpl0), "$putImpl0", $rt_wrapFunction4(jn_FloatBufferOverDataView_putImpl), "$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverDataView_capacityImpl),
"$getArrayBufferView0", $rt_wrapFunction0(jn_FloatBufferOverDataView_getArrayBufferView)],
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
ji_IOException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
jn_ShortBufferOverDataView, "ShortBufferOverDataView", 18, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_ShortBufferOverDataView_readOnly), "$getElement1", $rt_wrapFunction1(jn_ShortBufferOverDataView_getElement), "$putImpl1", $rt_wrapFunction4(jn_ShortBufferOverDataView_putImpl), "$putImpl2", $rt_wrapFunction4(jn_ShortBufferOverDataView_putImpl0), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverDataView_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_ShortBufferOverDataView_getArrayBufferView)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 18, jl_UnsupportedOperationException, [], 0, 3, 0, 0, 0,
jn_BufferUnderflowException, "BufferUnderflowException", 18, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_TeaBlob, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
dcgbmc_DrawingException, "DrawingException", 31, jl_RuntimeException, [], 0, 3, 0, 0, 0,
dcgb_SoundsManager, 0, dcgb_Manager, [], 0, 3, 0, dcgb_SoundsManager_$callClinit, 0,
cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
cbg_Files$FileType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_BitmapFont$BitmapFontData, "BitmapFont$BitmapFontData", 14, jl_Object, [], 0, 3, 0, 0, 0,
cbgggf_FreeTypeFontGenerator$FreeTypeBitmapFontData, 0, cbggg_BitmapFont$BitmapFontData, [cbgu_Disposable], 0, 3, 0, 0, 0,
otcin_Buffers, 0, jl_Object, [], 4, 3, 0, 0, 0,
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
cbgu_StreamUtils$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 14, jl_Object, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
jn_NativeBuffer, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, 0,
otjt_Uint8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
otjt_Uint16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jusi_WrappingStreamImpl, 0, jusi_SimpleStreamImpl, [], 1, 3, 0, 0, 0,
jusi_FilteringStreamImpl, 0, jusi_WrappingStreamImpl, [], 0, 3, 0, 0, 0,
cgxgbt_TeaFileHandle$1, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaFileHandle$1_$callClinit, 0,
ju_ListIterator, 0, jl_Object, [ju_Iterator], 3, 3, 0, 0, 0,
juc_CopyOnWriteArrayList$ListIteratorImpl, 0, jl_Object, [ju_ListIterator], 0, 0, 0, 0, 0,
ju_Spliterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jusi_SpliteratorOverCollection, 0, jl_Object, [ju_Spliterator], 0, 3, 0, 0, 0,
cbggg_Renderable, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_BufferOverflowException, "BufferOverflowException", 18, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, 0,
cbggg_PixmapPacker, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_PixmapPacker_$callClinit, 0,
cbgu_LongMap$MapIterator, 0, jl_Object, [], 0, 0, 0, 0, 0]);
$rt_metadata([cbgu_LongMap$Values, 0, cbgu_LongMap$MapIterator, [jl_Iterable, ju_Iterator], 0, 3, 0, 0, 0,
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 19, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jusi_SortedStreamImpl, 0, jusi_SimpleStreamImpl, [], 0, 3, 0, 0, 0,
jusi_FindFirstConsumer, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$test0", $rt_wrapFunction1(jusi_FindFirstConsumer_test)],
cbggg_PixmapPacker$PackStrategy, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_PixmapPacker$GuillotineStrategy, 0, jl_Object, [cbggg_PixmapPacker$PackStrategy], 0, 3, 0, 0, ["$pack1", $rt_wrapFunction3(cbggg_PixmapPacker$GuillotineStrategy_pack)],
cbggg_PixmapPacker$SkylineStrategy, 0, jl_Object, [cbggg_PixmapPacker$PackStrategy], 0, 3, 0, 0, ["$pack1", $rt_wrapFunction3(cbggg_PixmapPacker$SkylineStrategy_pack)],
cbga_Sound, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cgxgbtwh_HowlSound, 0, jl_Object, [cbga_Sound], 0, 3, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, 0,
juf_IntFunction, 0, jl_Object, [], 3, 3, 0, 0, 0,
jusi_SortedStreamImpl$_init_$lambda$_0_0, 0, jl_Object, [juf_IntFunction], 0, 3, 0, 0, 0,
cbgggf_FreeTypeFontGenerator$1, 0, jl_Object, [], 32, 0, 0, cbgggf_FreeTypeFontGenerator$1_$callClinit, 0,
cbgggf_FreeType$Size, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, 0,
cbgggf_FreeType$SizeMetrics, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, 0,
cbgggf_FreeType$GlyphMetrics, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, 0,
cbgggf_FreeType$Stroker, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, 0,
cgxgbtwh_Howl, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_AssertionError, "AssertionError", 20, jl_Error, [], 0, 3, 0, 0, 0,
ju_Comparator$NaturalOrder, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$compare", $rt_wrapFunction2(ju_Comparator$NaturalOrder_compare)],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, 0,
jn_CharBufferOverTypedArray, 0, jn_CharBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_CharBufferOverTypedArray_readOnly), "$getChar", $rt_wrapFunction1(jn_CharBufferOverTypedArray_getChar), "$capacityImpl", $rt_wrapFunction0(jn_CharBufferOverTypedArray_capacityImpl), "$putImpl5", $rt_wrapFunction4(jn_CharBufferOverTypedArray_putImpl)],
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 19, jl_Error, [], 0, 3, 0, 0, 0,
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 19, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferOverflowException, "BufferOverflowException", 19, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_MalformedInputException, "MalformedInputException", 19, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 19, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
cbgu_Sort, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbgm_Rectangle_toString), "$hashCode", $rt_wrapFunction0(cbgm_Rectangle_hashCode), "$equals", $rt_wrapFunction1(cbgm_Rectangle_equals)],
cbggg_PixmapPacker$PixmapPackerRectangle, "PixmapPacker$PixmapPackerRectangle", 14, cbgm_Rectangle, [], 0, 3, 0, 0, 0,
cbggg_PixmapPacker$Page, 0, jl_Object, [], 0, 3, 0, 0, 0,
jusi_SimpleStreamImpl$ArrayFillingConsumer, 0, jl_Object, [juf_Predicate], 0, 0, 0, 0, ["$test0", $rt_wrapFunction1(jusi_SimpleStreamImpl$ArrayFillingConsumer_test)],
jusi_SimpleStreamImpl$toArray$lambda$_21_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, ["$test0", $rt_wrapFunction1(jusi_SimpleStreamImpl$toArray$lambda$_21_0_test)],
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, 0,
cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, 0, 0,
dcgbu_InputUtil, 0, dcgbu_Util, [], 0, 3, 0, 0, 0,
dcgccsf_ShapeType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
dcgccss_StateUtil, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([cgxgbta_AssetLoadImpl$6, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onSuccess)],
cbgggf_FreeType$Glyph, 0, cbgggf_FreeType$Pointer, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggf_FreeType$Bitmap, 0, cbgggf_FreeType$Pointer, [], 0, 3, 0, 0, 0,
jl_InstantiationException, "InstantiationException", 20, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jl_IllegalAccessException, "IllegalAccessException", 20, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
dcgbmc_SurfaceComponent$1, 0, jl_Object, [], 32, 0, 0, dcgbmc_SurfaceComponent$1_$callClinit, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
dcgccsf_ShapeType$1, 0, jl_Object, [], 32, 0, 0, dcgccsf_ShapeType$1_$callClinit, 0,
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimSort, 0, jl_Object, [], 0, 0, 0, 0, 0,
jusi_SimpleStreamImpl$forEachOrdered$lambda$_19_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, 0,
jusi_FilteringStreamImpl$wrap$lambda$_1_0, 0, jl_Object, [juf_Predicate], 0, 3, 0, 0, 0,
jusi_StreamOverSpliterator$AdapterAction, 0, jl_Object, [juf_Consumer], 0, 0, 0, 0, 0,
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, 0,
dcgccso_Effect, 0, dcgbmc_GameComponent, [], 0, 3, 0, 0, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Byte, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
jl_ArrayIndexOutOfBoundsException, "ArrayIndexOutOfBoundsException", 20, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
cbggg_PixmapPacker$GuillotineStrategy$GuillotinePage, "PixmapPacker$GuillotineStrategy$GuillotinePage", 14, cbggg_PixmapPacker$Page, [], 0, 0, 0, 0, 0,
cbggg_PixmapPacker$GuillotineStrategy$Node, 0, jl_Object, [], 4, 0, 0, 0, 0,
cbggg_PixmapPacker$SkylineStrategy$SkylinePage, "PixmapPacker$SkylineStrategy$SkylinePage", 14, cbggg_PixmapPacker$Page, [], 0, 0, 0, 0, 0,
cbggg_PixmapPacker$SkylineStrategy$SkylinePage$Row, "PixmapPacker$SkylineStrategy$SkylinePage$Row", 14, jl_Object, [], 0, 0, 0, 0, 0,
cbgm_Vector4, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
jn_LongBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
jn_DoubleBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cgxgbtf_FileDB$1, 0, ji_OutputStream, [], 0, 0, 0, 0, ["$close", $rt_wrapFunction0(cgxgbtf_FileDB$1_close)],
dcgccss_StateManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgccss_StateUtil$onShapeDragStop$lambda$_2_0, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$accept", $rt_wrapFunction1(dcgccss_StateUtil$onShapeDragStop$lambda$_2_0_accept)],
jn_CharBufferOverDataView, 0, jn_CharBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_CharBufferOverDataView_readOnly), "$getChar", $rt_wrapFunction1(jn_CharBufferOverDataView_getChar), "$putImpl5", $rt_wrapFunction4(jn_CharBufferOverDataView_putImpl)],
jn_LongBufferImpl, 0, jn_LongBuffer, [], 1, 0, 0, 0, 0,
jn_LongBufferOverDataView, 0, jn_LongBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_LongBufferOverDataView_readOnly), "$getElement2", $rt_wrapFunction1(jn_LongBufferOverDataView_getElement), "$putImpl6", $rt_wrapFunction4(jn_LongBufferOverDataView_putImpl)],
jn_LongBufferOverTypedArray, 0, jn_LongBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_LongBufferOverTypedArray_readOnly), "$getElement2", $rt_wrapFunction1(jn_LongBufferOverTypedArray_getElement), "$putImpl6", $rt_wrapFunction4(jn_LongBufferOverTypedArray_putImpl)],
jn_DoubleBufferImpl, 0, jn_DoubleBuffer, [], 1, 0, 0, 0, 0,
jn_DoubleBufferOverDataView, 0, jn_DoubleBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_DoubleBufferOverDataView_readOnly), "$getElement3", $rt_wrapFunction1(jn_DoubleBufferOverDataView_getElement), "$putImpl7", $rt_wrapFunction4(jn_DoubleBufferOverDataView_putImpl)],
jn_DoubleBufferOverTypedArray, 0, jn_DoubleBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_DoubleBufferOverTypedArray_readOnly), "$getElement3", $rt_wrapFunction1(jn_DoubleBufferOverTypedArray_getElement), "$putImpl7", $rt_wrapFunction4(jn_DoubleBufferOverTypedArray_putImpl)],
cbggg_Attribute, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
cbggga_BlendingAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_BlendingAttribute_$callClinit, 0,
cbgggm_MeshPart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_PixmapPacker$Page$1, "PixmapPacker$Page$1", 14, cbgg_Texture, [], 0, 0, 0, 0, ["$dispose", $rt_wrapFunction0(cbggg_PixmapPacker$Page$1_dispose)],
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Graphics$BufferFormat, 0, jl_Object, [], 0, 3, 0, 0, 0,
dcgbmc_SceneComponent$loadObjects$lambda$_4_0, 0, jl_Object, [juf_Consumer], 0, 3, 0, 0, ["$accept", $rt_wrapFunction1(dcgbmc_SceneComponent$loadObjects$lambda$_4_0_accept)],
dcgbmc_TextComponent$1, 0, jl_Object, [], 32, 0, 0, dcgbmc_TextComponent$1_$callClinit, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0, 0]);
let $rt_booleanArrayCls = $rt_arraycls($rt_booleancls),
$rt_charArrayCls = $rt_arraycls($rt_charcls),
$rt_byteArrayCls = $rt_arraycls($rt_bytecls),
$rt_shortArrayCls = $rt_arraycls($rt_shortcls),
$rt_intArrayCls = $rt_arraycls($rt_intcls),
$rt_longArrayCls = $rt_arraycls($rt_longcls),
$rt_floatArrayCls = $rt_arraycls($rt_floatcls);
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "start + count must be <= size: ", " + ", " <= ", "end can\'t be >= size: ", " >= ", "start can\'t be > end: ", " > ", "", "texture cannot be null.", "0", "GL_EXT_texture_filter_anisotropic", "New data must have the same managed status as the old data", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "index can\'t be >= size: ", "Array is empty.", "newSize must be >= 0: ", "[]",
", ", "key cannot be null.", "interface ", "class ", "<init>", ": ", "\n", "\tat ", "null", "Caused by: ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for integer type", "The value is too big for int type: ", "Illegal radix: ", "false", "true", "app", "db/assets", "high-performance", "canvas", "java.runtime.name", "userAgent", "os.name", "Windows", "OS X", "no OS", "Linux", ".html", "index.html", "index-wasm.html", "index-debug.html",
"pagehide", "resize", "assets.txt", "[root]", "camera", "standard-scene", "scene: ", " is not in the registered scene list", "gdx.wasm.js", "howler.js", "WEB_SCRIPT_PATH", "WEB_ASSET_PATH", "Class cannot be created (missing no-arg constructor): ", "bounces cannot be < 2 or > 5: ", "INIT", "PRELOAD_ASSETS", "DOWNLOAD_ASSETS", "APP_CREATE", "APP_LOOP", "object", "function", "string", "number", "undefined", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "/", "path.separator", ":",
"line.separator", "java.io.tmpdir", "/tmp", "java.vm.version", "user.home", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "px", "Loading asset: ", "Unsupported asset type ", "assets/", "scripts/", "Loading script: ", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "IndexedDB is not supported in this browser", "Type ", " is not supported", "hidden", "visible", "Unable to create new instance: ",
"object cannot be null.", "objects cannot be null.", "capacity must be >= 0: ", "The required capacity is too large: ", "glGetFloat not supported by WebGL backend", "glGetInteger not supported by WebGL backend", "GL error: ", "Invalid version string: ", "\\.", "Error parsing number: ", ", assuming: ", "libGDX GL", "Android", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", " REMOVE FOLDER: ", " REMOVE FILE: ", " Path: ", " Error: ", " CONTAINS FOLDER: ", " CONTAINS FILE: ", ".", "./", " GET FOLDER: ",
" GET FILE: ", " Size: ", " PUT FILE: ", " Bytes: ", "Cannot put an empty folder name", " PUT FOLDER: ", "PUT FOLDER DB: ", "PUT FILE DB: ", "REMOVE FILE DB: ", "OpenGL", "GLES", "NONE", "Patter is null", "IndexedDB Error opening database: ", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "fSet", "Is", "In", "NonCapFSet", "AheadFSet", "BehindFSet", "AtomicFSet", "FinalSet", "<Empty set>", "JointSet", "NonCapJointSet",
"PosLookaheadJointSet", "NegLookaheadJointSet", "PosBehindJointSet", "NegBehindJointSet", "<Quant>", "<GroupQuant>", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart",
"javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic",
"EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators",
"MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement",
"KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea",
"CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "posFSet",
" ", "^ ", "range:", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "UCI range:", "decomposed Hangul syllable:", "UCI ", "CI ", "decomposed char:", "<DotAllQuant>", "<DotQuant>", "<SOL>", "WordBoundary", "PreviousMatch", "<EOL>", "EOI", "^", "DotAll", "<Unix MultiLine $>", "<MultiLine $>", "CI back reference: ", "back reference: ", "UCI back reference: ", "sequence: ", "UCI sequence: ", "CI sequence: ", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "main", "success", "failure", "IndexedDB Error cursor",
"Script download success: ", "Script download failed: ", "#iterator() cannot be used nested.", "No support for buffer ", "Should never been thrown", "Invalid assets description file. ", "1", "c", "l", "\\", "Binary", "b", "Directory", "IndexedDB Error putting file: ", "Index is ", ", size is ", "SpriteBatch.end must be called before begin.", "Asset download failed: ", "Asset download success: ", "<>", "standard-background", "standard/square", "standard/tile-select-bar", "standard/controller", "standard/replay-button-background",
"Pixmap is null, cannot set color.", "Pixmap is null, cannot call done() without drawing.", "replay.png", "standard/replay", "standard/score", "wood", "wood.mp3", "--", "Illegal arguments", "block_128_9.png", "standard/tile", "EMPTY", "DISPLAYED", "COUNT_DOWN", "x: ", ", y: ", " out of bound !", "SurfaceObject is already done(), no further modification allowed", "Unexpected value: ", "TOP_LEFT", "TOP_CENTER", "TOP_RIGHT", "CENTER_RIGHT", "CENTER", "CENTER_LEFT", "BOTTOM_LEFT", "BOTTOM_CENTER", "BOTTOM_RIGHT",
"CUSTOM", "RGBA_8", "RGBA_4", "RGB_8", "RGB_565", "ALPHA", "INTENSITY", "LUMINANCE_ALPHA", "#F3EAC6", "#F6F1D3", "#DFDAD8", "#FFF2EF", "#FAD6D6", "#FFE2CC", "#FFDAC1", "#FCE1E4", "#F6CED8", "#F1C6D4", "#E6C0B3", "#D8BCC5", "#D2B1A3", "#C5B0A0", "#B6A29A", "#DECBAA", "#D3B88C", "#E0B75E", "#D9A24E", "#A16B47", "#B17B5C", "#8F5A3C", "#6C3E2A", "#554C4A", "#A82E33", "#FF6F61", "#A9B8D3", "#C1E5F2", "#B0D0D3", "#A1C6C8", "#B2DFE4", "#A2D8D0", "#ACCFCB", "#CDEDEA", "#AED9E0", "#93A8AC", "#3D4D5C", "#5B6C7D", "#3A5A8A",
"#1E90FF", "#00BFFF", "#D6D6D6", "#C0C0C0", "#A0A0A0", "#A8A8A8", "#B4B8B1", "#A3B1A8", "#7E9485", "#597B71", "#449F7F", "#66CDAA", "#83C8B0", "#A8D5BA", "#D1E2B8", "#D4E8B3", "#BCCCE0", "#EADCF6", "#C9C2E1", "#BFA2CC", "#D8B7DD", "#6A4C8C", "#8C8E9F", "#4B3F3F", "Error reading file: ", "scaleX cannot be 0.", "scaleY cannot be 0.", "Component already done(), no further modification allowed.", "font/Roboto/static/Roboto-Regular.ttf", "Couldn\'t initialize FreeType library", "Couldn\'t load font, FreeType error code: ",
"Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attributes must be >= 1", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n", "#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}",
"Error compiling shader: ", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", ")", "u_projTrans", "u_texture", "fromIndex(", ") > toIndex(", "shape", "standard/shock-animation", "File is null, it does not exist: ", "Pixmap already disposed!", "unknown format: ", "Unknown Gdx2DPixmap Format: ", "NearestNeighbour", "BiLinear", "This TextureData implementation does not upload data itself",
"prepare() must not be called on a PixmapTextureData instance as it is already prepared.", "#", "Invalid hex color format: ", "Unsupported SurfaceFormat: ", "None", "SourceOver", "Unknown Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "=> no shape placeable", "<<<< GameOver !", "Already prepared", "Call prepare() before calling getPixmap()", "Can only free direct buffer", "Nearest",
"Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "MirroredRepeat", "ClampToEdge", "Repeat", "Unable to create a font with no texture regions.", "If no regions are specified, the font data must have an images path.", "The specified font must contain at least one texture page.", "Couldn\'t set size for font", "-", "No x-height character found in font", "No cap character found in font", "Couldn\'t render char: ", "FreeTypeFontGenerator", "\u0000ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"!`?\'.,;:()[]{}<>|/@\\^$€-%+=#_&~* ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ",
"Fragment shader:\n", "Vertex shader\n", "An attempted fetch uniform from uncompiled shader \n", "No uniform with name \'", "\' in shader", "Slight", "Medium", "Full", "AutoSlight", "AutoMedium", "AutoFull", "No buffer allocated!", "IndexBufferObject cannot be used after it has been disposed.", "data must be a ByteBuffer or FloatBuffer", "dst must be a ByteBuffer", "Buffers must be of same type or ByteBuffer", "New position ", " is outside of range [0;", "Capacity is negative: ", " is not set", " at ", "[ByteBuffer position=",
", limit=", ", capacity=", ", mark ", "BIG_ENDIAN", "LITTLE_ENDIAN", "This buffer is not allocated in linear memory and does not wrap native JS buffer", "Couldn\'t create FreeType stroker, FreeType error code: ", "Couldn\'t get glyph, FreeType error code: ", "Index ", "FileType \'", "\' Not supported in web backend", "File not found: ", " (", "Classpath", "Internal", "External", "Absolute", "Local", "additionalCapacity must be >= 0: ", "Pixmap", "Custom", "texture width and height must be square when using mipmapping.",
"pos is ", "offset + length must be <= size: ", "�", "Replacement preconditions do not hold", "UTF-8", "Pixmap has already been packed with name: ", ".9", "Page size too small for pixmap.", "Page size too small for pixmap: ", "  ", "(.+)_(\\d+)$", "CLEAR", "CLEAR_WHITE", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET",
"CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "IGNORE", "REPLACE", "REPORT", "Action must be non-null", "-2147483648", "Malformed input of length ", "Unmappable characters of length ", "[", ",", "]", "can\'t not handle type: ", "N_1x2", "N_2x1", "N_2x2", "L_SHAPE_1_1", "L_SHAPE_2_1", "L_SHAPE_3_1", "L_SHAPE_4_1", "L_SHAPE_1_2", "L_SHAPE_2_2", "L_SHAPE_3_2", "L_SHAPE_4_2", "T_SHAPE_1_1", "T_SHAPE_1_2", "T_SHAPE_2_1", "T_SHAPE_2_2", "I_4x1", "I_1x4", "Z_SHAPE", "O_3x3", "PLUS_3x3", "BIG_L_3x3_1",
"BIG_L_3x3_2", "BIG_L_3x3_3", "BIG_L_3x3_4", "B_2x2_1", "B_2x2_2", "Error writing file: ", "Couldn\'t render glyph, FreeType error code: ", "Glyph is not yet rendered", "newAction must be non-null", "Comparison method violates its general contract!", "IndexedDB Error removing file: ", "blended", "Cannot register ", ", maximum registered attribute count reached."]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
let $rt_export_main = $rt_mainStarter(dcgt_TeaVMLauncher_main);
$rt_export_main.javaException = $rt_javaException;
let $rt_jso_marker = Symbol('jsoClass');
(() => {
    let c;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = $rt_callWithReceiver(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0);
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaInput_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$1_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$2_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$3_handleEvent$exported$0);
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = $rt_callWithReceiver(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0);
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.denied = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2);
    c.prompt = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1);
    c.granted = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$1_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$3_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2.prototype;
    c.get = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0);
    c = cgxgbta_AssetLoadImpl$getFile$lambda$_2_0.prototype;
    c.onExecute = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_0.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_1.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0);
    c = cgxgbta_AssetDownloadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$4.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$4_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$putFile$lambda$_2_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0_onTimer$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0_onTimer$exported$0);
    c = cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0);
})();
$rt_exports.main = $rt_export_main;
}));
